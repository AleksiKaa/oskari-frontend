/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes√§aika)) */ 
Oskari.clazz.define("Oskari.mapframework.ui.module.common.MapModule",function(a){this._id=a;this._controls={};this._layerPlugins={};this._projectionCode="EPSG:3067";this._supportedFormats={};this._map=null;this._mapScales=[];this._mapResolutions=[2000,1000,500,200,100,50,20,10,4,2,1,0.5,0.25];this._navigationHistoryTool=null;this._sandbox=null;this._stealth=false;this._pluginInstances={};this._navigationHistoryTool=new OpenLayers.Control.NavigationHistory();this._navigationHistoryTool.id="navigationhistory";this._localization=null},{getControls:function(){return this._controls},addMapControl:function(b,a){this._controls[b]=a;this._map.addControl(a)},getMapControl:function(a){return this._controls[a]},removeMapControl:function(a){this._map.removeControl(this._controls[a]);this._controls[a]=null;delete this._controls[a]},setLayerPlugin:function(b,a){this._layerPlugins[b]=a},getLayerPlugin:function(a){return this._layerPlugins[a]},getLayerPlugins:function(){return this._layerPlugins},clearNavigationHistory:function(){this._navigationHistoryTool.clear()},attachLoadingStatusToLayer:function(b,c){var a=this._sandbox;var e=this;var d=this.getLocalization("status_update_map")+" '"+c.getName()+"'...";b.events.register("loadstart",b,function(){a.request(e,a.getRequestBuilder("ActionStartRequest")(b.id,d,true))});b.events.register("loadend",b,function(){a.request(e,a.getRequestBuilder("ActionReadyRequest")(b.id,true))});b.events.register("loadcancel",b,function(){a.request(e,a.getRequestBuilder("ActionReadyRequest")(b.id,true))})},getName:function(){return this._id+"MapModule"},getSandbox:function(){return this._sandbox},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization("MapModule")}if(a){return this._localization[a]}return this._localization},init:function(a){a.printDebug("Initializing map module...#############################################");this._sandbox=a;for(p in this.eventHandlers){a.registerForEventByName(this,p)}this.requestHandlers={mapLayerUpdateHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule-plugin.request.MapLayerUpdateRequestHandler",a,this),mapMoveRequestHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule-plugin.request.MapMoveRequestHandler",a,this),clearHistoryHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule-plugin.controls.ClearHistoryHandler",a,this)};a.addRequestHandler("MapModulePlugin.MapLayerUpdateRequest",this.requestHandlers.mapLayerUpdateHandler);a.addRequestHandler("MapMoveRequest",this.requestHandlers.mapMoveRequestHandler);a.addRequestHandler("ClearHistoryRequest",this.requestHandlers.clearHistoryHandler);this.createMap();for(var c=0;c<this._mapResolutions.length;++c){var b=OpenLayers.Util.getScaleFromResolution(this._mapResolutions[c],"m");b=b*10000;b=Math.round(b);b=b/10000;this._mapScales.push(b)}this.createBaseLayer();this.addMapControl("navigationHistoryTool",this._navigationHistoryTool);this.getMapControl("navigationHistoryTool").activate();return this._map},getPluginInstances:function(){return this._pluginInstances},isPluginActivated:function(b){var a=this._pluginInstances[this.getName()+b];if(a){return true}return false},registerPlugin:function(b){var a=this._sandbox;b.setMapModule(this);var c=b.getName();a.printDebug("["+this.getName()+"] Registering "+c);b.register();this._pluginInstances[c]=b},unregisterPlugin:function(b){var a=this._sandbox;var c=b.getName();a.printDebug("["+this.getName()+"] Unregistering "+c);b.unregister();this._pluginInstances[c]=undefined;b.setMapModule(null)},startPlugin:function(b){var a=this._sandbox;var c=b.getName();a.printDebug("["+this.getName()+"] Starting "+c);b.startPlugin(a)},stopPlugin:function(b){var a=this._sandbox;var c=b.getName();a.printDebug("["+this.getName()+"] Starting "+c);b.stopPlugin(a)},startPlugins:function(a){for(var b in this._pluginInstances){a.printDebug("["+this.getName()+"] Starting "+b);this._pluginInstances[b].startPlugin(a)}},stopPlugins:function(a){for(var b in this._pluginInstances){a.printDebug("["+this.getName()+"] Starting "+b);this._pluginInstances[b].stopPlugin(a)
}},getStealth:function(){return this._stealth},setStealth:function(a){this._stealth=a},notifyAll:function(a,b){if(this._stealth){return}this._sandbox.notifyAll(a,b)},getMap:function(){return this._map},getMapImpl:function(){return this._panel},createMap:function(){var a=this._sandbox;var b=new OpenLayers.LonLat(0,0);this._map=new OpenLayers.Map({controls:[],units:"m",maxExtent:new OpenLayers.Bounds(0,0,10000000,10000000),resolutions:this._mapResolutions,projection:this._projectionCode,isBaseLayer:true,center:b,theme:null,zoom:0});return this._map},createBaseLayer:function(){var a=new OpenLayers.Layer("BaseLayer",{layerId:0,isBaseLayer:true,displayInLayerSwitcher:false});this._map.addLayer(a)},notifyStartMove:function(){if(this.getStealth()){return}this._sandbox.getMap().setMoving(true);var c=this._map.getCenter().lon;var b=this._map.getCenter().lat;var a=this._sandbox.getEventBuilder("MapMoveStartEvent")(c,b);this._sandbox.notifyAll(a)},moveMapToLanLot:function(b,d,c){if(d){this.adjustZoomLevel(d,true)}var a=(c===true);this._map.setCenter(b,this._map.getZoom(),a);this._updateDomain()},zoomIn:function(){this.adjustZoomLevel(1)},zoomOut:function(){this.adjustZoomLevel(-1)},zoomTo:function(a){this.setZoomLevel(a,false)},panMapEast:function(){var a=this._map.getSize();this.panMapByPixels(0.75*a.w,0)},panMapWest:function(){var a=this._map.getSize();this.panMapByPixels(-0.75*a.w,0)},panMapNorth:function(){var a=this._map.getSize();this.panMapByPixels(0,-0.75*a.h)},panMapSouth:function(){var a=this._map.getSize();this.panMapByPixels(0,0.75*a.h)},panMapByPixels:function(e,d,g,c){var f=this._map.getViewPortPxFromLonLat(this._map.getCenter());var a=new OpenLayers.Pixel(f.x+e,f.y+d);var b=this._map.getLonLatFromViewPortPx(a);if(!this.isValidLonLat(b.lon,b.lat)){return}this._map.pan(e,d);this._updateDomain();if(g!==true){this.notifyStartMove()}if(c!==true){this.notifyMoveEnd()}},moveMapByPixels:function(c,b,d,a){this._map.moveByPx(c,b);this._updateDomain();if(d!==true){this.notifyStartMove()}if(a!==true){this.notifyMoveEnd()}},centerMapByPixels:function(e,d,f,c){var a=new OpenLayers.Pixel(e,d);var b=this._map.getLonLatFromViewPortPx(a);if(!this.isValidLonLat(b.lon,b.lat)){return}this.moveMapToLanLot(b);if(f!==true){this.notifyStartMove()}if(c!==true){this.notifyMoveEnd()}},isValidLonLat:function(c,b){var a=true;if(b<6250000||b>8200000){a=false;return a}if(c<0||c>1350000){a=false}return a},zoomToExtent:function(c,b,a){this._map.zoomToExtent(c);this._updateDomain();if(b!==true){this.notifyStartMove()}if(a!==true){this.notifyMoveEnd()}},adjustZoomLevel:function(c,b){var a=this._getNewZoomLevel(c);this._map.zoomTo(a);this._updateDomain();if(b!==true){this.notifyMoveEnd()}},setZoomLevel:function(b,a){if(b<0||b>this._map.getNumZoomLevels){b=this._map.getZoom()}this._map.zoomTo(b);this._updateDomain();if(a!==true){this.notifyMoveEnd()}},_getNewZoomLevel:function(b){var a=this._map.getZoom()+b;if(a>=0&&a<=this._map.getNumZoomLevels()){return a}return this._map.getZoom()},notifyMoveEnd:function(){if(this.getStealth()){return}var a=this._sandbox;a.getMap().setMoving(false);var c=this._map.getCenter();this._updateDomain();var b=a.getEventBuilder("AfterMapMoveEvent")(c.lon,c.lat,this._map.getZoom(),false,this._map.getScale());a.notifyAll(b);a.doSniffing()},_updateDomain:function(){if(this.getStealth()){return}var a=this._sandbox;var d=a.getMap();var c=this._map.getCenter();d.moveTo(c.lon,c.lat,this._map.getZoom());d.setScale(this._map.getScale());var b=this._map.getCurrentSize();d.setWidth(b.w);d.setHeight(b.h);d.setResolution(this._map.getResolution());d.setExtent(this._map.getExtent());d.setMaxExtent(this._map.getMaxExtent());d.setBbox(this._map.calculateBounds());d.setMarkerVisible(this._hasMarkers())},calculateLayerScales:function(d,b){var c=new Array();if(b&&d){this.layerScales=[];for(var a=0;a<this._mapScales.length;a++){if(b>=this._mapScales[a]&&d<=this._mapScales[a]){c.push(this._mapScales[a])}}}return c},getClosestZoomLevel:function(e,d){var c=this._map.getZoom();if(!d||!e){return c}var b=this._map.getScale();if(b<d){for(var a=c;a>0;a--){if(this._mapScales[a]>=d){return a
}}}else{if(b>e){for(var a=c;a<this._mapScales.length;a++){if(this._mapScales[a]<=e){return a}}}}return c},start:function(a){if(this.started){return}a.printDebug("Starting "+this.getName());this.startPlugins(a);this.updateCurrentState();this.started=true},stop:function(a){if(!this.started){return}this.stopPlugins(a);this.started=false},_drawMarker:function(){this._removeMarkers();var e=this._map.getCenter();var b=new OpenLayers.Layer.Markers("Markers");this._map.addLayer(b);var c=new OpenLayers.Size(32,32);var f=new OpenLayers.Pixel(0,-c.h);var d=new OpenLayers.Icon(Oskari.$().startup.imageLocation+"/resource/icons/paikkamerkinta.png",c,f);var a=new OpenLayers.Marker(e,d);b.addMarker(a)},_removeMarkers:function(){var a=this._map.getLayersByName("Markers");if(a){for(var b=0;b<a.length;b++){if(a[b]){this._map.removeLayer(a[b],false)}}}},_hasMarkers:function(){var a=this._map.getLayersByName("Markers");if(a){for(var b=0;b<a.length;b++){if(a[b]&&a[b].markers&&a[b].markers.length>0){return true}}}return false},eventHandlers:{AfterMapMoveEvent:function(a){},SearchClearedEvent:function(a){this._removeMarkers()}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},getOLMapLayers:function(b){var f=this;var a=f._sandbox;var c=a.findMapLayerFromSelectedMapLayers(b);if(!c){return null}var e=this.getLayerPlugins();for(p in e){var d=e[p];var g=d.getOLMapLayers(c);if(g){return g}}return null},updateCurrentState:function(){var d=this;var a=d._sandbox;var e=a.findAllSelectedMapLayers();var c=this.getLayerPlugins();for(p in c){var b=c[p];a.printDebug("preselecting "+p);b.preselectLayers(e)}}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.ui.module.common.mapmodule.Plugin",function(){throw"Oskari.mapframework.ui.module.common.mapmodule.Plugin should not be instantiated"},{getName:function(){throw"Implement your own"},setMapModule:function(a){throw"Implement your own"},register:function(){throw"Implement your own"},unregister:function(){throw"Implement your own"},startPlugin:function(a){throw"Implement your own"},stopPlugin:function(a){throw"Implement your own"},eventHandlers:{},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])}});Oskari.clazz.define("Oskari.mapframework.mapmodule.ControlsPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"ControlsPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){},unregister:function(){},init:function(a){var b=this;this.requestHandlers={toolSelectionHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule.ToolSelectionHandler",a,b)}},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);a.addRequestHandler("ToolSelectionRequest",this.requestHandlers.toolSelectionHandler);for(var b in this.eventHandlers){a.registerForEventByName(this,b)}this.addMapControls()},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterDisableMapKeyboardMovementEvent:function(a){this._keyboardControls.deactivate()},AfterEnableMapKeyboardMovementEvent:function(a){this._keyboardControls.activate()},ToolSelectedEvent:function(b){var a=this.requestHandlers.toolSelectionHandler.getName();this._sandbox.printDebug("[ControlsPlugin] Get ToolSelectedEvent from '"+b.getOrigin()+"':");this._sandbox.printDebug("                 "+b.getToolId());if(b.getOrigin()!=a){this._zoomBoxTool.deactivate();this._measureControls.line.deactivate();this._measureControls.area.deactivate()}}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},addMapControls:function(a){var f=this;OpenLayers.Control.ZoomBox.prototype.draw=function(){this.handler=new OpenLayers.Handler.Box(this,{done:function(h){this.zoomBox(h);f.getMapModule().notifyMoveEnd()
}},{keyMask:this.keyMask})};this._zoomBoxTool=new OpenLayers.Control.ZoomBox({alwaysZoom:true});this.getMapModule().addMapControl("zoomBoxTool",this._zoomBoxTool);this._zoomBoxTool.deactivate();this._keyboardControls=new OpenLayers.Control.PorttiKeyboard({core:this._sandbox._core,mapmodule:this.getMapModule()});this.getMapModule().addMapControl("keyboardControls",this._keyboardControls);this.getMapModule().getMapControl("keyboardControls").activate();var b={handlerOptions:{persist:true},immediate:true};var e={handlerOptions:{persist:true},immediate:true};this._measureControls={line:(new OpenLayers.Control.Measure(OpenLayers.Handler.Path,b)),area:(new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon,e))};var f=this;function d(m,n){var i=f._sandbox;var j=m.units;var h=m.order;var l=m.measure;var k=l.toFixed(3)+" "+j;i.printDebug(k+" "+(n?"FINISHED":"CONTINUES"));i.request(f,i.getRequestBuilder("ShowMapMeasurementRequest")(k))}for(var c in this._measureControls){var g=this._measureControls[c];g.events.on({measure:function(h){d(h,true)},measurepartial:function(h){d(h,false)}})}this.getMapModule().addMapControl("measureControls_line",this._measureControls.line);this._measureControls.line.deactivate();this.getMapModule().addMapControl("measureControls_area",this._measureControls.area);this._measureControls.area.deactivate();this._mouseControls=new OpenLayers.Control.PorttiMouse({sandbox:this._sandbox,mapmodule:this.getMapModule()});this.getMapModule().addMapControl("mouseControls",this._mouseControls)}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});OpenLayers.Control.PorttiKeyboard=OpenLayers.Class(OpenLayers.Control,{autoActivate:true,slideFactor:50,core:null,constructor:function(a){this.core=a.core;this.mapmodule=a.mapmodule},draw:function(){this.handler=new OpenLayers.Handler.Keyboard(this,{keydown:this.defaultKeyDown,keyup:this.defaultKeyUp})},defaultKeyDown:function(a){switch(a.keyCode){case OpenLayers.Event.KEY_LEFT:this.mapmodule.panMapByPixels(-this.slideFactor,0,false,true);break;case OpenLayers.Event.KEY_RIGHT:this.mapmodule.panMapByPixels(this.slideFactor,0,false,true);break;case OpenLayers.Event.KEY_UP:this.mapmodule.panMapByPixels(0,-this.slideFactor,false,true);break;case OpenLayers.Event.KEY_DOWN:this.mapmodule.panMapByPixels(0,this.slideFactor,false,true);break;case 17:this.core.processRequest(this.core.getRequestBuilder("CtrlKeyDownRequest")());break;case 27:this.core.dispatch(this.core.getEventBuilder("EscPressedEvent")());break;case 33:this.mapmodule.notifyStartMove();this.mapmodule.panMapNorth();break;case 34:this.mapmodule.notifyStartMove();this.mapmodule.panMapSouth();break;case 35:this.mapmodule.notifyStartMove();this.mapmodule.panMapEast();break;case 36:this.mapmodule.notifyStartMove();this.mapmodule.panMapWest();break;case 43:case 61:case 187:case 107:this.mapmodule.zoomIn();break;case 45:case 109:case 189:case 95:this.mapmodule.zoomOut();break}},defaultKeyUp:function(a){switch(a.keyCode){case 17:this.core.processRequest(this.core.getRequestBuilder("CtrlKeyUpRequest")());break;case 37:case 38:case 39:case 40:case 33:case 34:case 35:case 36:case 43:case 61:case 187:case 107:case 45:case 109:case 189:case 95:this.mapmodule.notifyMoveEnd();break}},CLASS_NAME:"OpenLayers.Control.PorttiKeyboard"});OpenLayers.Control.PorttiMouse=OpenLayers.Class(OpenLayers.Control,{performedDrag:false,wheelObserver:null,_hoverEvent:null,name:"PorttiMouse",events:new OpenLayers.Events(),constructor:function(a){this.sandbox=a.sandbox;this.mapmodule=a.mapmodule},isReallyLeftClick:function(b){var a=OpenLayers.Event.isLeftClick(b);if(a===false){return false}if(a===true){return true}if(a!=0){return false}return true},initialize:function(){OpenLayers.Control.prototype.initialize.apply(this,arguments)},destroy:function(){if(this.handler){this.handler.destroy()}this.handler=null;this.map.events.un({click:this.defaultClick,dblclick:this.defaultDblClick,mousedown:this.defaultMouseDown,mouseup:this.defaultMouseUp,mousemove:this.defaultMouseMove,mouseout:this.defaultMouseOut,scope:this});
OpenLayers.Event.stopObserving(window,"DOMMouseScroll",this.wheelObserver);OpenLayers.Event.stopObserving(window,"mousewheel",this.wheelObserver);OpenLayers.Event.stopObserving(document,"mousewheel",this.wheelObserver);this.wheelObserver=null;OpenLayers.Control.prototype.destroy.apply(this,arguments)},draw:function(){this.map.events.on({click:this.defaultClick,dblclick:this.defaultDblClick,mousedown:this.defaultMouseDown,mouseup:this.defaultMouseUp,mousemove:this.defaultMouseMove,mouseout:this.defaultMouseOut,scope:this});this.registerWheelEvents()},registerWheelEvents:function(){this.wheelObserver=OpenLayers.Function.bindAsEventListener(this.onWheelEvent,this);OpenLayers.Event.observe(window,"DOMMouseScroll",this.wheelObserver);OpenLayers.Event.observe(window,"mousewheel",this.wheelObserver);OpenLayers.Event.observe(document,"mousewheel",this.wheelObserver)},defaultClick:function(b){if(!this.isReallyLeftClick(b)){return}var a=!this.performedDrag;this.performedDrag=false;if(a){}return a},defaultDblClick:function(a){this.mapmodule.centerMapByPixels(a.xy.x,a.xy.y,true,true);this.mapmodule.zoomIn();return false},defaultMouseDown:function(a){if(!this.isReallyLeftClick(a)){return}this.mouseDragStart=a.xy.clone();this.performedDrag=false;if(a.shiftKey){this.map.div.style.cursor="crosshair";this.zoomBox=OpenLayers.Util.createDiv("zoomBox",this.mouseDragStart,null,null,"absolute","2px solid red");this.zoomBox.style.backgroundColor="white";this.zoomBox.style.filter="alpha(opacity=50)";this.zoomBox.style.opacity="0.50";this.zoomBox.style.fontSize="1px";this.zoomBox.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;this.map.eventsDiv.appendChild(this.zoomBox)}document.onselectstart=OpenLayers.Function.False},defaultMouseMove:function(c){this.mousePosition=c.xy.clone();if(this.mouseDragStart!=null){if(this.zoomBox){var b=Math.abs(this.mouseDragStart.x-c.xy.x);var a=Math.abs(this.mouseDragStart.y-c.xy.y);this.zoomBox.style.width=Math.max(1,b)+"px";this.zoomBox.style.height=Math.max(1,a)+"px";if(c.xy.x<this.mouseDragStart.x){this.zoomBox.style.left=c.xy.x+"px"}if(c.xy.y<this.mouseDragStart.y){this.zoomBox.style.top=c.xy.y+"px"}}else{if(this.performedDrag===false){this.mapmodule.notifyStartMove()}var b=this.mouseDragStart.x-c.xy.x;var a=this.mouseDragStart.y-c.xy.y;this.mapmodule.moveMapByPixels(b,a,true,true);this.mouseDragStart=c.xy.clone();this.map.div.style.cursor="move"}this.performedDrag=true}else{this.notifyHover(c)}},defaultMouseUp:function(a){if(!this.isReallyLeftClick(a)){return}if(this.zoomBox){this.zoomBoxEnd(a)}else{if(this.performedDrag){var c=this.mapmodule._navigationHistoryTool;var e=c.getState();c.previousStack.unshift(e);if(c.previousStack.length>1){c.onPreviousChange(c.previousStack[1],c.previousStack.length-1)}if(c.previousStack.length>(c.limit+1)){c.previousStack.pop()}if(c.nextStack.length>0){c.nextStack=[];c.onNextChange(null,0)}this.mapmodule.notifyMoveEnd()}else{var d=this.map.getLonLatFromViewPortPx(a.xy);var b=this.sandbox.getEventBuilder("MapClickedEvent");var a=b(d,a.xy.x,a.xy.y);this.sandbox.notifyAll(a,true)}}document.onselectstart=null;this.mouseDragStart=null;this.map.div.style.cursor=""},defaultMouseOut:function(a){if(this.mouseDragStart!=null&&OpenLayers.Util.mouseLeft(a,this.map.eventsDiv)){if(this.zoomBox){this.removeZoomBox()}this.mapmodule.notifyMoveEnd();this.mouseDragStart=null;this.map.div.style.cursor=""}},defaultWheelUp:function(a){this.mapmodule.centerMapByPixels(a.xy.x,a.xy.y,true,true);this.mapmodule.zoomIn()},defaultWheelDown:function(a){this.mapmodule.centerMapByPixels(a.xy.x,a.xy.y,true,true);this.mapmodule.zoomOut()},zoomBoxEnd:function(b){if(this.mouseDragStart!=null){if(Math.abs(this.mouseDragStart.x-b.xy.x)>5||Math.abs(this.mouseDragStart.y-b.xy.y)>5){var h=this.map.getLonLatFromViewPortPx(this.mouseDragStart);var a=this.map.getLonLatFromViewPortPx(b.xy);var g=Math.max(h.lat,a.lat);var c=Math.min(h.lat,a.lat);var f=Math.min(h.lon,a.lon);var d=Math.max(h.lon,a.lon);var e=new OpenLayers.Bounds(f,c,d,g);this.mapmodule.zoomToExtent(e,true)}else{this.mapmodule.centerMapByPixels(b.xy.x,b.xy.y,true,true);
this.mapmodule.zoomIn()}this.removeZoomBox()}},removeZoomBox:function(){this.map.eventsDiv.removeChild(this.zoomBox);this.zoomBox=null},notifyHover:function(a){if(this.mapmodule.getStealth()){return}if(!this._hoverEvent){this._hoverEvent=this.sandbox.getEventBuilder("MouseHoverEvent")()}var b=this.map.getLonLatFromViewPortPx(a.xy);this._hoverEvent.set(b.lon,b.lat);this.sandbox.notifyAll(this._hoverEvent,true)},onWheelEvent:function(c){var b=false;var a=OpenLayers.Event.element(c);while(a!=null){if(this.map&&a==this.map.div){b=true;break}if(a.className=="olPopup"){b=false;break}a=a.parentNode}if(b){var d=0;if(!c){c=window.event}if(c.wheelDelta){d=c.wheelDelta/120;if(window.opera&&window.opera.version()<9.2){d=-d}}else{if(c.detail){d=-c.detail/3}}if(d){c.xy=this.mousePosition;if(d<0){this.defaultWheelDown(c)}else{this.defaultWheelUp(c)}}OpenLayers.Event.stop(c)}},CLASS_NAME:"OpenLayers.Control.PorttiMouse"});OpenLayers.Control.PorttiZoomBar=OpenLayers.Class(OpenLayers.Control.PanZoom,{zoomStopWidth:18,zoomStopHeight:11,slider:null,sliderEvents:null,zoombarDiv:null,divEvents:null,zoomWorldIcon:false,panIcons:false,forceFixedZoomLevel:false,mouseDragStart:null,deltaY:null,zoomStart:null,constructor:function(a){this.sandbox=a.sandbox;this.mapModule=a.mapModule},destroy:function(){this._removeZoomBar();this.map.events.un({changebaselayer:this.redraw,scope:this});OpenLayers.Control.PanZoom.prototype.destroy.apply(this,arguments);delete this.mouseDragStart;delete this.zoomStart},setMap:function(a){OpenLayers.Control.PanZoom.prototype.setMap.apply(this,arguments);this.map.events.register("changebaselayer",this,this.redraw)},redraw:function(){if(this.div!=null){this.removeButtons();this._removeZoomBar()}this.draw()},draw:function(b){OpenLayers.Control.prototype.draw.apply(this,arguments);b=this.position.clone();this.buttons=[];var d=new OpenLayers.Size(18,18);if(this.panIcons){var a=new OpenLayers.Pixel(b.x+d.w/2,b.y);var c=d.w;if(this.zoomWorldIcon){a=new OpenLayers.Pixel(b.x+d.w,b.y)}this._addButton("panup","north-mini.png",a,d);b.y=a.y+d.h;this._addButton("panleft","west-mini.png",b,d);if(this.zoomWorldIcon){this._addButton("zoomworld","zoom-world-mini.png",b.add(d.w,0),d);c*=2}this._addButton("panright","east-mini.png",b.add(c,0),d);this._addButton("pandown","south-mini.png",a.add(0,d.h*2),d);this._addButton("zoomin","zoom-plus-mini.png",a.add(0,d.h*3+5),d);a=this._addZoomBar(a.add(0,d.h*4+5));this._addButton("zoomout","zoom-minus-mini.png",a,d)}else{this._addButton("zoomin","zoom-plus-mini.png",b,d);a=this._addZoomBar(b.add(0,d.h));this._addButton("zoomout","zoom-minus-mini.png",a,d);if(this.zoomWorldIcon){a=a.add(0,d.h+3);this._addButton("zoomworld","zoom-world-mini.png",a,d)}}return this.div},buttonDown:function(a){if(!OpenLayers.Event.isLeftClick(a)){return}switch(this.action){case"zoomin":Oskari.$().sandbox.findRegisteredModuleInstance("MainMapModule").zoomIn();break;case"zoomout":Oskari.$().sandbox.findRegisteredModuleInstance("MainMapModule").zoomOut();break}},_addZoomBar:function(a){var e=OpenLayers.Util.getImagesLocation();var g=this.id+"_"+this.map.id;var b=this.map.getNumZoomLevels()-1-this.map.getZoom();var c=OpenLayers.Util.createAlphaImageDiv(g,a.add(-1,b*this.zoomStopHeight),new OpenLayers.Size(20,9),e+"slider.png","absolute");c.style.cursor="move";this.slider=c;this.sliderEvents=new OpenLayers.Events(this,c,null,true,{includeXY:true});this.sliderEvents.on({touchstart:this.zoomBarDown,touchmove:this.zoomBarDrag,touchend:this.zoomBarUp,mousedown:this.zoomBarDown,mousemove:this.zoomBarDrag,mouseup:this.zoomBarUp,dblclick:this.doubleClick,click:this.doubleClick});var d=new OpenLayers.Size();d.h=this.zoomStopHeight*this.map.getNumZoomLevels();d.w=this.zoomStopWidth;var f=null;if(OpenLayers.Util.alphaHack()){var g=this.id+"_"+this.map.id;f=OpenLayers.Util.createAlphaImageDiv(g,a,new OpenLayers.Size(d.w,this.zoomStopHeight),e+"zoombar.png","absolute",null,"crop");f.style.height=d.h+"px"}else{f=OpenLayers.Util.createDiv("OpenLayers_Control_PanZoomBar_Zoombar"+this.map.id,a,d,e+"zoombar.png")}f.style.cursor="pointer";this.zoombarDiv=f;
this.divEvents=new OpenLayers.Events(this,f,null,true,{includeXY:true});this.divEvents.on({touchmove:this.passEventToSlider,mousedown:this.divClick,mousemove:this.passEventToSlider,dblclick:this.doubleClick,click:this.doubleClick});this.div.appendChild(f);this.startTop=parseInt(f.style.top);this.div.appendChild(c);this.map.events.register("zoomend",this,this.moveZoomBar);a=a.add(0,this.zoomStopHeight*this.map.getNumZoomLevels());return a},_removeZoomBar:function(){this.sliderEvents.un({touchmove:this.zoomBarDrag,mousedown:this.zoomBarDown,mousemove:this.zoomBarDrag,mouseup:this.zoomBarUp,dblclick:this.doubleClick,click:this.doubleClick});this.sliderEvents.destroy();this.divEvents.un({touchmove:this.passEventToSlider,mousedown:this.divClick,mousemove:this.passEventToSlider,dblclick:this.doubleClick,click:this.doubleClick});this.divEvents.destroy();this.div.removeChild(this.zoombarDiv);this.zoombarDiv=null;this.div.removeChild(this.slider);this.slider=null;this.map.events.unregister("zoomend",this,this.moveZoomBar)},passEventToSlider:function(a){this.sliderEvents.handleBrowserEvent(a)},divClick:function(a){if(!OpenLayers.Event.isLeftClick(a)){return}var c=a.xy.y/this.zoomStopHeight;if(this.forceFixedZoomLevel||!this.map.fractionalZoom){c=Math.floor(c)}var b=(this.map.getNumZoomLevels()-1)-c;b=Math.min(Math.max(b,0),this.map.getNumZoomLevels()-1);this.mapModule.zoomTo(b);OpenLayers.Event.stop(a)},zoomBarDown:function(a){if(!OpenLayers.Event.isLeftClick(a)&&!OpenLayers.Event.isSingleTouch(a)){return}this.map.events.on({touchmove:this.passEventToSlider,mousemove:this.passEventToSlider,mouseup:this.passEventToSlider,scope:this});this.mouseDragStart=a.xy.clone();this.zoomStart=a.xy.clone();this.div.style.cursor="move";this.zoombarDiv.offsets=null;OpenLayers.Event.stop(a)},zoomBarDrag:function(b){if(this.mouseDragStart!=null){var a=this.mouseDragStart.y-b.xy.y;var d=OpenLayers.Util.pagePosition(this.zoombarDiv);if((b.clientY-d[1])>0&&(b.clientY-d[1])<parseInt(this.zoombarDiv.style.height)-2){var c=parseInt(this.slider.style.top)-a;this.slider.style.top=c+"px";this.mouseDragStart=b.xy.clone()}this.deltaY=this.zoomStart.y-b.xy.y;OpenLayers.Event.stop(b)}},zoomBarUp:function(a){if(!OpenLayers.Event.isLeftClick(a)&&a.type!=="touchend"){return}if(this.mouseDragStart){this.div.style.cursor="";this.map.events.un({touchmove:this.passEventToSlider,mouseup:this.passEventToSlider,mousemove:this.passEventToSlider,scope:this});var b=this.map.zoom;if(!this.forceFixedZoomLevel&&this.map.fractionalZoom){b+=this.deltaY/this.zoomStopHeight;b=Math.min(Math.max(b,0),this.map.getNumZoomLevels()-1)}else{b+=this.deltaY/this.zoomStopHeight;b=Math.max(Math.round(b),0)}this.mapModule.zoomTo(b);this.mouseDragStart=null;this.zoomStart=null;this.deltaY=0;OpenLayers.Event.stop(a)}},moveZoomBar:function(){var a=((this.map.getNumZoomLevels()-1)-this.map.getZoom())*this.zoomStopHeight+this.startTop+1;this.slider.style.top=a+"px"},CLASS_NAME:"OpenLayers.Control.PorttiZoomBar"});OpenLayers.Control.PorttiDragPan=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,panned:false,interval:1,documentDrag:false,kinetic:null,enableKinetic:false,kineticInterval:10,draw:function(){if(this.enableKinetic){var a={interval:this.kineticInterval};if(typeof this.enableKinetic==="object"){a=OpenLayers.Util.extend(a,this.enableKinetic)}this.kinetic=new OpenLayers.Kinetic(a)}this.handler=new OpenLayers.Handler.PorttiDrag(this,{move:this.panMap,done:this.panMapDone,down:this.panMapStart},{interval:this.interval,documentDrag:this.documentDrag})},panMapStart:function(){if(this.kinetic){this.kinetic.begin()}},panMap:function(a){if(this.kinetic){this.kinetic.update(a)}this.panned=true;this.map.pan(this.handler.last.x-a.x,this.handler.last.y-a.y,{dragging:true,animate:false})},panMapDone:function(c){if(this.panned){var b=null;if(this.kinetic){b=this.kinetic.end(c)}this.map.pan(this.handler.last.x-c.x,this.handler.last.y-c.y,{dragging:!!b,animate:false});if(b){var a=this;this.kinetic.move(b,function(d,f,e){a.map.pan(d,f,{dragging:!e,animate:false})})}this.panned=false}},CLASS_NAME:"OpenLayers.Control.PorttiDragPan"});
OpenLayers.Handler.PorttiDrag=OpenLayers.Class(OpenLayers.Handler,{started:false,stopDown:true,dragging:false,touch:false,last:null,start:null,lastMoveEvt:null,oldOnselectstart:null,interval:0,timeoutId:null,documentDrag:false,documentEvents:null,initialize:function(d,c,a){OpenLayers.Handler.prototype.initialize.apply(this,arguments);if(this.documentDrag===true){var b=this;this._docMove=function(e){b.mousemove({xy:{x:e.clientX,y:e.clientY},element:document})};this._docUp=function(e){b.mouseup({xy:{x:e.clientX,y:e.clientY}})}}},dragstart:function(b){var a=true;this.dragging=false;if(this.checkModifiers(b)&&(OpenLayers.Event.isLeftClick(b)||OpenLayers.Event.isSingleTouch(b))){this.started=true;this.start=b.xy;this.last=b.xy;OpenLayers.Element.addClass(this.map.viewPortDiv,"olDragDown");this.down(b);this.callback("down",[b.xy]);if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart?document.onselectstart:OpenLayers.Function.True}document.onselectstart=OpenLayers.Function.False;a=!this.stopDown}else{this.started=false;this.start=null;this.last=null}return a},dragmove:function(a){this.lastMoveEvt=a;if(this.started&&!this.timeoutId&&(a.xy.x!=this.last.x||a.xy.y!=this.last.y)){if(this.documentDrag===true&&this.documentEvents){if(a.element===document){this.adjustXY(a);this.setEvent(a)}else{this.removeDocumentEvents()}}if(this.interval>0){this.timeoutId=setTimeout(OpenLayers.Function.bind(this.removeTimeout,this),this.interval)}this.dragging=true;this.move(a);this.callback("move",[a.xy]);if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart;document.onselectstart=OpenLayers.Function.False}this.last=a.xy}return true},dragend:function(b){if(this.started){if(this.documentDrag===true&&this.documentEvents){this.adjustXY(b);this.removeDocumentEvents()}var a=(this.start!=this.last);this.started=false;this.dragging=false;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown");this.up(b);this.callback("up",[b.xy]);if(a){this.callback("done",[b.xy])}document.onselectstart=this.oldOnselectstart}return true},down:function(a){},move:function(a){},up:function(a){},out:function(a){},mousedown:function(a){return this.dragstart(a)},touchstart:function(a){if(!this.touch){this.touch=true;this.map.events.un({mousedown:this.mousedown,mouseup:this.mouseup,mousemove:this.mousemove,click:this.click,scope:this})}return this.dragstart(a)},mousemove:function(a){return this.dragmove(a)},touchmove:function(a){return this.dragmove(a)},removeTimeout:function(){this.timeoutId=null;if(this.dragging){this.mousemove(this.lastMoveEvt)}},mouseup:function(a){return this.dragend(a)},touchend:function(a){a.xy=this.last;return this.dragend(a)},mouseout:function(b){if(this.started&&OpenLayers.Util.mouseLeft(b,this.map.eventsDiv)){if(this.documentDrag===true){this.addDocumentEvents()}else{var a=(this.start!=this.last);this.started=false;this.dragging=false;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown");this.out(b);this.callback("out",[]);if(a){this.callback("done",[b.xy])}if(document.onselectstart){document.onselectstart=this.oldOnselectstart}}}return true},click:function(a){return(this.start==this.last)},activate:function(){var a=false;if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.dragging=false;a=true}return a},deactivate:function(){var a=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.touch=false;this.started=false;this.dragging=false;this.start=null;this.last=null;a=true;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown")}return a},adjustXY:function(a){var b=OpenLayers.Util.pagePosition(this.map.viewPortDiv);a.xy.x-=b[0];a.xy.y-=b[1]},addDocumentEvents:function(){OpenLayers.Element.addClass(document.body,"olDragDown");this.documentEvents=true;OpenLayers.Event.observe(document,"mousemove",this._docMove);OpenLayers.Event.observe(document,"mouseup",this._docUp)},removeDocumentEvents:function(){OpenLayers.Element.removeClass(document.body,"olDragDown");this.documentEvents=false;OpenLayers.Event.stopObserving(document,"mousemove",this._docMove);OpenLayers.Event.stopObserving(document,"mouseup",this._docUp)
},CLASS_NAME:"OpenLayers.Handler.PorttiDrag"});Oskari.$("OpenLayers.Control.GetInfoAdapter",OpenLayers.Class(OpenLayers.Control,{hover:false,drillDown:false,maxFeatures:10,clickCallback:"click",handlerOptions:null,handler:null,EVENT_TYPES:["beforegetfeatureinfo","nogetfeatureinfo","getfeatureinfo"],initialize:function(a){this.EVENT_TYPES=OpenLayers.Control.prototype.EVENT_TYPES;a=a||{};this.callback=a.callback;this.hoverCallback=a.hoverCallback;a.handlerOptions=a.handlerOptions||{};OpenLayers.Control.prototype.initialize.apply(this,[a]);if(this.drillDown===true){this.hover=false}if(this.hover){this.handler=new OpenLayers.Handler.Hover(this,{move:this.cancelHover,pause:this.getInfoForHover},OpenLayers.Util.extend(this.handlerOptions.hover||{},{delay:250}))}else{var b={};b[this.clickCallback]=this.getInfoForClick;this.handler=new OpenLayers.Handler.Click(this,b,this.handlerOptions.click||{})}},activate:function(){if(!this.active){this.handler.activate()}return OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},getInfoForClick:function(a){this.events.triggerEvent("beforegetfeatureinfo",{xy:a.xy});OpenLayers.Element.addClass(this.map.viewPortDiv,"olCursorWait");this.request(a.xy,{})},getInfoForHover:function(a){this.events.triggerEvent("beforegetfeatureinfo",{xy:a.xy});this.request(a.xy,{hover:true})},cancelHover:function(){},request:function(b,a){OpenLayers.Element.removeClass(this.map.viewPortDiv,"olCursorWait");var c=this.map.getLonLatFromViewPortPx(b);if(a.hover&&this.hoverCallback){this.hoverCallback(c,b,a)}else{if(this.callback){this.callback(c,b,a)}}},CLASS_NAME:"OpenLayers.Control.GetInfoAdapter"}));Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.getinfo.GetFeatureInfoHandler",function(a,b){this.getInfoPlugin=b;this.sandbox=a},{__name:"GetFeatureInfoHandler",getName:function(){return this.__name},init:function(a){},_getWmsReqParams:function(d,b){var e=this.sandbox.getMap();var c=d.getMapWidth();if(!c){c=e.getWidth()}var a=d.getMapHeight();if(!a){a=e.getHeight()}return;"REQUEST=GetFeatureInfo&EXCEPTIONS=application/vnd.ogc.se_xml&SRS="+this._getSRS(d)+"&VERSION=1.1.1&BBOX="+this._getBBString(d)+"&X="+d.getX()+"&Y="+d.getY()+"&INFO_FORMAT="+b.getQueryFormat()+"&QUERY_LAYERS="+b.getWmsName()+"&WIDTH="+c+"&HEIGHT="+a+"&FEATURE_COUNT=1&FORMAT=image/png&SERVICE=WMS&STYLES="+b.getCurrentStyle().getName()+"&LAYERS="+b.getWmsName()},_getWmtsReqParams:function(d,c){var b=this.getInfoPlugin._map.getLayersByName("layer_"+c.getId());var e=new OpenLayers.LonLat(d.getLon(),d.getLat());var a=b[0].getTileInfo(e);var f=b[0].url+"?service=WMTS&request=GetFeatureInfo&version="+b[0].version+"&layer="+b[0].layer+"&style="+b[0].style+"&format=text/xml&TileMatrixSet="+b[0].matrixSet+"&TileMatrix="+b[0].getMatrix().identifier+"&TileCol="+a.col+"&TileRow="+a.row+"&I="+a.i+"&J="+a.j+"&InfoFormat=text/xml";return f},_getBBString:function(b){var a=b.getBoundingBox();if(!a){a=this.getInfoPlugin.getMapModule().getMap().getExtent()}return a.left+","+a.bottom+","+a.right+","+a.top},_getSRS:function(b){var a=b.getSRS();if(!a){a="EPSG:3067"}return a},_notifyNotSupported:function(a,c){var g="rightpanel_wms_getfeatureinfo_not_supported_txt";var f=this.sandbox.getText(g)+": "+a+".";var b=this.sandbox.getEventBuilder("AfterAppendFeatureInfoEvent");var d=b(a,f);this.sandbox.copyObjectCreatorToFrom(d,c);this.sandbox.notifyAll(d)},handleRequest:function(r,b){var n=b.getMapLayers();var c=n.length;var j=(c>0)&&n[0].isLayerOfType("WFS");var a=!j&&(c>0);var m=this.sandbox.getEventBuilder("AfterGetFeatureInfoEvent");var s=m(a,j);this.sandbox.copyObjectCreatorToFrom(s,b);this.sandbox.notifyAll(s,true);if(!a){return}var u=this;var d=function(e,i){this.name=e;this.format=i;this.success=function(x){var A="";if(this.format==="application/vnd.ogc.gml"||this.format==="application/gnd_ogc.se_xml"||this.format==="application/vnd.ogc.wms_xml"||this.format==="text/xml"){A=x.responseText.replace(/</g,"&lt;").replace(/>/g,"&gt;")}else{if(x.responseText===""){A=u.sandbox.getText("mapcontrolsservice_not_found_wms_feature_info")
}else{A=x.responseText}}var y=u.sandbox.getEventBuilder("AfterAppendFeatureInfoEvent");var z=y(e,A);u.sandbox.copyObjectCreatorToFrom(z,b);u.sandbox.notifyAll(z,true)};this.failure=function(x){var y=u.sandbox.getEventBuilder("AfterAppendFeatureInfoEvent");var z=y(e,x.responseText);u.sandbox.copyObjectCreatorToFrom(z,b);u.sandbox.notifyAll(z,true)}};var t=this.sandbox.getMap();for(var o=0;o<c;o++){this.sandbox._core.actionInProgressGetFeatureInfo();var v=b.getMapLayers()[o];var w=v.getName();var q=v.getQueryFormat();var h=((q!==null)&&(q!==""));if(!v.getQueryable()||v.isLayerOfType("WFS")||!h){this._notifyNotSupported(w,b);continue}var f="";if(f.indexOf("?")<0){f=f+"?"}if(v.isLayerOfType("WMTS")){f=this._getWmtsReqParams(b,v)}else{if(v.isLayerOfType("WMS")){var l=b.getMapWidth();if(!l){l=t.getWidth()}var k=b.getMapHeight();if(!k){k=t.getHeight()}f=startup.globalMapAjaxUrl+"&action_route=GetFeatureInfoWMS&REQUEST=GetFeatureInfo&layerId="+v.getId()+"&EXCEPTIONS=application/vnd.ogc.se_xml&SRS="+this._getSRS(b)+"&VERSION=1.1.1&BBOX="+t.getExtent()+"&X="+b.getX()+"&Y="+b.getY()+"&INFO_FORMAT="+v.getQueryFormat()+"&QUERY_LAYERS="+v.getWmsName()+"&WIDTH="+l+"&HEIGHT="+k+"&FEATURE_COUNT=1&FORMAT=image/png&SERVICE=WMS&STYLES="+v.getCurrentStyle().getName()+"&LAYERS="+v.getWmsName()}}var g=new d(w,q);this.sandbox.ajax(f,function(e){g.success(e)},function(e){g.failure(e)})}}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.GetInfoPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"GetInfoPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){},unregister:function(){},init:function(a){a.printDebug("[GetInfoPlugin] init");var c=this;var b="Oskari.mapframework.mapmodule-plugin.getinfo.GetFeatureInfoHandler";this.requestHandlers={getFeatureInfoHandler:Oskari.clazz.create(b,a,c)};this._sandbox.addRequestHandler("GetFeatureInfoRequest",this.requestHandlers.getFeatureInfoHandler)},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();var b=this;this._getinfoTool=new (Oskari.$("OpenLayers.Control.GetInfoAdapter"))({callback:function(e,d,c){b.handleGetInfo(e,d,c)},hoverCallback:function(e,d,c){b.handleGetInfoHover(e,d,c)}});this.getMapModule().addMapControl("getinfo",this._getinfoTool);a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{ToolSelectedEvent:function(a){if(a.getToolName=="map_control_select_tool"){this._getinfoTool.activate()}else{this._getinfoTool.deactivate()}},AfterDeactivateAllOpenlayersMapControlsButNotMeasureToolsEvent:function(a){this.afterDeactivateAllOpenlayersMapControlsButNotMeasureToolsEvent()},AfterDeactivateAllOpenlayersMapControlsEvent:function(a){this.afterDeactivateAllOpenlayersMapControlsEvent(a)},MapClickedEvent:function(a){var d=a.getLonLat();var c=a.getMouseX();var b=a.getMouseY();if(this._activated){this.buildWMSQueryOrWFSFeatureInfoRequest(d,c,b)}},AfterHighlightMapLayerEvent:function(a){this._handleHighlightLayer(a)},AfterDimMapLayerEvent:function(a){this._handleDimLayer()}},_handleHighlightLayer:function(a){this._activated=true},_handleDimLayer:function(){this._activated=false},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},handleGetInfo:function(c,b,a){this._sandbox.printDebug("GETINFO "+c.lat+","+c.lon);this.buildWMSQueryOrWFSFeatureInfoRequest(c,b.x,b.y)},handleGetInfoHover:function(c,b,a){this._sandbox.printDebug("GETINFO HOVER "+c.lat+","+c.lon)},arrayToCSV:function(c){var b="";for(var a=0;a<c.length;a++){b+=c[a];if(a<c.length-1){b+=","}}return b},buildWMSQueryOrWFSFeatureInfoRequest:function(g,c,b){var k=this._sandbox;var e=k.findAllHighlightedLayers();this._projectionCode="EPSG:3067";
if(e[0]&&e[0]!=null&&(e[0].isLayerOfType("WMS")||e[0].isLayerOfType("WMTS"))){var f=k.getMap().getWidth();var j=k.getMap().getHeight();var l=k.getMap().getBbox();var a=k.findAllHighlightedLayers();k.request(this,k.getRequestBuilder("GetFeatureInfoRequest")(a,g.lon,g.lat,c,b,f,j,l,this._projectionCode))}else{if(e[0]&&e[0]!=null&&e[0].isLayerOfType("VECTOR")){this.getMapModule().notifyAll(k.getEventBuilder("FeaturesGetInfoEvent")(e[0],null,g.lon,g.lat,this._map.getProjection,"GetFeatureInfo"))}else{if(e[0]&&e[0]!=null&&e[0].isLayerOfType("WFS")){var i=e[0];if(i!=null&&i.getId()!=null){this._selectedCoordinatesLon=[];this._selectedCoordinatesLat=[];this._selectedCoordinatesLon.push(g.lon);this._selectedCoordinatesLat.push(g.lat);var h=this._map.getExtent();var d="&flow_pm_wfsLayerId="+i.getId()+"&flow_pm_point_x="+this.arrayToCSV(this._selectedCoordinatesLon)+"&flow_pm_point_y="+this.arrayToCSV(this._selectedCoordinatesLat)+"&flow_pm_bbox_min_x="+h.left+"&flow_pm_bbox_min_y="+h.bottom+"&flow_pm_bbox_max_x="+h.right+"&flow_pm_bbox_max_y="+h.top+"&flow_pm_zoom_level="+this._map.getZoom();k.request(this,k.getRequestBuilder("HighlightWFSFeatureRequestByGeoPoint")(d))}}}}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.MarkersPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"MarkersPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();this.createMapMarkersLayer();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterHideMapMarkerEvent:function(a){this.afterHideMapMarkerEvent(a)}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},createMapMarkersLayer:function(){var b=this._sandbox;var a=new OpenLayers.Layer.Markers("Markers");this._map.addLayer(a)},afterHideMapMarkerEvent:function(b){var a=this._map.getLayersByName("Markers");if(a!=null&&a[0]!=null){a[0].setVisibility(false)}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.plugin.LayersPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._supportedFormats={};this._visibilityPollingInterval=1500;this._visibilityCheckOrder=0;this._previousTimer=null},{__name:"LayersPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},getMap:function(){return this._map},register:function(){},unregister:function(){},init:function(a){this.requestHandlers={layerVisibilityHandler:Oskari.clazz.create("Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequestHandler",a,this),layerContentHandler:Oskari.clazz.create("Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequestHandler",a,this)}},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}a.addRequestHandler("MapModulePlugin.MapLayerVisibilityRequest",this.requestHandlers.layerVisibilityHandler);a.addRequestHandler("MapModulePlugin.MapMoveByLayerContentRequest",this.requestHandlers.layerContentHandler)},stopPlugin:function(a){a.removeRequestHandler("MapModulePlugin.MapLayerVisibilityRequest",this.requestHandlers.layerVisibilityHandler);a.removeRequestHandler("MapModulePlugin.MapMoveByLayerContentRequest",this.requestHandlers.layerContentHandler);for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)
}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterRearrangeSelectedMapLayerEvent:function(a){this._afterRearrangeSelectedMapLayerEvent(a)},MapMoveStartEvent:function(){this._visibilityCheckOrder++;if(this._previousTimer){clearTimeout(this._previousTimer);this._previousTimer=null}},AfterMapMoveEvent:function(){var a=this;if(this._previousTimer){clearTimeout(this._previousTimer);this._previousTimer=null}this._visibilityCheckOrder++;this._previousTimer=setTimeout(function(){a._checkLayersVisibility(a._visibilityCheckOrder)},this._visibilityPollingInterval)},AfterMapLayerAddEvent:function(a){this._parseGeometryForLayer(a.getMapLayer())}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},preselectLayers:function(a){},_parseGeometryForLayer:function(c){if(c.getGeometry().length==0){var a=c.getGeometryWKT();if(!a){return}var f=new OpenLayers.Format.WKT();var e=f.read(a);if(e){if(e.constructor!=Array){e=[e]}var d=[];for(var b=0;b<e.length;++b){d.push(e[b].geometry)}c.setGeometry(d)}else{}}},_checkLayersVisibility:function(a){if(a!=this._visibilityCheckOrder){return}var d=this._sandbox.findAllSelectedMapLayers();for(var c=0;c<d.length;++c){var b=d[c];if(!b.isVisible()){continue}this.notifyLayerVisibilityChanged(b)}this._visibilityCheckScheduled=false},_isInScale:function(a){var b=this._sandbox.getMap().getScale();return a.isInScale(b)},isInGeometry:function(b){var c=b.getGeometry();var d=null;for(var a=0;a<c.length;++a){if(!d){d=c[a].getBounds()}else{d.extend(c[a].getBounds())}}if(d){return this.getMap().getExtent().intersectsBounds(d)}return true},notifyLayerVisibilityChanged:function(b){var f=b.isVisible();var d=b.isVisible();if(b.isVisible()){f=this._isInScale(b);d=this.isInGeometry(b)}var e=this.getMap();if(f&&d&&b.isVisible()){var a=e.getLayersByName("layer_"+b.getId());if(a&&a.setVisibility){a.setVisibility(true);a.display(true)}}else{var a=e.getLayersByName("layer_"+b.getId());if(a&&a.setVisibility){a.setVisibility(false);a.display(false)}}var c=this._sandbox.getEventBuilder("MapLayerVisibilityChangedEvent")(b,f,d);this._sandbox.notifyAll(c)},_afterRearrangeSelectedMapLayerEvent:function(b){var g=this._sandbox.findAllSelectedMapLayers();var j=0;var a=this._map.layers.length;var e=this._map.getLayersByName("Markers");if(e.length>0){this._map.setLayerIndex(e[0],a);a--}for(var h=0;h<g.length;h++){if(g[h].isBaseLayer()){for(var d=0;d<g[h].getSubLayers().length;d++){var e=this._map.getLayersByName("basemap_"+g[h].getSubLayers()[d].getId());this._map.setLayerIndex(e[0],j);j++}}else{if(g[h].isLayerOfType("WFS")){var l=new RegExp("wfs_layer_"+g[h].getId()+"_WFS_LAYER_IMAGE*","i");var c=this._map.getLayersByName(l);for(var f=0;f<c.length;f++){this._map.setLayerIndex(c[f],j);j++}var l=new RegExp("wfs_layer_"+g[h].getId()+"_HIGHLIGHTED_FEATURE*","i");var e=this._map.getLayersByName(l);if(e.length>0){this._map.setLayerIndex(e[0],j);j++}}else{var e=this._map.getLayersByName("layer_"+g[h].getId());this._map.setLayerIndex(e[0],j);j++}}}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.WmsLayerPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._supportedFormats={}},{__name:"WmsLayerPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){this.getMapModule().setLayerPlugin("wmslayer",this)},unregister:function(){this.getMapModule().setLayerPlugin("wmslayer",null)},init:function(a){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterMapLayerAddEvent:function(a){this.afterMapLayerAddEvent(a)
},AfterMapLayerRemoveEvent:function(a){this.afterMapLayerRemoveEvent(a)},AfterChangeMapLayerOpacityEvent:function(a){this.afterChangeMapLayerOpacityEvent(a)},AfterChangeMapLayerStyleEvent:function(a){this.afterChangeMapLayerStyleEvent(a)}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},preselectLayers:function(e){var b=this._sandbox;for(var d=0;d<e.length;d++){var c=e[d];var a=c.getId();if(!c.isLayerOfType("WMS")){continue}b.printDebug("preselecting "+a);this.addMapLayerToMap(c,true,c.isBaseLayer())}},afterMapLayerAddEvent:function(a){this.addMapLayerToMap(a.getMapLayer(),a.getKeepLayersOrder(),a.isBasemap())},addMapLayerToMap:function(h,f,a){if(!h.isLayerOfType("WMS")){return}this._sandbox.printDebug(" [SnappyWMSLayer]  Creating "+h.getId()+" KEEP ON TOP ? "+f+" BASE? "+a);var l=this._map.getLayersByName("Markers");if(l){for(var c=0;c<l.length;c++){if(l[c]){this._map.removeLayer(l[c],false)}}}if(h.isGroupLayer()||h.isBaseLayer()||a==true){if(h.getSubLayers().length>0){for(var e=0;e<h.getSubLayers().length;e++){var b="";for(var d=0;d<h.getSubLayers()[e].getWmsUrls().length;d++){b+=h.getSubLayers()[e].getWmsUrls()[d]}var k=this.getMapModule().calculateLayerScales(h.getSubLayers()[e].getMaxScale(),h.getSubLayers()[e].getMinScale());var g=Oskari.$("SnappyWMSLayer");var m=new g("basemap_"+h.getSubLayers()[e].getId(),h.getSubLayers()[e].getWmsUrls(),{layers:h.getSubLayers()[e].getWmsName(),transparent:true,id:h.getSubLayers()[e].getId(),styles:h.getSubLayers()[e].getCurrentStyle().getName(),format:"image/png"},{layerId:h.getSubLayers()[e].getWmsName(),scales:k,isBaseLayer:false,displayInLayerSwitcher:true,visibility:true,buffer:0});m.opacity=h.getOpacity()/100;this.attachLoadingStatusToLayer(m,true,h);this._map.addLayer(m);this._sandbox.printDebug(" [SnappyWMSLayer]  Created SnappyGrid for WMS WITH SUBLAYERS for "+h.getId());if(!f){this._map.setLayerIndex(m,0)}}}else{var k=this.getMapModule().calculateLayerScales(h.getMaxScale(),h.getMinScale());var g=Oskari.$("SnappyWMSLayer");var m=new g("layer_"+h.getId(),h.getWmsUrls(),{layers:h.getWmsName(),transparent:true,id:h.getId(),styles:h.getCurrentStyle().getName(),format:"image/png"},{layerId:h.getWmsName(),scales:k,isBaseLayer:false,displayInLayerSwitcher:true,visibility:true,buffer:0});m.opacity=h.getOpacity()/100;this.attachLoadingStatusToLayer(m,true,h);this._map.addLayer(m);this._sandbox.printDebug(" [SnappyWMSLayer]  Created SnappyGrid for WMS WITH SUBLAYERS for "+h.getId());if(f){this._map.setLayerIndex(m,this._map.layers.length)}else{this._map.setLayerIndex(m,0)}}}else{var k=this.getMapModule().calculateLayerScales(h.getMaxScale(),h.getMinScale());var g=Oskari.$("SnappyWMSLayer");var m=new g("layer_"+h.getId(),h.getWmsUrls(),{layers:h.getWmsName(),transparent:true,id:h.getId(),styles:h.getCurrentStyle().getName(),format:"image/png"},{layerId:h.getWmsName(),scales:k,isBaseLayer:false,displayInLayerSwitcher:true,visibility:true,buffer:0});this.attachLoadingStatusToLayer(m,true,h);m.opacity=h.getOpacity()/100;this._map.addLayer(m);this._sandbox.printDebug("#!#! CREATED OPENLAYER.LAYER.WMS for "+h.getId());if(f){this._map.setLayerIndex(m,this._map.layers.length)}else{this._map.setLayerIndex(m,0)}}if(l){for(var c=0;c<l.length;c++){if(l[c]){this._map.addLayer(l[c])}}}},afterMapLayerRemoveEvent:function(b){var a=b.getMapLayer();this.removeMapLayerFromMap(a)},removeMapLayerFromMap:function(d){if(!d.isLayerOfType("WMS")){return}if(d.isBaseLayer()){var b="";if(d.getSubLayers().length>0){for(var c=0;c<d.getSubLayers().length;c++){var a=this._map.getLayersByName("basemap_"+d.getSubLayers()[c].getId());a[0].destroy()}}else{var a=this._map.getLayersByName("layer_"+d.getId());a[0].destroy()}}else{var a=this._map.getLayersByName("layer_"+d.getId());a[0].destroy()}},getOLMapLayers:function(c){if(!c.isLayerOfType("WMS")){return null}if(c.isBaseLayer()){var a="";if(c.getSubLayers().length>0){for(var b=0;b<c.getSubLayers().length;b++){return this._map.getLayersByName("basemap_"+c.getSubLayers()[b].getId())}}else{return this._map.getLayersByName("layer_"+c.getId())
}}else{return this._map.getLayersByName("layer_"+c.getId())}return null},afterChangeMapLayerOpacityEvent:function(c){var b=c.getMapLayer();if(!b.isLayerOfType("WMS")){return}if(b.isBaseLayer()||b.isGroupLayer()){if(b.getSubLayers().length>0){for(var d=0;d<b.getSubLayers().length;d++){var a=this._map.getLayersByName("basemap_"+b.getSubLayers()[d].getId());a[0].setOpacity(b.getOpacity()/100)}}else{var a=this._map.getLayersByName("layer_"+b.getId());if(a[0]!=null){a[0].setOpacity(b.getOpacity()/100)}}}else{this._sandbox.printDebug("Setting Layer Opacity for "+b.getId()+" to "+b.getOpacity());var a=this._map.getLayersByName("layer_"+b.getId());if(a[0]!=null){a[0].setOpacity(b.getOpacity()/100)}}},afterChangeMapLayerStyleEvent:function(c){var b=c.getMapLayer();if(!b.isBaseLayer()){var a=this._map.getLayersByName("layer_"+b.getId());if(a!=null){a[0].mergeNewParams({styles:b.getCurrentStyle().getName()})}}},attachLoadingStatusToLayer:function(b,e,c){var a=this._sandbox;var d=this;var f=this.getMapModule().getLocalization("status_update_map")+" '"+c.getName()+"'...";b.events.register("loadstart",b,function(){a.request(d,a.getRequestBuilder("ActionStartRequest")(b.id,f,true))});b.events.register("loadend",b,function(){a.request(d,a.getRequestBuilder("ActionReadyRequest")(b.id,true))});b.events.register("loadcancel",b,function(){a.request(d,a.getRequestBuilder("ActionReadyRequest")(b.id,true))})}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.$("SnappyGrid",OpenLayers.Class(OpenLayers.Layer.HTTPRequest,{tileSize:null,grid:null,singleTile:false,ratio:1.5,buffer:2,numLoadingTiles:0,initialize:function(c,b,d,a){OpenLayers.Layer.HTTPRequest.prototype.initialize.apply(this,arguments);this.events.addEventType("tileloaded");this.grid=[]},destroy:function(){this.clearGrid();this.grid=null;this.tileSize=null;OpenLayers.Layer.HTTPRequest.prototype.destroy.apply(this,arguments)},clearGrid:function(){if(this.grid){for(var f=0,b=this.grid.length;f<b;f++){var e=this.grid[f];for(var c=0,a=e.length;c<a;c++){var d=e[c];this.removeTileMonitoringHooks(d);d.destroy()}}this.grid=[]}},clone:function(a){if(a==null){a=new OpenLayers.Layer.Grid(this.name,this.url,this.params,this.getOptions())}a=OpenLayers.Layer.HTTPRequest.prototype.clone.apply(this,[a]);if(this.tileSize!=null){a.tileSize=this.tileSize.clone()}a.grid=[];return a},moveTo:function(d,a,e){OpenLayers.Layer.HTTPRequest.prototype.moveTo.apply(this,arguments);d=d||this.map.getExtent();if(d!=null){var c=!this.grid.length||a;var b=this.getTilesBounds();if(this.singleTile){if(c||(!e&&!b.containsBounds(d))){this.initSingleTile(d)}}else{if(c||!b.containsBounds(d,true)){this.initGriddedTiles(d)}else{this.moveGriddedTiles(d)}}}},setTileSize:function(a){if(this.singleTile){a=this.map.getSize();a.h=parseInt(a.h*this.ratio);a.w=parseInt(a.w*this.ratio)}OpenLayers.Layer.HTTPRequest.prototype.setTileSize.apply(this,[a])},getGridBounds:function(){var a="The getGridBounds() function is deprecated. It will be removed in 3.0. Please use getTilesBounds() instead.";OpenLayers.Console.warn(a);return this.getTilesBounds()},getTilesBounds:function(){var e=null;if(this.grid.length){var a=this.grid.length-1;var d=this.grid[a][0];var b=this.grid[0].length-1;var c=this.grid[0][b];e=new OpenLayers.Bounds(d.bounds.left,d.bounds.bottom,c.bounds.right,c.bounds.top)}return e},initSingleTile:function(f){var a=f.getCenterLonLat();var h=f.getWidth()*this.ratio;var b=f.getHeight()*this.ratio;var g=new OpenLayers.Bounds(a.lon-(h/2),a.lat-(b/2),a.lon+(h/2),a.lat+(b/2));var d=new OpenLayers.LonLat(g.left,g.top);var c=this.map.getLayerPxFromLonLat(d);if(!this.grid.length){this.grid[0]=[]}var e=this.grid[0][0];if(!e){e=this.addTile(g,c);this.addTileMonitoringHooks(e);e.draw();this.grid[0][0]=e}else{e.moveTo(g,c)}this.removeExcessTiles(1,1)},calculateGridLayout:function(a,o,e){var k=e*this.tileSize.w;var c=e*this.tileSize.h;var i=a.left-o.left;var l=Math.floor(i/k)-this.buffer;var j=i/k-l;var f=-j*this.tileSize.w;var m=o.left+l*k;var b=a.top-(o.bottom+c);var h=Math.ceil(b/c)+this.buffer;
var n=h-b/c;var d=-n*this.tileSize.h;var g=o.bottom+h*c;return{tilelon:k,tilelat:c,tileoffsetlon:m,tileoffsetlat:g,tileoffsetx:f,tileoffsety:d}},initGriddedTiles:function(i){var g=this.map.getSize();var w=Math.ceil(g.h/this.tileSize.h)+Math.max(1,2*this.buffer);var A=Math.ceil(g.w/this.tileSize.w)+Math.max(1,2*this.buffer);var o=this.getMaxExtent();var s=this.map.getResolution();var r=this.calculateGridLayout(i,o,s);var f=Math.round(r.tileoffsetx);var c=Math.round(r.tileoffsety);var k=r.tileoffsetlon;var n=r.tileoffsetlat;var e=r.tilelon;var j=r.tilelat;this.origin=new OpenLayers.Pixel(f,c);var v=f;var z=k;var u=0;var a=parseInt(this.map.layerContainerDiv.style.left);var t=parseInt(this.map.layerContainerDiv.style.top);do{var h=this.grid[u++];if(!h){h=[];this.grid.push(h)}k=z;f=v;var d=0;do{var b=new OpenLayers.Bounds(k,n,k+e,n+j);var m=f;m-=a;var l=c;l-=t;var q=new OpenLayers.Pixel(m,l);var B=h[d++];if(!B){B=this.addTile(b,q);this.addTileMonitoringHooks(B);h.push(B)}else{B.moveTo(b,q,false)}k+=e;f+=this.tileSize.w}while((k<=i.right+e*this.buffer)||d<A);n-=j;c+=this.tileSize.h}while((n>=i.bottom-j*this.buffer)||u<w);this.removeExcessTiles(u,d);this.spiralTileLoad()},getMaxExtent:function(){return this.maxExtent},spiralTileLoad:function(){var b=[];var h=["right","down","left","up"];var g=0;var a=-1;var k=OpenLayers.Util.indexOf(h,"right");var l=0;while(l<h.length){var j=g;var c=a;switch(h[k]){case"right":c++;break;case"down":j++;break;case"left":c--;break;case"up":j--;break}var f=null;if((j<this.grid.length)&&(j>=0)&&(c<this.grid[0].length)&&(c>=0)){f=this.grid[j][c]}if((f!=null)&&(!f.queued)){b.unshift(f);f.queued=true;l=0;g=j;a=c}else{k=(k+1)%4;l++}}for(var d=0,e=b.length;d<e;d++){var f=b[d];f.draw();f.queued=false}},addTile:function(b,a){},addTileMonitoringHooks:function(a){a.onLoadStart=function(){if(this.numLoadingTiles==0){this.events.triggerEvent("loadstart")}this.numLoadingTiles++};a.events.register("loadstart",this,a.onLoadStart);a.onLoadEnd=function(){this.numLoadingTiles--;this.events.triggerEvent("tileloaded");if(this.numLoadingTiles==0){this.events.triggerEvent("loadend")}};a.events.register("loadend",this,a.onLoadEnd);a.events.register("unload",this,a.onLoadEnd)},removeTileMonitoringHooks:function(a){a.unload();a.events.un({loadstart:a.onLoadStart,loadend:a.onLoadEnd,unload:a.onLoadEnd,scope:this})},moveGriddedTiles:function(c){var b=this.buffer||1;while(true){var a=this.grid[0][0].position;var d=this.map.getViewPortPxFromLayerPx(a);if(d.x>-this.tileSize.w*(b-1)){this.shiftColumn(true)}else{if(d.x<-this.tileSize.w*b){this.shiftColumn(false)}else{if(d.y>-this.tileSize.h*(b-1)){this.shiftRow(true)}else{if(d.y<-this.tileSize.h*b){this.shiftRow(false)}else{break}}}}}},shiftRow:function(n){var c=(n)?0:(this.grid.length-1);var b=this.grid;var f=b[c];var e=this.map.getResolution();var h=(n)?-this.tileSize.h:this.tileSize.h;var g=e*-h;var m=(n)?b.pop():b.shift();for(var j=0,l=f.length;j<l;j++){var d=f[j];var a=d.bounds.clone();var k=d.position.clone();a.bottom=a.bottom+g;a.top=a.top+g;k.y=k.y+h;m[j].moveTo(a,k)}if(n){b.unshift(m)}else{b.push(m)}},shiftColumn:function(m){var d=(m)?-this.tileSize.w:this.tileSize.w;var c=this.map.getResolution();var k=c*d;for(var e=0,g=this.grid.length;e<g;e++){var l=this.grid[e];var j=(m)?0:(l.length-1);var b=l[j];var a=b.bounds.clone();var f=b.position.clone();a.left=a.left+k;a.right=a.right+k;f.x=f.x+d;var h=m?this.grid[e].pop():this.grid[e].shift();h.moveTo(a,f);if(m){l.unshift(h)}else{l.push(h)}}},removeExcessTiles:function(e,c){while(this.grid.length>e){var f=this.grid.pop();for(var b=0,a=f.length;b<a;b++){var d=f[b];this.removeTileMonitoringHooks(d);d.destroy()}}while(this.grid[0].length>c){for(var b=0,a=this.grid.length;b<a;b++){var f=this.grid[b];var d=f.pop();this.removeTileMonitoringHooks(d);d.destroy()}}},onMapResize:function(){if(this.singleTile){this.clearGrid();this.setTileSize()}},getTileBounds:function(d){var c=this.maxExtent;var f=this.getResolution();var e=f*this.tileSize.w;var b=f*this.tileSize.h;var h=this.getLonLatFromViewPortPx(d);var a=c.left+(e*Math.floor((h.lon-c.left)/e));
var g=c.bottom+(b*Math.floor((h.lat-c.bottom)/b));return new OpenLayers.Bounds(a,g,a+e,g+b)},CLASS_NAME:"OpenLayers.Layer.SnappyGrid"}));Oskari.$("SnappyWMSLayer",OpenLayers.Class(OpenLayers.Layer.Grid,{DEFAULT_PARAMS:{service:"WMS",version:"1.1.1",request:"GetMap",styles:"",format:"image/jpeg"},reproject:false,isBaseLayer:true,encodeBBOX:false,noMagic:false,yx:{"EPSG:4326":true},initialize:function(d,c,e,b){var a=[];e=OpenLayers.Util.upperCaseObject(e);if(parseFloat(e.VERSION)>=1.3&&!e.EXCEPTIONS){e.EXCEPTIONS="INIMAGE"}a.push(d,c,e,b);OpenLayers.Layer.Grid.prototype.initialize.apply(this,a);OpenLayers.Util.applyDefaults(this.params,OpenLayers.Util.upperCaseObject(this.DEFAULT_PARAMS));if(!this.noMagic&&this.params.TRANSPARENT&&this.params.TRANSPARENT.toString().toLowerCase()=="true"){if((b==null)||(!b.isBaseLayer)){this.isBaseLayer=false}if(this.params.FORMAT=="image/jpeg"){this.params.FORMAT=OpenLayers.Util.alphaHack()?"image/gif":"image/png"}}},destroy:function(){OpenLayers.Layer.Grid.prototype.destroy.apply(this,arguments)},clone:function(a){if(a==null){a=new OpenLayers.Layer.WMS(this.name,this.url,this.params,this.getOptions())}a=OpenLayers.Layer.Grid.prototype.clone.apply(this,[a]);return a},reverseAxisOrder:function(){return(parseFloat(this.params.VERSION)>=1.3&&!!this.yx[this.map.getProjectionObject().getCode()])},getURL:function(c){c=this.adjustBounds(c);var d=this.getImageSize();var e={};var b=this.reverseAxisOrder();e.BBOX=this.encodeBBOX?c.toBBOX(null,b):c.toArray(b);e.WIDTH=d.w;e.HEIGHT=d.h;var a=this.getFullRequestString(e);return a},mergeNewParams:function(c){var b=OpenLayers.Util.upperCaseObject(c);var a=[b];return OpenLayers.Layer.Grid.prototype.mergeNewParams.apply(this,a)},getFullRequestString:function(e,c){var b=this.map.getProjectionObject();var a=this.projection&&this.projection.equals(b)?this.projection.getCode():b.getCode();var d=(a=="none")?null:a;if(parseFloat(this.params.VERSION)>=1.3){this.params.CRS=d}else{this.params.SRS=d}if(typeof this.params.TRANSPARENT=="boolean"){e.TRANSPARENT=this.params.TRANSPARENT?"TRUE":"FALSE"}return OpenLayers.Layer.Grid.prototype.getFullRequestString.apply(this,arguments)},CLASS_NAME:"OpenLayers.Layer.SnappyWMS"}));Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.ToolSelectionRequest",function(a){this._toolId=a;this._creator=null},{tools:{navigate:"map_control_navigate_tool",previous:"map_control_tool_prev",next:"map_control_tool_prev",select:"map_control_select_tool",zoom:"map_control_zoom_tool",draw_area:"map_control_draw_area_tool",measure:"map_control_measure_tool",measure_area:"map_control_measure_area_tool",info:"map_control_show_info_tool"},__name:"ToolSelectionRequest",getName:function(){return this.__name},getToolId:function(){return this._toolId},setToolId:function(a){this._toolId=a},getNamespace:function(){if(this._toolId.indexOf(".")==-1){return""}return this._toolId.substring(0,this._toolId.lastIndexOf("."))},getToolName:function(){if(this._toolId.indexOf(".")==-1){return this._toolId}return this._toolId.substring(this._toolId.lastIndexOf("."))}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.ToolSelectionHandler",function(a,b){this.sandbox=a;this.controlsPlugin=b},{__name:"ToolSelectionHandler",getName:function(){return this.__name},init:function(a){},handleRequest:function(a,f){var h=f.getToolId();var b=f.getNamespace();var d=f.getToolName();if(d!="map_control_zoom_tool"){this.controlsPlugin._zoomBoxTool.deactivate()}if(d!="map_control_measure_tool"){this.controlsPlugin._measureControls.line.deactivate()}if(d!="map_control_measure_area_tool"){this.controlsPlugin._measureControls.area.deactivate()}if(d=="map_control_tool_prev"){var i=this.sandbox.findRegisteredModuleInstance("StateHandler");if(i){i.historyMovePrevious()}}else{if(d=="map_control_tool_next"){var i=this.sandbox.findRegisteredModuleInstance("StateHandler");if(i){i.historyMoveNext()}}else{if(d=="map_control_select_tool"){var c=this.sandbox.findRegisteredModuleInstance("SketchLayerPlugin");if(c){c.clearBbox()}}else{if(d=="map_control_zoom_tool"){this.controlsPlugin._zoomBoxTool.activate()
}else{if(d=="map_control_measure_tool"){this.controlsPlugin._measureControls.line.activate()}else{if(d=="map_control_measure_area_tool"){this.controlsPlugin._measureControls.area.activate()}}}}}}var g=this.sandbox.getEventBuilder("ToolSelectedEvent")(h);g.setOrigin(this.getName());this.sandbox.notifyAll(g)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.MapLayerUpdateRequest",function(a,b){this._layerId=a;this._forced=b},{__name:"MapModulePlugin.MapLayerUpdateRequest",getName:function(){return this.__name},getLayerId:function(){return this._layerId},isForced:function(){if(this._forced){return this._forced}return false}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.MapLayerUpdateRequestHandler",function(a,b){this.sandbox=a;this.mapModule=b},{handleRequest:function(b,g){var a=g.getLayerId();var f=g.isForced();var c=this.mapModule.getOLMapLayers(a);var e=0;if(c){e=c.length;for(var d=0;d<c.length;++d){c[d].redraw(f)}}this.sandbox.printDebug("[MapLayerUpdateRequestHandler] update layer "+a+", found "+e)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.MapMoveRequestHandler",function(a,b){this.sandbox=a;this.mapModule=b},{handleRequest:function(b,d){var f=d.getCenterX();var g=d.getCenterY();var a=d.getMarker();var c=d.getZoom();var e=new OpenLayers.LonLat(f,g);this.mapModule.moveMapToLanLot(e);if(c||c===0){if(c.CLASS_NAME==="OpenLayers.Bounds"){this.mapModule._map.zoomToExtent(c)}else{this.mapModule._map.zoomTo(c)}}this.mapModule._updateDomain();if(a){this.mapModule._drawMarker()}this.mapModule.notifyMoveEnd();this.sandbox.printDebug("[MapMoveRequestHandler] map moved")}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.event.MapClickedEvent",function(c,b,a){this._lonlat=c;this._mouseX=b;this._mouseY=a},{__name:"MapClickedEvent",getName:function(){return this.__name},getLonLat:function(){return this._lonlat},getMouseX:function(){return this._mouseX},getMouseY:function(){return this._mouseY}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.event.EscPressedEvent",function(){},{__name:"EscPressedEvent",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.ClearHistoryRequest",function(){this._creator=null},{__name:"ClearHistoryRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.controls.ClearHistoryHandler",function(a,b){this.mapModule=b;this.sandbox=a},{__name:"ClearHistoryHandler",getName:function(){return this.__name},init:function(a){},handleRequest:function(a,b){this.mapModule.clearNavigationHistory()}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.CoreMapModuleBundleInstance",function(a){this.name="mapmodule";this.mediator=null;this.sandbox=null;this.conf=null;this.impl=null;this.facade=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};var o=Oskari.$("UI.facade");this.facade=o;var m=o.getSandbox();this.sandbox=m;var j=Oskari.$("startup");this.conf=j;var n=j.mapConfigurations.index_map;var l=j.mapConfigurations.zoom_bar;var b=j.mapConfigurations.scala_bar;var d=j.mapConfigurations.pan;var k=Oskari.clazz.create("Oskari.mapframework.ui.module.common.MapModule","Main",n,l,b,d);this.impl=k;var f=this.createMapPanel();this._panel=f;var a=this.facade.appendExtensionModule(this.impl,this.name,{},this,"Center",{fi:{title:""},sv:{title:"?"},en:{title:""}},f);this.def=a;var e=[];e.push("Oskari.mapframework.bundle.mapmodule.plugin.LayersPlugin");e.push("Oskari.mapframework.mapmodule.WmsLayerPlugin");e.push("Oskari.mapframework.mapmodule.ControlsPlugin");for(var g=0;g<e.length;
g++){var h=Oskari.clazz.create(e[g]);k.registerPlugin(h)}var c=this.createMapContainer(this.impl.getMap());this._mapster=c;f.add(c);o.registerPart("Mapster",this._mapster);this.impl.start(m);this.mediator.setState("started");return this},createMapPanel:function(){var a=this.libs.ext;var b=a.create("Ext.Panel",{region:"center",layout:"fit",items:[]});return b},createMapContainer:function(b){var a=this.libs.ext;var c=a.createWidget("nlsfimappanel",{olmap:b,layout:"absolute"});return c},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.impl.eventHandlers,this,this.def);this.def=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.CoreMapModuleBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});