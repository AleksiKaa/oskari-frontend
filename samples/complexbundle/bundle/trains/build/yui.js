/* This is a packed Oskari bundle (bundle script version Mon Feb 27 2012 09:45:18 GMT+0200 (Suomen normaaliaika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.TrainsBundleUI",function(b,a){this.libs=b;this.form=null;this.ui=null;this.store=null;this.form=null;this.grid=null;this.bundle=a;this.items={}},{clear:function(){this.store=null;this.form=null;this.libs=null;this.ui=null;this.grid=null},setLibs:function(a){this.libs=a},get:function(){return this.pnl},setStore:function(a){this.store=a},getStore:function(){return this.store},getGrid:function(){return this.grid},showTrain:function(a){this.items.lbl.setValue(a.title||"")},showTrainDetails:function(b){var a=this.getStore();a.removeAll();a.add([b])},create:function(){var a=this.libs.ext;var a=this.libs.ext;var e=this;var c=a.create("Ext.grid.Panel",{store:e.getStore(),width:400,height:200,title:"Trains",columns:[{xtype:"actioncolumn",width:50,items:[{icon:"../map-application-framework/resource/silk-icons/control_play.png",tooltip:"Show",handler:function(i,k,h){var j=e.getStore().getAt(k)}}]},{text:"Title",flex:1,dataIndex:"title"},{text:"Guid",flex:1,dataIndex:"guid"},{text:"From",flex:1,dataIndex:"from"},{text:"To",flex:1,dataIndex:"to"},{text:"Status",flex:1,dataIndex:"status"},{text:"Dir",flex:1,dataIndex:"dir"}]});this.grid=c;var g=a.create("Ext.form.field.Text",{name:"name",fieldLabel:"Name",allowBlank:false});this.items.lbl=g;var d=a.create("Ext.form.Panel",{items:[g,c]});this.form=d;var b=a.create("Ext.Panel",{bodyStyle:"padding:5px 5px 0",height:384,layout:"fit",defaults:{bodyPadding:4},items:[d]});this.pnl=b;return b}});Oskari.clazz.define("Oskari.mapframework.bundle.TrainsBundleInstance",function(a){this.url="/rss/TrainRSS/TrainService.svc/AllTrains";this.name="TrainsModule";this.mediator=null;this.sandbox=null;this.layerId=null;this.layer=null;this.ui=null;this.features=null},{getStore:function(){return this.store},clear:function(){this.store.clearData();this.store.destroyStore();this.store=null},start:function(){var a=this;if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");this.createProjs();this.createFormats();this.createModels();this.createStores();this.startWorker();var b=this.facade.appendExtensionModule(this,this.name,this.eventHandlers,this,"E",{fi:{title:" Trains"},sv:{title:"?"},en:{title:" Trains"}});this.def=b;this.layerId="____Trains___"+this.mediator.instanceid;this.addVectorLayer();this.mediator.setState("started");return this},startWorker:function(){var c=this;var b=this.libs.ext;this.func=b.Function.createThrottled(function(){this.processQuery()},3200,c);var a={run:this.func,interval:3200};this.task=a;b.TaskManager.start(a)},stopWorker:function(){var b=this;var a=this.libs.ext;a.TaskManager.stop(b.task)},createProjs:function(){var a=this;a.projs={"EPSG:3067":new OpenLayers.Projection("EPSG:3067"),"EPSG:4326":new OpenLayers.Projection("EPSG:4326")}},createFormats:function(){var b=this;var c=new OpenLayers.Format.GeoRSS({internalProjection:b.projs["EPSG:3067"],externalProjection:b.projs["EPSG:4326"]});var a={guid:{},category:{},description:{},pubDate:{type:"date"},from:{},to:{},status:{},dir:{}};c.readFields=a;c.createFeatureFromItem=function(o){var j=this.createGeometryFromItem(o);var m=this.getChildValue(o,"*","title",this.featureTitle);var n=this.getChildValue(o,"*","description",this.getChildValue(o,"*","content",this.getChildValue(o,"*","summary",this.featureDescription)));var k=this.getChildValue(o,"*","link");if(!k){try{k=this.getElementsByTagNameNS(o,"*","link")[0].getAttribute("href")}catch(i){k=null}}var d=this.getChildValue(o,"*","id",null);var h={title:m,description:n,link:k};var l=this.readFields;for(f in l){var g=this.getChildValue(o,"*",f,l[f].defaultValue);h[f]=g}var p=new OpenLayers.Feature.Vector(j,h);p.fid=d;return p};b.format=c},createModels:function(){var a=this.libs.ext;var b=this;if(!a.ClassManager.get("Train")){a.define("Train",{extend:"Ext.data.Model",fields:["summary","status","title","from","to","guid","category"]})}},createStores:function(){var b=this.libs.ext;var c=this;var a=b.create("Ext.data.Store",{model:"Train",autoLoad:false});this.store=a},init:function(a){this.sandbox=a;
var b=Oskari.clazz.create("Oskari.mapframework.bundle.TrainsBundleUI",this.libs,this);this.ui=b;b.setLibs(this.libs);b.setStore(this.getStore());b.create();return b.get()},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.stopped=true;var a=this.libs.ext;this.stopWorker();this.removeVectorLayer();this.facade.removeExtensionModule(this,this.name,this.eventHandlers,this,this.def);this.def=null;this.sandbox.printDebug("Clearing STORE etc");this.ui.clear();this.ui=null;this.clear();this.mediator.setState("stopped");return this},setNE:function(b,a){this.n=b;this.e=a},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},defaults:{minScale:800000,maxScale:1},getFeatureInfo:function(i,h,a){var d=this;if(!d.features){return}var g=new OpenLayers.Geometry.Point(i,h);var j=OpenLayers.Geometry.Polygon.createRegularPolygon(g,32,8);d.ui.showTrain({});for(var e=0;e<d.features.length;e++){var b=d.features[e];if(!b.geometry){continue}if(j.intersects(b.geometry)){if(a){d.ui.showTrain(b.attributes)}else{d.ui.showTrainDetails(b.attributes)}}}},eventHandlers:{AfterMapLayerRemoveEvent:function(d){var c=d.getMapLayer();if(c.getId()==this.layerId){if(this.sandbox.getObjectCreator(d)!=this.getName()){this.stop();var b=this.mediator.manager;var a=this.mediator.instanceid;b.destroyInstance(a)}}},AfterMapMoveEvent:function(c){var b=this;var a=this.sandbox;var g=c.getScale();if(!(g<this.defaults.minScale&&g>this.defaults.maxScale)){return}var h=c.getCenterY();var d=c.getCenterX();b.sandbox.printDebug("N:"+h+" E:"+d);b.setNE(h,d);b.func()},FeaturesGetInfoEvent:function(d){var b=this.sandbox;var c=d.getMapLayer();var a=c.getId();if(a!=this.layerId){b.printDebug("FeaturesGetInfoEvent@Trains: "+this.layerId+" vs. queried "+a);return}b.printDebug("Handling FeaturesGetInfoEvent for "+this.layerId);var g=d.getLon();var e=d.getLat();this.getFeatureInfo(g,e)},MouseHoverEvent:function(c){var a=c.getLon();var b=c.getLat();this.getFeatureInfo(a,b,true)},AfterAddExternalMapLayerEvent:function(a){if(a.getMapLayerId()==this.layerId){this.layer=a.getLayer()}},AfterRemoveExternalMapLayerEvent:function(a){if(a.getMapLayerId()==this.layerId){this.layer=null}}},processQuery:function(){var c=this;var i=this.n;var g=this.e;c.sandbox.printDebug("STARTING Trains LOAD N:"+i+" E:"+g);var a=this.libs.ext;var h=Proj4js.transform(c.projs["EPSG:3067"],c.projs["EPSG:4326"],{x:g,y:i});var b=h.x;var d=h.y;c.loadRss()},loadRss:function(){var b=this;var d={};var c=new Date().getTime();var a={url:b.url+"?ts="+c,params:OpenLayers.Util.upperCaseObject(d),callback:function(e){b.handleResponse(e)},scope:this};OpenLayers.Request.GET(a)},handleResponse:function(g){if(this.stopped){return}var e=this;var b=e.getStore();var a=e.libs.ext;var h=g.responseXML;if(!h||!h.documentElement){h=g.responseText}var c=e.format.read(h);if(this.stopped){return}var d=this.sandbox.getEventBuilder("FeaturesAvailableEvent")(this.layer,c,"application/nlsfi-x-openlayers-feature","EPSG:3067","replace");e.sandbox.notifyAll(d);this.features=c},styledLayerDescriptors:{"default":'<StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"     xmlns="http://www.opengis.net/sld"     xmlns:ogc="http://www.opengis.net/ogc"     xmlns:xlink="http://www.w3.org/1999/xlink"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">   <NamedLayer>     <Name>Simple point with stroke</Name>    <UserStyle><Title>GeoServer SLD Cook Book: Simple point with stroke</Title>     <FeatureTypeStyle><Rule><PointSymbolizer> <Graphic><Mark><WellKnownName>circle</WellKnownName><Fill>        <CssParameter name="fill">#00A000</CssParameter>       </Fill><Stroke>          <CssParameter name="stroke">#000000</CssParameter>           <CssParameter name="stroke-width">2</CssParameter>          </Stroke></Mark><Size>12</Size></Graphic>     </PointSymbolizer><TextSymbolizer><Label><ogc:PropertyName>title</ogc:PropertyName></Label><Fill><CssParameter name="fill">#000000</CssParameter></Fill></TextSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'},addVectorLayer:function(){var c=this.layerId,b=true,g=false;
var h=this.styledLayerDescriptors["default"];var a={text:"",name:"Trains",wmsName:"1",type:"vectorlayer",styles:{title:"Trains",legend:"",name:"1"},descriptionLink:"http://www.vr.fi/",legendImage:"",info:"",isQueryable:true,formats:{value:"text/html"},id:c,minScale:this.defaults.minScale,maxScale:this.defaults.maxScale,style:"",dataUrl:"",wmsUrl:"x",opacity:100,checked:"false",styledLayerDescriptor:h};var d=this.sandbox.getRequestBuilder("AddExternalMapLayerRequest")(c,a);this.sandbox.request(this.getName(),d);var e=this.sandbox.getRequestBuilder("AddMapLayerRequest")(c,b);this.sandbox.request(this.getName(),e)},removeVectorLayer:function(){var a=this.layerId;var b=this.sandbox.getRequestBuilder("RemoveMapLayerRequest")(a);this.sandbox.request(this.getName(),b);var c=this.sandbox.getRequestBuilder("RemoveExternalMapLayerRequest")(a);this.sandbox.request(this.getName(),c)},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.TrainsBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.mapframework.bundle.extension.Extension","Oskari.mapframework.bundle.extension.EventListener"]});