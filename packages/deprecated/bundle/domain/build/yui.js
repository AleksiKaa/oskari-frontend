/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes√§aika)) */ 
Oskari.clazz.define("Oskari.mapframework.domain.WmsLayer",function(){this._id=null;this._name=null;this._wmsLayerName=null;this._inspireName=null;this._organizationName=null;this._dataUrl=null;this._type=null;this._metaType=null;this._opacity=null;this._featureInfoEnabled=null;this._subLayers=[];this._styles=[];this._description=null;this._wmsUrls=[];this._dataUrl=null;this._legendImage=null;this._maxScale=null;this._minScale=null;this._queryable=null;this._currentStyle=null;this._visible=null;this._queryFormat=null;this._orderNumber=null;this._permissions={};this._geometry=[];this._geometryWKT=null},{setGeometryWKT:function(a){this._geometryWKT=a},getGeometryWKT:function(){return this._geometryWKT},setGeometry:function(a){this._geometry=a},getGeometry:function(){return this._geometry},addPermission:function(b,a){this._permissions[b]=a},removePermission:function(a){this._permissions[a]=null},getPermission:function(a){return this._permissions[a]},setId:function(a){this._id=a},getId:function(){return this._id},setQueryFormat:function(a){this._queryFormat=a},getQueryFormat:function(){return this._queryFormat},setName:function(a){this._name=a},getName:function(){return this._name},setType:function(a){this._type=a},getType:function(){return this._type},setOpacity:function(a){this._opacity=a},getOpacity:function(){return this._opacity},setDataUrl:function(a){this._dataUrl=a},getDataUrl:function(){return this._dataUrl},setOrganizationName:function(a){this._organizationName=a},getOrganizationName:function(){return this._organizationName},setInspireName:function(a){this._inspireName=a},getInspireName:function(){return this._inspireName},setFeatureInfoEnabled:function(a){this._featureInfoEnabled=a},isFeatureInfoEnabled:function(){if(this._featureInfoEnabled===true){return true}return false},setDescription:function(a){this._description=a},getDescription:function(){return this._description},addSubLayer:function(a){this._subLayers.push(a)},getSubLayers:function(){return this._subLayers},setMaxScale:function(a){this._maxScale=a},getMaxScale:function(){return this._maxScale},setMinScale:function(a){this._minScale=a},getMinScale:function(){return this._minScale},setAsBaseLayer:function(){this._type="BASE_LAYER"},setAsNormalLayer:function(){this._type="NORMAL_LAYER"},setOrderNumber:function(a){this._orderNumber=a},getOrderNumber:function(){return this._orderNumber},setLegendImage:function(a){this._legendImage=a},getLegendImage:function(){return this._legendImage},hasLegendImage:function(){if(this._legendImage){return true}else{for(var a=0;a<this._styles.length;++a){if(this._styles[a].getLegend()){return true}}}return false},setQueryable:function(a){this._queryable=a},getQueryable:function(){return this._queryable},addWmsUrl:function(a){this._wmsUrls.push(a)},getWmsUrls:function(){return this._wmsUrls},addStyle:function(a){this._styles.push(a)},getStyles:function(){return this._styles},selectStyle:function(b){var c=null;if(this._styles.length>0){if(b!==""){for(var a=0;a<this._styles.length;a++){c=this._styles[a];if(c.getName()==b){this._currentStyle=c;return}}}else{if(this._styles.length>1){this._currentStyle=this._styles[0]}else{c=Oskari.clazz.create("Oskari.mapframework.domain.Style");c.setName("");c.setTitle("");c.setLegend("");this._currentStyle=c}return}}else{c=Oskari.clazz.create("Oskari.mapframework.domain.Style");c.setName("");c.setTitle("");c.setLegend("");this._currentStyle=c;return}c=Oskari.clazz.create("Oskari.mapframework.domain.Style");c.setName("");c.setTitle("");c.setLegend("");this._currentStyle=c},getCurrentStyle:function(){return this._currentStyle},setWmsName:function(a){this._wmsName=a},getWmsName:function(){return this._wmsName},setMetaType:function(a){this._metaType=a},getMetaType:function(){return this._metaType},setAsGroupLayer:function(){this._type="GROUP_LAYER"},isGroupLayer:function(){return this._type==="GROUP_LAYER"},isBaseLayer:function(){return this._type==="BASE_LAYER"},isVisible:function(){return this._visible===true},setVisible:function(a){this._visible=a},isInScale:function(c){var b=this.isBaseLayer();if(!c){var a=Oskari.$().sandbox;
c=a.getMap().getScale()}if(!this.isBaseLayer()){if(c>this.getMaxScale()&&c<this.getMinScale()){b=true}}return b},isLayerOfType:function(a){return a==="WMS"||a==="wms"}});Oskari.clazz.define("Oskari.mapframework.domain.WfsLayer",function(){this._id=null;this._type=null;this._opacity=null;this._inspireName=null;this._organizationName=null;this._dataUrl=null;this._subLayers=[];this._description=null;this._name=null;this._visible=null;this._maxScale=null;this._minScale=null;this._orderNumber=null;this._featureInfoEnabled=true;this._permissions={};this._geometry=[];this._geometryWKT=null},{setGeometryWKT:function(a){this._geometryWKT=a},getGeometryWKT:function(){return this._geometryWKT},setGeometry:function(a){this._geometry=a},getGeometry:function(){return this._geometry},addPermission:function(b,a){this._permissions[b]=a},removePermission:function(a){this._permissions[a]=null},getPermission:function(a){return this._permissions[a]},setId:function(a){this._id=a},getId:function(){return this._id},setName:function(a){this._name=a},getName:function(){return this._name},setType:function(a){this._type=a},getType:function(){return this._type},setOpacity:function(a){this._opacity=a},getOpacity:function(){return this._opacity},setDataUrl:function(a){this._dataUrl=a},getDataUrl:function(){return this._dataUrl},setOrganizationName:function(a){this._organizationName=a},getOrganizationName:function(){return this._organizationName},setInspireName:function(a){this._inspireName=a},getInspireName:function(){return this._inspireName},setFeatureInfoEnabled:function(a){this._featureInfoEnabled=a},isFeatureInfoEnabled:function(){if(this._featureInfoEnabled===true){return true}return false},setDescription:function(a){this._description=a},getDescription:function(){return this._description},addSubLayer:function(a){this._subLayers.push(a)},getSubLayers:function(){return this._subLayers},setMaxScale:function(a){this._maxScale=a},getMaxScale:function(){return this._maxScale},setMinScale:function(a){this._minScale=a},getMinScale:function(){return this._minScale},setAsBaseLayer:function(){this._type="BASE_LAYER"},setAsNormalLayer:function(){this._type="NORMAL_LAYER"},setOrderNumber:function(a){this._orderNumber=a},getOrderNumber:function(){return this._orderNumber},isBaseLayer:function(){return this._type==="BASE_LAYER"},isInScale:function(c){var b=this.isBaseLayer();if(!c){var a=Oskari.$().sandbox;c=a.getMap().getScale()}if(!this.isBaseLayer()){if(c>this.getMaxScale()&&c<this.getMinScale()){b=true}}return b},isVisible:function(){return this._visible===true},setVisible:function(a){this._visible=a},isLayerOfType:function(a){return a=="WFS"||a=="wfs"}});Oskari.clazz.define("Oskari.mapframework.domain.VectorLayer",function(){this._id=null;this._type=null;this._opacity=null;this._inspireName=null;this._organizationName=null;this._dataUrl=null;this._subLayers=[];this._description=null;this._name=null;this._maxScale=null;this._minScale=null;this._sldspec=null;this._orderNumber=null;this._featureInfoEnabled=true;this._metaType=null;this._permissions={};this._geometry=[];this._geometryWKT=null;this._visible=true},{setGeometryWKT:function(a){this._geometryWKT=a},getGeometryWKT:function(){return this._geometryWKT},setGeometry:function(a){this._geometry=a},getGeometry:function(){return this._geometry},addPermission:function(b,a){this._permissions[b]=a},removePermission:function(a){this._permissions[a]=null},getPermission:function(a){return this._permissions[a]},setId:function(a){this._id=a},getId:function(){return this._id},setName:function(a){this._name=a},getName:function(){return this._name},setType:function(a){this._type=a},getType:function(){return this._type},setOpacity:function(a){this._opacity=a},getOpacity:function(){return this._opacity},setDataUrl:function(a){this._dataUrl=a},getDataUrl:function(){return this._dataUrl},setOrganizationName:function(a){this._organizationName=a},getOrganizationName:function(){return this._organizationName},setInspireName:function(a){this._inspireName=a},getInspireName:function(){return this._inspireName},setFeatureInfoEnabled:function(a){this._featureInfoEnabled=a
},isFeatureInfoEnabled:function(){if(this._featureInfoEnabled===true){return true}return false},setDescription:function(a){this._description=a},getDescription:function(){return this._description},addSubLayer:function(a){this._subLayers.push(a)},getSubLayers:function(){return this._subLayers},setMaxScale:function(a){this._maxScale=a},getMaxScale:function(){return this._maxScale},setMinScale:function(a){this._minScale=a},getMinScale:function(){return this._minScale},setAsBaseLayer:function(){this._type="BASE_LAYER"},setAsNormalLayer:function(){this._type="NORMAL_LAYER"},setOrderNumber:function(a){this._orderNumber=a},getOrderNumber:function(){return this._orderNumber},setStyledLayerDescriptor:function(a){this._sldspec=a},getStyledLayerDescriptor:function(){return this._sldspec},isBaseLayer:function(){if(this._type=="BASE_LAYER"){return true}else{if(this._type=="NORMAL_LAYER"){return false}else{throw"We found a layer that is not a NORMAL_LAYER or a BASE_LAYER. Type '"+this._type+"' is not correct!"}}},isInScale:function(c){var b=this.isBaseLayer();if(!c){var a=Oskari.$().sandbox;c=a.getMap().getScale()}if(!this.isBaseLayer()){if(c>this.getMaxScale()&&c<this.getMinScale()){b=true}}return b},isVisible:function(){return this._visible},setVisible:function(a){this._visible=a},isLayerOfType:function(a){return a=="VECTOR"||a=="vector"},setMetaType:function(a){this._metaType=a},getMetaType:function(){return this._metaType},getStyles:function(){return[]}});Oskari.clazz.define("Oskari.mapframework.domain.Map",function(){this._centerX=null;this._centerY=null;this._zoom=null;this._mousePositionX=null;this._mousePositionY=null;this._mapKeyboardMovementsEnabled=null;this._scale=null;this._bbox=null;this._markerVisible=null;this.width=null;this.height=null;this.resolution=null;this.extent=null;this.maxExtent=null;this._isMoving=false;this.tileQueue=null},{moveTo:function(a,c,b){this._centerX=a;this._centerY=c;this._zoom=b},setMoving:function(a){this._isMoving=a},isMoving:function(){return this._isMoving},getX:function(){return this._centerX},getY:function(){return this._centerY},getZoom:function(){return this._zoom},updateMousePosition:function(a,b){this._mousePositionX=a;this._mousePositionY=b},getMousePositionX:function(){return this._mousePositionX},getMousePositionY:function(){return this._mousePositionY},setMapKeyboardMovementsEnabled:function(a){this._mapKeyboardMovementsEnabled=a},getMapKeyboardMovementsEnabled:function(){return this._mapKeyboardMovementsEnabled},setScale:function(a){this._scale=a},getScale:function(){return this._scale},setBbox:function(a){this._bbox=a},getBbox:function(){return this._bbox},setMarkerVisible:function(a){this._markerVisible=a},isMarkerVisible:function(){if(this._markerVisible==true){return true}return false},setWidth:function(a){this.width=a},getWidth:function(){return this.width},setHeight:function(a){this.height=a},getHeight:function(){return this.height},setResolution:function(a){this.resolution=a},getResolution:function(){return this.resolution},setExtent:function(a){this.extent=a},getExtent:function(){return this.extent},setMaxExtent:function(a){this.maxExtent=a},getMaxExtent:function(){return this.maxExtent},getTileQueue:function(){return this.tileQueue},setTileQueue:function(a){this.tileQueue=a}});Oskari.clazz.define("Oskari.mapframework.domain.Style",function(){this._name=null;this._title=null;this._legend=null},{setName:function(a){this._name=a},getName:function(){return this._name},setTitle:function(a){this._title=a},getTitle:function(){return this._title},setLegend:function(a){this._legend=a},getLegend:function(){return this._legend}});Oskari.clazz.define("Oskari.mapframework.domain.Polygon",function(){this._id=null;this._description=null;this._top=null;this._left=null;this._right=null;this._bottom=null;this._link=null;this._color="#684781";this._display="";this._zoomToExtent=false},{setId:function(a){this._id=a},getId:function(){return this._id},setDescription:function(a){this._description=a},getDescription:function(){return this._description},setTop:function(a){this._top=a},getTop:function(){return this._top
},setLeft:function(a){this._left=a},getLeft:function(){return this._left},setBottom:function(a){this._bottom=a},getBottom:function(){return this._bottom},setRight:function(a){this._right=a},getRight:function(){return this._right},setLink:function(a){this._link=a},getLink:function(){return this._link},setColor:function(a){this._color=a},getColor:function(){return this._color},setDisplay:function(a){this._display=a},getDisplay:function(){return this._display},setZoomToExtent:function(a){this._zoomToExtent=a},getZoomToExtent:function(){return this._zoomToExtent}});Oskari.clazz.define("Oskari.mapframework.domain.Tooltip",function(a,b){this._component=a;this._tooltip=b},{setComponent:function(a){this._component=a},setTooltip:function(a){this._tooltip=a},getComponent:function(){return this._component},getTooltip:function(){return this._tooltip}});Oskari.clazz.define("Oskari.mapframework.domain.WizardOptions",function(){this._wizardName=null;this._wizardId=null;this._wizardHeight=600;this._wizardWidth=800;this._wizardSteps=new Array();this._wizardTooltips=new Array();this._wizardShowProgressBar=true;this._wizardShowCloseConfirm=true;this._wizardCloseConfirmTitleKey="wizard_service_module_confirm_message_title";this._wizardCloseConfirmMessageKey="wizard_service_module_confirm_message"},{getWizardName:function(){return this._wizardName},getWizardId:function(){return this._wizardId},getWizardHeight:function(){return this._wizardHeight},getWizardWidth:function(){return this._wizardWidth},getWizardSteps:function(){return this._wizardSteps},getWizardStep:function(a){return this._wizardSteps[a]},getWizardStepsAmount:function(){return this._wizardSteps.length},getWizardTooltips:function(){return this._wizardTooltips},getWizardShowProgressBar:function(){return this._wizardShowProgressBar},getWizardShowCloseConfirm:function(){return this._wizardShowCloseConfirm},getWizardCloseConfirmMessageKey:function(){return this._wizardCloseConfirmMessageKey},getWizardCloseConfirmTitleKey:function(){return this._wizardCloseConfirmTitleKey},setWizardName:function(a){this._wizardName=a},setWizardId:function(a){this._wizardId=a},setWizardHeight:function(a){this._wizardHeight=a},setWizardWidth:function(a){this._wizardWidth=a},setWizardSteps:function(a){this._wizardSteps=a},addWizardStep:function(a){this._wizardSteps.push(a)},setWizardTooltips:function(a){this._wizardTooltips=a},setWizardShowProgressBar:function(a){this._wizardShowProgressBar=a},setWizardShowCloseConfirm:function(a){this._wizardShowCloseConfirm=a},setWizardCloseConfirmTitleKey:function(a){this._wizardCloseConfirmTitleKey=a},setWizardCloseConfirmMessageKey:function(a){this._wizardCloseConfirmMessageKey=a}});Oskari.clazz.define("Oskari.mapframework.domain.WizardStep",function(f,c,a,g,b,e,d){this.CONTENT_TYPE_HTML="html";this.CONTENT_TYPE_URL="url";this.CONTENT_TYPE_PANEL="panel";this.CONTENT_TYPE_DYNAMIC_PANEL="dynpanel";this._stepTitle=f;this._contentTitle=c;this._contentPage=a;this._contentType=g;this._beforeNextStepFunction=e;this._beforePreviousStepFunction=d;this._actionKeys=b;if(this._beforeNextStepFunction==null||typeof this._beforeNextStepFunction!="function"){this._beforeNextStepFunction=function(){return true}}if(this._beforePreviousStepFunction==null||typeof this._beforePreviousStepFunction!="function"){this._beforePreviousStepFunction=function(){return true}}},{getActionKeys:function(){return this._actionKeys},getStepTitle:function(){return this._stepTitle},getContentTitle:function(){return this._contentTitle},getContentPage:function(){return this._contentPage},getContentType:function(){return this._contentType},getBeforeNextStepFunction:function(){return this._beforeNextStepFunction},getBeforePreviousStepFunction:function(){return this._beforePreviousStepFunction},setStepTitle:function(a){this._stepTitle=a},setContentTitle:function(a){this._contentTitle=a},setContentPage:function(a){this._contentPage=a},setContentType:function(a){this._contentType=a},setBeforeNextStepFunction:function(a){this._beforeNextStepFunction=a},setBeforePreviousStepFunction:function(a){this._beforePreviousStepFunction=a
}});Oskari.clazz.define("Oskari.mapframework.domain.WfsTileRequest",function(b,f,c,e,d,a){this._bbox=f;this._mapWidth=c;this._mapHeight=e;this._mapLayer=b;this._creator=d;this._sequenceNumber=a},{getMapLayer:function(){return this._mapLayer},getBbox:function(){return this._bbox},getMapWidth:function(){return this._mapWidth},getMapHeight:function(){return this._mapHeight},getSequenceNumber:function(){return this._sequenceNumber}});Oskari.clazz.define("Oskari.mapframework.domain.WfsGridScheduledRequest",function(a,e,b,d,c){this._bbox=e;this._mapWidth=b;this._mapHeight=d;this._mapLayer=a;this._creator=c},{getMapLayer:function(){return this._mapLayer},getBbox:function(){return this._bbox},getMapWidth:function(){return this._mapWidth},getMapHeight:function(){return this._mapHeight}});Oskari.clazz.define("Oskari.mapframework.gridcalc.QueuedTile",function(a){for(p in a){this[p]=a[p]}},{getBounds:function(){return this.bounds}});Oskari.clazz.define("Oskari.mapframework.gridcalc.TileQueue",function(){this.queue=[]},{getQueue:function(){return this.queue},getLength:function(){return this.queue.length},popJob:function(){var c=this.queue;var b=c.length;if(b===0){return null}if(b<4){return c.shift(-1)}var a=null;var d=Math.floor(b/2);a=c[d];this.queue=c.slice(0,d).concat(c.slice(d+1));return a},pushJob:function(a){this.queue.push(a)},flushQueue:function(){this.queue=[]}});Oskari.clazz.define("Oskari.mapframework.domain.User",function(a){this._loggedIn=false;if(a){this._firstName=a.firstName;this._lastName=a.lastName;this._nickName=a.nickName;this._loginName=a.loginName;this._uuid=a.userUUID;if(a.userUUID){this._loggedIn=true}}},{getName:function(){return this._firstName+" "+this._lastName},getFirstName:function(){return this._firstName},getLastName:function(){return this._lastName},getNickName:function(){return this._nickName},getLoginName:function(){return this._loginName},getUuid:function(){return this._uuid},isLoggedIn:function(){return this._loggedIn}});