/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes√§aika)) */ 
Oskari.clazz.define("Oskari.mapframework.sandbox.Sandbox",function(a){this._core=a;this._listeners=new Array();this._modules=new Array();this._modulesByName={};this._statefuls={};this.debugRequests=true;this.debugEvents=true;this.requestEventLog=[];this.requestEventStack=[];this.gatherDebugRequests=true;this.maxGatheredRequestsAndEvents=4096;this.requestAndEventGather=[];this._user=null;this._ajaxUrl=null},{disableDebug:function(){this.debugRequests=false;this.debugEvents=false;this.gatherDebugRequests=false},printDebug:function(a){this._core.printDebug(a)},setUser:function(a){this._user=Oskari.clazz.create("Oskari.mapframework.domain.User",a)},getUser:function(){if(!this._user){this.setUser()}return this._user},setAjaxUrl:function(a){this._ajaxUrl=a},getAjaxUrl:function(){return this._ajaxUrl},printWarn:function(a){this._core.printWarn(a)},getText:function(a,b){this._core.printDebug("sandbox.getText() is deprecated - Use new locale system instead");return this._core.getText(a,b)},getService:function(a){return this._core.getService(a)},showPopupText:function(a,c,b){return this._core.showPopupText(a,c,b)},registerAsStateful:function(b,a){this._statefuls[b]=a},unregisterStateful:function(a){this._statefuls[a]=null;delete this._statefuls[a]},getStatefulComponents:function(){return this._statefuls},register:function(a){this._modules.push(a);this._modulesByName[a.getName()]=a;this._core.registerFrameworkComponentToRuntimeEnvironment(a,a.getName());return a.init(this)},unregister:function(c){var b=[];for(var a=0;a<this._modules.length;a++){if(c===this._modules[a]){continue}b.push(this._modules[a])}this._modules=b;this._modulesByName[c.getName()]=undefined;this._core.unregisterFrameworkComponentFromRuntimeEnvironment(c,c.getName())},registerForEvent:function(c,d){var b=d.getName();this._core.printDebug("Sandbox is registering module '"+c.getName()+"' to event '"+b+"'");var a=this._listeners[b];if(a==null){a=new Array();this._listeners[b]=a}a.push(c);this._core.printDebug("There are currently "+a.length+" listeners for event '"+b+"'");delete d},registerForEventByName:function(c,b){this._core.printDebug("#*#*#* Sandbox is registering module '"+c.getName()+"' to event '"+b+"'");var a=this._listeners[b];if(a==null){a=new Array();this._listeners[b]=a}a.push(c);this._core.printDebug("There are currently "+a.length+" listeners for event '"+b+"'")},unregisterFromEvent:function(d,e){var c=e.getName();this._core.printDebug("Sandbox is unregistering module '"+d.getName()+"' from event '"+c+"'");var a=this._listeners[c];if(a==null){}var b=a.indexOf(d);if(b>-1){a.splice(b,1);this._core.printDebug("Module unregistered successfully from event")}else{this._core.printDebug("Module does not listen to that event, skipping.")}delete e},unregisterFromEventByName:function(e,c){this._core.printDebug("Sandbox is unregistering module '"+e.getName()+"' from event '"+c+"'");var a=this._listeners[c];if(a==null){}var b=-1;for(var f=0;f<a.length;f++){if(a[f]==e){b=f;break}}if(b>-1){a.splice(b,1);this._core.printDebug("Module unregistered successfully from event")}else{this._core.printDebug("Module does not listen to that event, skipping.")}},startModules:function(){var a=this._modules.length;for(var c=0;c<a;c++){var b=this._modules[c];b.start(this)}},getRequestBuilder:function(a){return this._core.getRequestBuilder(a)},getEventBuilder:function(a){return this._core.getEventBuilder(a)},eventLoopGuard:0,debugPushRequest:function(b,c){if(!this.debugRequests){return}var a={from:b,reqName:c.getName()};this.requestEventStack.push(a);this.requestEventLog.push(a);if(this.requestEventLog.length>64){this.requestEventLog.shift()}},debugPopRequest:function(){if(!this.debugRequests){return}this.requestEventStack.pop()},debugPushEvent:function(b,c,a){if(!this.debugEvents){return}this.eventLoopGuard++;if(this.eventLoopGuard>64){throw"Events Looped?"}var d={from:b,to:c.getName(),evtName:a.getName()};this.requestEventStack.push(d);this.requestEventLog.push(d);if(this.requestEventLog.length>64){this.requestEventLog.shift()}},debugPopEvent:function(){if(!this.debugEvents){return
}this.eventLoopGuard--;this.requestEventStack.pop()},ajax:function(c,g,b,a,e){if(Ext&&Ext.Ajax&&Ext.Ajax.request){Ext.Ajax.request({url:c,success:g,failure:b})}else{if(jQuery&&jQuery.ajax){var f=function(h){var i={responseText:h};g(i)};var d="GET";if(e){d="POST"}jQuery.ajax({type:d,url:c,beforeSend:function(h){if(h&&h.overrideMimeType){h.overrideMimeType("application/j-son;charset=UTF-8")}},success:f,error:b})}else{alert("Couldn't make ajax call")}}},request:function(b,c){var a=null;if(b.getName!=null){a=this.findRegisteredModule(b.getName())}else{a=this.findRegisteredModule(b)}if(a==null){throw"Attempt to create request with unknown component '"+b+"' as creator"}this._core.setObjectCreator(c,a);this.printDebug("Module '"+a+"' is requesting for '"+this.getObjectName(c)+"'...");if(this.gatherDebugRequests){this.pushRequestAndEventGather(a+"->Sandbox: ",this.getObjectName(c))}var d=null;this.debugPushRequest(a,c);d=this._core.processRequest(c);this.debugPopRequest();return d},requestByName:function(b,g,f){this.printDebug("#!#!#! --------------> requestByName "+g);var e=this.getRequestBuilder(g);var c=e.apply(this,f);var a=null;if(b.getName!=null){a=this.findRegisteredModule(b.getName())}else{a=this.findRegisteredModule(b)}if(a==null){throw"Attempt to create request with unknown component '"+b+"' as creator"}this._core.setObjectCreator(c,a);this.printDebug("Module '"+a+"' is requesting for '"+this.getObjectName(c)+"'...");if(this.gatherDebugRequests){this.pushRequestAndEventGather(a+"->Sandbox: ",this.getObjectName(c))}var d=null;this.debugPushRequest(a,c);d=this._core.processRequest(c);this.debugPopRequest();return d},postRequestByName:function(c,b){var a=this;window.setTimeout(function(){a.printDebug("#!#!#! POSTING --------------> requestByName "+c);var g=a.getRequestBuilder(c);var e=g.apply(a,b);var d="postmaster";a._core.setObjectCreator(e,d);a.printDebug("Module '"+d+"' is POSTING a request for '"+a.getObjectName(e)+"'...");if(a.gatherDebugRequests){a.pushRequestAndEventGather(d+"->Sandbox: ",a.getObjectName(e))}var f=null;a.debugPushRequest(d,e);f=a._core.processRequest(e);a.debugPopRequest()},10)},findModulesInterestedIn:function(c){var a=c.getName();var b=this._listeners[a];return b},notifyAll:function(e,f){var a;if(!f){a=e.getName();this._core.printDebug("Sandbox received notifyall for event '"+a+"'")}var b=this.findModulesInterestedIn(e);if(b!=null){if(!f){this._core.printDebug("Found "+b.length+" interested modules")}for(var d=0;d<b.length;d++){var c=b[d];if(!f){this._core.printDebug("Notifying module '"+c.getName()+"'.");if(this.gatherDebugRequests){this.pushRequestAndEventGather("Sandbox->"+c.getName()+":",a)}}this.debugPushEvent(this.getObjectCreator(e),c,e);c.onEvent(e);this.debugPopEvent()}}else{if(!f){this._core.printDebug("No interested modules found.")}}if(!f){delete e}},findRegisteredModuleInstance:function(a){return this._modulesByName[a]},findRegisteredModule:function(a){return this._modulesByName[a]?this._modulesByName[a].getName():null},getRequestParameter:function(a){return this._core.getRequestParameter(a)},getLanguage:function(){return this._core.getLanguage()},getBrowserWindowSize:function(){return this._core.getBrowserWindowSize()},getObjectName:function(a){return this._core.getObjectName(a)},getObjectCreator:function(a){return this._core.getObjectCreator(a)},setObjectCreator:function(b,a){return this._core.setObjectCreator(b,a)},copyObjectCreatorToFrom:function(b,a){return this._core.copyObjectCreatorToFrom(b,a)},addRequestHandler:function(b,a){return this._core.addRequestHandler(b,a)},removeRequestHandler:function(b,a){return this._core.removeRequestHandler(b,a)},pushRequestAndEventGather:function(a,c){var b={};b.name=a;b.request=c;this.requestAndEventGather.push(b);if(this.requestAndEventGather.length>this.maxGatheredRequestsAndEvents){this.requestAndEventGather.shift()}},popUpSeqDiagram:function(){var b='<html><head></head><body><div class=wsd wsd_style="modern-blue" ><pre>';var a="";for(x in this.requestAndEventGather){a+=this.requestAndEventGather[x].name+this.requestAndEventGather[x].request+"\n"
}if(a!=""){b+=a+'</pre></div><script type="text/javascript" src="http://www.websequencediagrams.com/service.js"><\/script></body>';var c=window.open();c.document.write(b);this.requestAndEventGather=[]}else{alert("No requests in queue")}}});Oskari.clazz.category("Oskari.mapframework.sandbox.Sandbox","key-listener-methods",{isCtrlKeyDown:function(){return this._core.isCtrlKeyDown()}});