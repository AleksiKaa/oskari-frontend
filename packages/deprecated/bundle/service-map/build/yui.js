/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes√§aika)) */ 
Oskari.clazz.define("Oskari.mapframework.service.UsageSnifferService",function UsageSnifferService(b,a){this._sendInterval=b;this._snifferEndpoint=a;this._currentStatistics=[]},{__qname:"Oskari.mapframework.service.UsageSnifferService",getQName:function(){return this.__qname},__name:"UsageSnifferService",getName:function(){return this.__name},startSniffing:function(){var a=this;setInterval(function(){a.sendData()},this._sendInterval*1000);delete this._currentStatistics;this._currentStatistics=new Array()},sendData:function(){var b=this._currentStatistics;for(var a=0;a<b.length;a++){jQuery.get(b[a],function(d,e,c){})}this._currentStatistics=[]},registerMapMovement:function(d,a,e,j,h,f){for(var b=0;b<d.length;b++){var c=d[b];var g=c.getId();g+="?lon="+a+"&lat="+e+"&zoom="+j+"&bbox="+h;if(f!=null&&f!=""){g+="&mapId="+f}this._currentStatistics.push(this._snifferEndpoint+g)}}},{protocol:["Oskari.mapframework.service.Service"]});Oskari.clazz.define("Oskari.mapframework.service.GetFeatureInfoService",function(){},{__qname:"Oskari.mapframework.service.GetFeatureInfoService",getQName:function(){return this.__qname},__name:"GetFeatureInfoService",getName:function(){return this.__name},doGetFeatureInfo:function(f,d,c,i,b,h,e,g){var a="REQUEST=GetFeatureInfo&EXCEPTIONS=application/vnd.ogc.se_xml&BBOX="+bbox+"&X="+f+"&Y="+d+"&INFO_FORMAT="+c+"&QUERY_LAYERS="+i+"&WIDTH="+b+"&HEIGHT="+h+"&FEATURE_COUNT=1";jQuery.ajax({dataType:"text",type:"POST",url:e,data:a,success:g})}},{protocol:["Oskari.mapframework.service.Service"]});Oskari.clazz.define("Oskari.mapframework.service.MapLayerServiceModelBuilder",function(){},{parseLayerData:function(c,b,a){}});Oskari.clazz.define("Oskari.mapframework.service.MapLayerService",function(b,a){this._mapLayerUrl=b;this._sandbox=a;this._loadedLayersList=new Array();this._reservedLayerIds={};this.typeMapping={wmslayer:"Oskari.mapframework.domain.WmsLayer",wmtslayer:"Oskari.mapframework.wmts.domain.WmtsLayer",wfslayer:"Oskari.mapframework.domain.WfsLayer",vectorlayer:"Oskari.mapframework.domain.VectorLayer"},this.modelBuilderMapping={}},{__qname:"Oskari.mapframework.service.MapLayerService",getQName:function(){return this.__qname},__name:"MapLayerService",getName:function(){return this.__name},addLayer:function(b,a){this.checkForDuplicateId(b.getId(),b.getName());this._reservedLayerIds[b.getId()]=true;this._loadedLayersList.push(b);if(a!==true){var c=this._sandbox.getEventBuilder("MapLayerEvent")(b.getId(),"add");this._sandbox.notifyAll(c)}},removeLayer:function(a,b){var d=null;for(var c=0;c<this._loadedLayersList.length;c++){if(this._loadedLayersList[c].getId()==a){d=this._loadedLayersList[c];this._loadedLayersList.splice(c,1);break}}if(d&&b!==true){var e=this._sandbox.getEventBuilder("MapLayerEvent")(d.getId(),"remove");this._sandbox.notifyAll(e)}this._reservedLayerIds[a]=false},updateLayer:function(a,d){var b=this.findMapLayer(a);if(b){b.setName(d.name);var c=this._sandbox.getEventBuilder("MapLayerEvent")(b.getId(),"update");this._sandbox.notifyAll(c)}},loadAllLayers:function(){throw"TBD: loading not implemented"},loadAllLayersAjax:function(b,a){var c=this;jQuery.ajax({type:"GET",dataType:"json",beforeSend:function(d){if(d&&d.overrideMimeType){d.overrideMimeType("application/j-son;charset=UTF-8")}},url:this._mapLayerUrl,success:function(d){c._loadAllLayersAjaxCallBack(d,b)},error:function(){if(a){a()}}})},_loadAllLayersAjaxCallBack:function(f,c){var e=f.layers;for(var b=0;b<e.length;b++){var a=this.createMapLayer(e[b]);if(this._reservedLayerIds[a.getId()]!==true){this.addLayer(a,true)}}var d=this._sandbox.getEventBuilder("MapLayerEvent")(null,"add");this._sandbox.notifyAll(d);if(c){c()}},getAllLayers:function(){var a=Oskari.$().sandbox.getLanguage();return this._loadedLayersList},getAllLayersByMetaType:function(c){var d=[];for(var b=0;b<this._loadedLayersList.length;++b){var a=this._loadedLayersList[b];if(a.getMetaType&&a.getMetaType()===c){d.push(a)}}return d},registerLayerModel:function(b,a){this.typeMapping[b]=a},unregisterLayerModel:function(a){this.typeMapping[a]=undefined},registerLayerModelBuilder:function(a,b){this._sandbox.printDebug("[MapLayerService] registering handler for type "+a);
this.modelBuilderMapping[a]=b},unregisterLayerModelBuilder:function(a){this.modelBuilderMapping[a]=undefined},createMapLayer:function(b){var a=null;if(b.type=="base"){a=this._createGroupMapLayer(b,true)}else{if(b.type=="groupMap"){a=this._createGroupMapLayer(b,false)}else{a=this._createActualMapLayer(b)}}return a},_createGroupMapLayer:function(e,f){var a=Oskari.clazz.create("Oskari.mapframework.domain.WmsLayer");if(f){a.setAsBaseLayer()}else{a.setAsGroupLayer()}a.setVisible(true);a.setId(e.id);a.setName(e.name);a.setMaxScale(e.maxScale);a.setMinScale(e.minScale);a.setDataUrl(e.dataUrl);a.setOrganizationName(e.orgName);a.setInspireName(e.inspire);a.setFeatureInfoEnabled(false);if(e.permissions){for(var d in e.permissions){a.addPermission(d,e.permissions[d])}}for(var c=0;c<e.subLayer.length;c++){var b=this._createActualMapLayer(e.subLayer[c]);a.getSubLayers().push(b)}if(e.opacity!=null){a.setOpacity(e.opacity)}else{if(a.getSubLayers().length>0){a.setOpacity(a.getSubLayers()[0].getOpacity())}else{a.setOpacity(100)}}if(e.legendImage!=null&&e.legendImage!=""){a.setLegendImage(e.legendImage)}if(e.info!=null&&e.info!=""){a.setDescription(e.info)}return a},_createActualMapLayer:function(e){var c=null;var b=e.id;if(e!=null){if(!this.typeMapping[e.type]){throw"Unknown layer type '"+e.type+"'"}c=Oskari.clazz.create(this.typeMapping[e.type]);if(e.type=="wmslayer"){this._populateWmsMapLayerAdditionalData(c,e)}else{if(e.type=="wmtslayer"){this._populateWmtsMapLayerAdditionalData(c,e)}else{if(e.type=="vectorlayer"){c.setStyledLayerDescriptor(e.styledLayerDescriptor)}}}if(e.metaType&&c.setMetaType){c.setMetaType(e.metaType)}c.setAsNormalLayer();c.setId(b);c.setName(e.name);c.setOpacity(e.opacity);c.setMaxScale(e.maxScale);c.setMinScale(e.minScale);c.setDescription(e.subtitle);c.setDataUrl(e.dataUrl);c.setOrganizationName(e.orgName);c.setInspireName(e.inspire);c.setOrderNumber(e.orderNumber);c.setVisible(true);c.setGeometryWKT(e.geom);if(e.permissions){for(var d in e.permissions){c.addPermission(d,e.permissions[d])}}var a=this.modelBuilderMapping[e.type];if(a){a.parseLayerData(c,e,this)}}else{}return c},_populateWmsMapLayerAdditionalData:function(d,b){d.setWmsName(b.wmsName);if(b.wmsUrl){var a=b.wmsUrl.split(",");for(var c=0;c<a.length;c++){d.addWmsUrl(a[c])}}d.setFeatureInfoEnabled(b.gfi!=="disabled");return this._populateStyles(d,b)},_populateWmtsMapLayerAdditionalData:function(c,a){c.setWmtsName(a.wmtsName);if(a.wmtsUrl){var d=a.wmtsUrl.split(",");for(var b=0;b<d.length;b++){c.addWmtsUrl(d[b])}}return this._populateStyles(c,a)},_populateStyles:function(d,a){var g=Oskari.clazz.builder("Oskari.mapframework.domain.Style");if(a.styles){for(var c=0;c<a.styles.length;c++){var f=a.styles;var b=!(isNaN(c));if(b){f=a.styles[c]}var e=g();e.setName(f.name);e.setTitle(f.title);e.setLegend(f.legend);d.addStyle(e);if(!b){break}}d.selectStyle(a.style)}if(d.getStyles().length==0){var e=g();e.setName("");e.setTitle("");e.setLegend("");d.addStyle(e);d.selectStyle("")}d.setQueryable(a.isQueryable);d.setLegendImage(a.legendImage);d.setDataUrl(a.dataUrl);d.setQueryFormat(a.formats.value);return d},checkForDuplicateId:function(c,b){if(this._reservedLayerIds[c]===true){var a=this.findMapLayer(c);throw"Trying to add map layer with id '"+c+" ("+b+")' but that id is already reserved for '"+a.getName()+"'"}},findMapLayer:function(g,f){if(!f){f=this._loadedLayersList}for(var d=0;d<f.length;d++){var c=f[d];if(c.getId()==g){return c}}for(var d=0;d<f.length;d++){var c=f[d];var e=c.getSubLayers();for(var a=0;a<e.length;a++){var b=this.findMapLayer(g,e);if(b!=null){return b}}}return null}},{protocol:["Oskari.mapframework.service.Service"]});Oskari.clazz.define("Oskari.mapframework.service.SearchService",function(a){this._searchUrl=a},{__qname:"Oskari.mapframework.service.SearchService",getQName:function(){return this.__qname},__name:"SearchService",getName:function(){return this.__name},doSearch:function(a,d,b){var c=Oskari.getLang();jQuery.ajax({dataType:"json",type:"POST",url:this._searchUrl,data:"searchKey="+a+"&Language="+c,complete:b,success:d})}},{protocol:["Oskari.mapframework.service.Service"]});