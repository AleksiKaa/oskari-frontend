/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes√§aika)) */ 
Oskari.clazz.define("Oskari.mapframework.ui.module.mapfull.MapPositionModule",function(){this._multipleActionsRunningText=null;this._tooltip=null;this._sandbox=null;this._items=null},{__name:"MapPositionModule",getName:function(){return this.__name},init:function(b){this._sandbox=b;var f=this;b.printDebug("Initializing map position module...");for(p in this.eventHandlers){b.registerForEventByName(this,p)}var h=function(i){f.showMeasurement(i)};this.showMeasurementHandler=Oskari.clazz.create("Oskari.mapframework.mapposition.request.ShowMapMeasurementRequestHandler",b,h);b.addRequestHandler("ShowMapMeasurementRequest",this.showMeasurementHandler);var g=Ext.create("Ext.button.Button",{text:Oskari.$().startup.instructionsText,iconCls:"map-insctrunctions-image",handler:function(){f.openHelp()}});var d=Ext.create("Ext.form.Label",{width:128});var e=Ext.create("Ext.form.Label",{width:128,flex:1});var c=Ext.create("Ext.form.Label",{flex:3});var a=Ext.create("Ext.ux.StatusBar",{defaultText:"",id:"right-statusbar",statusAlign:"right",items:[g,"-",d,e,c]});this._items={mapMousePosition:d,mapMeasure:e,mapStatusText:c};this._multipleActionsRunningText=b.getText("status_multiple_tasks_running");this._tooltipHeaderText=b.getText("status_tooltip_header");return a},start:function(a){a.printDebug("Starting "+this.getName())},stop:function(a){},showMeasurement:function(a){this._items.mapMeasure.setText(a)},openHelp:function(){var a=Oskari.$().startup.instructionsUrl;var b=this._sandbox.getRequestBuilder("ShowOverlayPopupRequest")(a);this._sandbox.request(this.getName(),b)},handleAfterMapMoveEvent:function(b){var c=b.getCenterX();var d=b.getCenterY();var a="N: "+Math.round(parseInt(d))+" E: "+Math.round(parseInt(c));this._items.mapMousePosition.setText(a)},handleMouseHoverEvent:function(b){var c=b.getLon();var d=b.getLat();var a="N: "+Math.round(parseInt(d))+" E: "+Math.round(parseInt(c));this._items.mapMousePosition.setText(a)},handleActionStatusesChangedEvent:function(f){var b="";var e=f.getCurrentlyRunningActionsDescriptions();if(e.length==0){this._items.mapStatusText.setText("");var d=Ext.getCmp("status-tooltip");if(d!=null){d.destroy()}return}for(var a=0;a<e.length;a++){b+="<p>"+e[a]+"</p>"}if(this._tooltip!=null){this._tooltip.destroy()}this._tooltip=Ext.create("Ext.tip.ToolTip",{id:"status-tooltip",target:"status-text",title:this._tooltipHeaderText,width:300,trackMouse:true,html:b,showDelay:0,hideDelay:0,elements:"body"});text=e[0];var c=e.length;if(c>1){text=c+" "+this._multipleActionsRunningText}this._items.mapStatusText.setText(text)},eventHandlers:{ToolSelectedEvent:function(b){var a=b.getToolName();this._items.mapMeasure.setText("")},AfterMapMoveEvent:function(a){this.handleAfterMapMoveEvent(a)},ActionStatusesChangedEvent:function(a){this.handleActionStatusesChangedEvent(a)},MouseHoverEvent:function(a){this.handleMouseHoverEvent(a)}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.mapposition.request.ShowMapMeasurementRequestHandler",function(a,b){this.sandbox=a;this._callBack=b},{handleRequest:function(a,b){var c=b.getValue();this.sandbox.printDebug("[ShowMapMeasurementRequestHandler] got measurement: "+c);if(this._callBack){this._callBack(c)}}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.DefaultMapPositionBundleInstance",function(a){this.name="mapposition";this.mediator=null;this.sandbox=null;this.impl=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");this.impl=Oskari.clazz.create("Oskari.mapframework.ui.module.mapfull.MapPositionModule");var a=this.facade.appendExtensionModule(this.impl,this.name,this.eventHandlers,this,"StatusRegion",{fi:{title:""},sv:{title:""},en:{title:""}});this.def=a;this.impl.start(this.facade.getSandbox());this.mediator.setState("started");return this},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)
},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.eventHandlers,this,this.def);this.def=null;this.impl=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.DefaultMapPositionBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});