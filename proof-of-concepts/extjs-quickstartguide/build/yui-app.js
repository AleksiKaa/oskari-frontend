/* This is a packed Oskari app (bundle script version Thu May 31 2012 11:32:12 GMT+0300 (Suomen kes채aika)) */ 
/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 11:32:12 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.tools.Yui",function(){this.bundle_manager=Oskari.bundle_manager;this.excludeTags={mapframework:true},this.langs={fi:true,sv:true,en:true},this.flushPackFiles()},{flushPackFiles:function(){this.packedFiles=[];this.packedLocales={};for(l in this.langs){this.packedLocales[l]=[]}},setExcludeTags:function(a){this.excludeTags=a},getBundleTags:function(a){return this.bundle_manager.stateForBundleDefinitions[a].metadata.manifest["Bundle-Tag"]||{}},shallExclude:function(a){var b=this;var c=b.excludeTags;for(p in a){if(c[p]){return true}}return false},defaultCompressorJar:'"../tools/bundle/yui/yuicompressor-2.4.6.jar"',yui_command_line:function(j,k,g){var i=this;var c=i.bundle_manager.sources[j];var m="";m+="md build\n";var f="bundle.js";m+="java -jar "+k+" --charset UTF-8 --line-break 4096 --type js "+f+" > build/bundle-yui.js\n";m+="echo /* This is a packed Oskari bundle (bundle script version "+(new Date())+") */ > build/yui.js\n";m+="echo /* This is a unpacked Oskari bundle (bundle script version "+(new Date())+") */ > build/yui-pack.js\n";for(var d=0;d<c.scripts.length;d++){var b=c.scripts[d];var a=new String(b.src);var e="text/javascript"==b.type?"js":"css";if("css"==e){continue}while(a.indexOf("/")!=-1){a=a.replace("/","\\")}m+='type "'+a+'" >> build/yui-pack.js\n'}m+="java -jar "+k+" --charset UTF-8 --line-break 4096 --type js build/yui-pack.js >> build/yui.js\n";this.packedFiles.push(g+"/build/yui.js");for(l in this.langs){if(!this.langs[l]){continue}m+="echo /* This is a unpacked Oskari bundle (bundle script version "+(new Date())+") */ > build/yui-pack-locale-"+l+".js\n"}if(c.locales){for(var d=0;d<c.locales.length;d++){var b=c.locales[d];var h=b.lang;var a=new String(b.src);var e="text/javascript"==b.type?"js":"css";if("css"==e){continue}while(a.indexOf("/")!=-1){a=a.replace("/","\\")}m+='type "'+a+'" >> build/yui-pack-locale-'+h+".js\n"}}for(l in this.langs){if(!this.langs[l]){continue}m+="java -jar "+k+" --charset UTF-8 --line-break 4096 --type js build/yui-pack-locale-"+l+".js >> build/yui-locale-"+l+".js\n";this.packedLocales[l].push(g+"/build/yui-locale-"+l+".js")}return m},yui_command_lines:function(a){var d=this;var c={};for(bndlName in d.bundle_manager.sources){var f=d.getBundleTags(bndlName);if(d.shallExclude(f)){continue}var b=Oskari.bundle_manager.stateForBundleDefinitions[bndlName].bundlePath;var e="";e+='pushd "'+b+'"\n';e+=d.yui_command_line(bndlName,a,b);e+="popd\n";c[bndlName]=e}return c},yui_command_line_for_app:function(h){var g=this;g.flushPackFiles();var f="SET CURRENT=%CD%\n";var d="SET YUICOMPRESSOR=%CURRENT%/"+this.defaultCompressorJar+"\n";var e=g.yui_command_lines(h);var c="";for(p in e){c+=e[p]}var i="";i+="md build\n";i+="echo /* This is a packed Oskari app (bundle script version "+(new Date())+") */ > build/yui-app.js\n";for(var b=0;b<this.packedFiles.length;b++){var a=this.packedFiles[b];while(a.indexOf("/")!=-1){a=a.replace("/","\\")}i+='type "'+a+'" >> build/yui-app.js\n'}for(l in this.langs){i+="echo /* This is a packed Oskari locale for app (bundle script version "+(new Date())+") */ > build/yui-app-locale-"+l+".js\n";for(var b=0;b<this.packedLocales[l].length;b++){var a=this.packedLocales[l][b];while(a.indexOf("/")!=-1){a=a.replace("/","\\")}i+='type "'+a+'" >> build/yui-app-locale-'+l+".js\n"}}return f+d+c+i},showYuiBuildCmd:function(){var a=this.yui_command_line_for_app("%YUICOMPRESSOR%");var b=window.open();b.document.write('<body ><pre style="font: 9pt Verdana;">'+a+"</body></pre>")}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 11:32:12 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.poc.extjs.bundle.FlyoutAdapterBundleInstance",function(){this.map=null;this.core=null;this.sandbox=null;this.mapmodule=null;this.started=false;this.facade=null;this.parts={};this._uimodules=[];this._uimodulesByName={};this.extensions=[];this.extensionsByName={}},{__name:"Oskari.poc.extjs.bundle.FlyoutAdapterBundleInstance",getName:function(){return this.__name},getSandbox:function(){return this.sandbox},start:function(){if(this.started){return}this.started=true;var a=Oskari.$("sandbox");this.sandbox=a;this.facade=Oskari.clazz.create("Oskari.poc.extjs.ui.OskariDIVManagerFacade",a,this,this.parts);Oskari.$("UI.facade",this.facade);a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},init:function(){return null},update:function(){},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{},addExtensionModule:function(e,k,b,g,f,j,i){var n=this.sandbox;var d=n.getLanguage();var a=e.getName();var l=j.fi.title;var c={module:e,identifier:k,region:f,component:i};this._uimodules.push(c);this._uimodulesByName[k]=c;c.bundleInstance=g;if(c.module){if(c.component){c.initialisedComponent=this.getSandbox().register(c.module)}else{c.component=this.getSandbox().register(c.module)}}for(p in b){this.sandbox.registerForEventByName(e,p)}var m=Oskari.clazz.create("Oskari.poc.extjs.flyoutadapter.Extension",this,{name:a,title:l,description:"?"},c);this.extensions.push(m);this.extensionsByName[m.getName()]=m;var h=n.getRequestBuilder("userinterface.AddExtensionRequest")(m);n.request(this,h);console.log("FLYOUTADAPTER",m);return c},stop:function(){var b=this.sandbox;for(p in this.eventHandlers){b.unregisterFromEventByName(this,p)}var a=b.getRequestBuilder("userinterface.RemoveExtensionRequest");for(var d=0;d<this.extensions.length;d++){var c=a(this.extensions[d]);b.request(this,c)}this.extensions=[];this.extensionsByname={};b.request(this,c);this.sandbox.unregister(this);this.started=false}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.poc.extjs.flyoutadapter.Flyout",function(a,b,c){this.instance=a;this.container=null;this.el=null;this.template=null;this.state=null;this.props=b;this.def=c},{getName:function(){return this.props.name},setEl:function(c,b,a){this.container=c[0]},startPlugin:function(){var a=this.def.component?[this.def.component]:[];this.el=Ext.create("Ext.panel.Panel",{renderTo:this.container,bodyBorder:false,bodyCls:"oskari",bodyStyle:{border:"1pt dashed #c0c0c0",padding:"16px",margin:"16px"},layout:"fit",width:636,height:420,items:a})},stopPlugin:function(){this.container.empty()},getTitle:function(){return this.props.title},getDescription:function(){return this.props.description},getOptions:function(){},setState:function(a){},refresh:function(){}},{protocol:["Oskari.userinterface.Flyout"]});Oskari.clazz.define("Oskari.poc.extjs.flyoutadapter.Tile",function(a,b,c){this.instance=a;this.container=null;this.template=null;this.props=b;this.def=c},{getName:function(){return this.props.name},setEl:function(c,b,a){this.container=c},startPlugin:function(){},stopPlugin:function(){},getTitle:function(){return this.props.title},getDescription:function(){},getOptions:function(){},setState:function(a){}},{protocol:["Oskari.userinterface.Tile"]});Oskari.clazz.define("Oskari.poc.extjs.flyoutadapter.Extension",function(a,b,c){this.instance=a;this.props=b;this.plugins={};this.def=c},{getName:function(){return this.props.name},setSandbox:function(a){this.sandbox=a},startExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=Oskari.clazz.create("Oskari.poc.extjs.flyoutadapter.Flyout",this,this.props,this.def);this.plugins["Oskari.userinterface.Tile"]=Oskari.clazz.create("Oskari.poc.extjs.flyoutadapter.Tile",this,this.props,this.def)},stopExtension:function(){this.def.bundleInstance.stop();this.def=null},getTitle:function(){return this.props.title},getDescription:function(){return this.props.description},getPlugins:function(){return this.plugins}});Oskari.clazz.define("Oskari.poc.extjs.ui.OskariDIVManagerFacade",function(a,b,c){this.sandbox=a;
this.manager=b;this.parts=c;this.additionalComponents=[]},{registerPart:function(a,b){this.parts[a]=b},getSandbox:function(){return this.sandbox},getManager:function(){return this.manager},getParts:function(){return this.parts},showUIComponent:function(b,a,e){var c=this.findUIComponentIndex(b);if(c!=-1){var d=this.additionalComponents[c];this.expandPart(d.region);if("S"===d.region){this.parts[d.region].setActiveTab(d.comp)}else{if(d.comp.expand){d.comp.expand(false)}}}},removeUIComponent:function(a){var b=this.findUIComponentIndex(a);if(b!=-1){var c=this.additionalComponents[b];this.parts[c.region].remove(c.comp);this.additionalComponents.splice(b,1)}},findUIComponentIndex:function(a){var c=-1;for(var b=0;b<this.additionalComponents.length;++b){var d=this.additionalComponents[b];if(d.ident==a){return b}}return -1},addUIComponent:function(b,a,d){this.parts[d].add(a);var c={ident:b,region:d,comp:a};this.additionalComponents[b]=c},appendExtensionModule:function(c,b,g,f,d,h,a){var e=this.manager.addExtensionModule(c,b,g,f,d,h,a);return e},removeExtensionModule:function(b,a,e,d,c){for(p in e){this.sandbox.unregisterFromEventByName(b,p)}this.sandbox.unregister(b)},collapseDirections:{N:Ext.Component.DIRECTION_TOP,E:Ext.Component.DIRECTION_RIGHT,S:Ext.Component.DIRECTION_BOTTOM,W:Ext.Component.DIRECTION_LEFT},collapsePart:function(a){if(this.parts.Drawer[a]){this.parts.Drawer[a].collapse(this.collapseDirections[a],false)}else{this.parts[a].collapse(true)}},expandPart:function(a){if(this.parts.Drawer[a]){this.parts.Drawer[a].expand(false)}else{this.parts[a].expand(true)}}},{protocol:["Oskari.mapframework.ui.manager.Facade"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 11:32:12 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.PositionInfoInstance",function(a){this.name="positioninfoModule";this.mediator=null;this.sandbox=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");var a=this.facade.appendExtensionModule(this,this.name,this.eventHandlers,this,"W",{fi:{title:"positioninfo"},sv:{title:"?"},en:{title:"positioninfo"}});this.def=a;this.mediator.setState("started");return this},init:function(a){this.sandbox=a;var b=Oskari.clazz.create("Oskari.mapframework.bundle.PositionInfoUI",this.libs);this.ui=b;b.create();return b.get()},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.facade.removeExtensionModule(this,this.name,this.eventHandlers,this,this.def);this.def=null;this.mediator.setState("stopped");return this},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},eventHandlers:{MouseHoverEvent:function(a){var c=a.getLat();var b=a.getLon();this.ui.updateLocationInfo(c,b)},AfterMapMoveEvent:function(a){var c=a.getCenterY();var b=a.getCenterX();this.ui.updateLocationInfo(c,b);this.mediator.manager.alert("AfterMapMoveEvent "+c+","+b+" @Oskari.mapframework.bundle.PositionInfoInstance "+a.getName())}},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.PositionInfoInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.mapframework.bundle.extension.Extension","Oskari.mapframework.bundle.extension.EventListener"]});Oskari.clazz.define("Oskari.mapframework.bundle.PositionInfoUI",function(a){this.libs=a;this.form=null;this.ui=null},{get:function(){return this.form},create:function(){var a=this.libs.ext;var d=a.create("Ext.form.field.Text",{fieldLabel:"N",name:"fldN"});var c=a.create("Ext.form.field.Text",{fieldLabel:"E",name:"fldE"});this.ui={N:d,E:c};var b=new a.create("Ext.form.Panel",{title:"Simple Form with FieldSets",labelWidth:75,frame:true,bodyStyle:"padding:5px 5px 0",layout:"column",defaults:{bodyPadding:4},items:[{xtype:"fieldset",columnWidth:1,title:"Fieldset 1",collapsible:true,defaultType:"textfield",defaults:{anchor:"100%"},layout:"anchor",items:[d,c]}]});this.form=b;return b},updateLocationInfo:function(b,a){if(!this.ui){return}this.ui.E.setValue(a);this.ui.N.setValue(b)}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 11:32:12 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.WikipediaBundleUI",function(b,a){this.libs=b;this.form=null;this.ui=null;this.store=null;this.form=null;this.grid=null;this.bundle=a},{clear:function(){this.store=null;this.form=null;this.libs=null;this.ui=null;this.grid=null},setLibs:function(a){this.libs=a},get:function(){return this.form},setStore:function(a){this.store=a},getStore:function(){return this.store},getGrid:function(){return this.grid},showArticle:function(a){this.bundle.showArticle(a)},create:function(){var a=this.libs.ext;var a=this.libs.ext;var d=this;var b=a.create("Ext.grid.Panel",{store:d.getStore(),title:"Nearby Wikimedia",columns:[{xtype:"actioncolumn",width:50,items:[{icon:"../../map-application-framework/resource/silk-icons/control_play.png",tooltip:"Show",handler:function(f,i,e){var h=d.getStore().getAt(i);var g=h.get("wikipediaUrl");d.showArticle(g)}}]},{text:"Title",flex:1,dataIndex:"title"},{text:"N",width:64,sortable:false,hideable:false,dataIndex:"n"},{text:"E",width:64,dataIndex:"e",sortable:false,hideable:false}]});this.grid=b;var c=new a.create("Ext.panel.Panel",{bodyStyle:"padding:5px 5px 0",height:384,layout:"card",defaults:{bodyPadding:4},items:[b]});this.form=c;return c}});Oskari.clazz.define("Oskari.mapframework.bundle.WikipediaBundleInstance",function(a){this.name="WikipediaModule";this.mediator=null;this.sandbox=null;this.layerId=null;this.layer=null;this.ui=null},{getStore:function(){return this.store},showArticle:function(c){var a="http://"+c;var b=this.sandbox.getRequestBuilder("ShowOverlayPopupRequest")(a);this.sandbox.request(this.getName(),b)},clear:function(){this.store.clearData();this.store.destroyStore();this.store=null},start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");this.projs={"EPSG:4326":new Proj4js.Proj("EPSG:4326"),"EPSG:3067":new Proj4js.Proj("EPSG:3067")};var a=this.libs.ext;var b=this;this.createModels();this.createStores();var b=this;this.func=a.Function.createThrottled(function(){this.processQuery()},3200,b);var c=this.facade.appendExtensionModule(this,this.name,this.eventHandlers,this,"E",{fi:{title:" Wikipedia"},sv:{title:"?"},en:{title:" Wikipedia"}});this.def=c;this.layerId="____WikiMedia___"+this.mediator.instanceid;this.addVectorLayer();this.mediator.setState("started");return this},createModels:function(){var a=this.libs.ext;var b=this;if(!a.ClassManager.get("Wiki")){a.define("Wiki",{extend:"Ext.data.Model",fields:["summary","distance","rank","title","wikipediaUrl","elevation","countryCode","lng","feature","lang","lat",{name:"n",convert:function(e,d){var c=Proj4js.transform(b.projs["EPSG:4326"],b.projs["EPSG:3067"],{x:d.get("lng"),y:d.get("lat")});return c.y}},{name:"e",convert:function(e,d){var c=Proj4js.transform(b.projs["EPSG:4326"],b.projs["EPSG:3067"],{x:d.get("lng"),y:d.get("lat")});return c.x}}]})}},createStores:function(){var b=this.libs.ext;var c=this;var a=b.create("Ext.data.Store",{model:"Wiki",autoLoad:false,proxy:{type:"jsonp",url:"http://api.geonames.org/findNearbyWikipediaJSON",pageParam:null,startParam:null,limitParam:null,reader:{type:"json",model:"Wiki",root:"geonames"},extraParams:{username:"oskari"}}});this.store=a},init:function(a){this.sandbox=a;this.map=a.getMap();var b=Oskari.clazz.create("Oskari.mapframework.bundle.WikipediaBundleUI",this.libs,this);this.ui=b;b.setLibs(this.libs);b.setStore(this.getStore());b.create();return b.get()},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.stopped=true;this.removeVectorLayer();this.facade.removeExtensionModule(this,this.name,this.eventHandlers,this,this.def);this.def=null;this.sandbox.printDebug("Clearing STORE etc");this.ui.clear();this.ui=null;this.clear();this.mediator.setState("stopped");return this},setNE:function(b,a){this.n=b;this.e=a},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},defaults:{minScale:40000,maxScale:1},getFeatureInfo:function(c,g,a){var i=30;var d=this.libs.ext;var f=this.ui;var h=f.getStore();var b=f.getGrid().getSelectionModel();
var e=this;h.each(function(m){var j=m.get("e");var k=m.get("n");var n=Math.sqrt(Math.pow(c-j,2)+Math.pow(g-k,2));if(n<i){b.select(m);var l=m.get("wikipediaUrl");if(!a){e.showArticle(l)}}})},eventHandlers:{AfterMapLayerRemoveEvent:function(d){var c=d.getMapLayer();if(c.getId()==this.layerId){if(this.sandbox.getObjectCreator(d)!=this.getName()){this.stop();var b=this.mediator.manager;var a=this.mediator.instanceid;b.destroyInstance(a)}}},AfterMapMoveEvent:function(c){var b=this;var a=this.sandbox;var f=c.getScale();if(!(f<this.defaults.minScale&&f>this.defaults.maxScale)){return}var g=c.getCenterY();var d=c.getCenterX();b.sandbox.printDebug("N:"+g+" E:"+d);b.setNE(g,d);b.func()},FeaturesGetInfoEvent:function(f){var d=f.getMapLayer();var b=d.getId();if(b!=this.layerId){return}var a=this.sandbox;a.printDebug("Handling FeaturesGetInfoEvent for "+this.layerId);var c=f.getLon();var e=f.getLat();this.getFeatureInfo(c,e)},MouseHoverEvent:function(c){var a=c.getLon();var b=c.getLat();this.getFeatureInfo(a,b,true)},AfterAddExternalMapLayerEvent:function(a){if(a.getMapLayerId()==this.layerId){this.layer=a.getLayer()}},AfterRemoveExternalMapLayerEvent:function(a){if(a.getMapLayerId()==this.layerId){this.layer=null}}},processQuery:function(){var c=this;if(c.stopped){return}var h=this.n;var f=this.e;c.sandbox.printDebug("STARTING WIKIPEDIA LOAD N:"+h+" E:"+f);var a=this.libs.ext;var g=Proj4js.transform(c.projs["EPSG:3067"],c.projs["EPSG:4326"],{x:f,y:h});var b=g.x;var d=g.y;c.busy=true;c.ui.getStore().load({params:{lat:d,lng:b},callback:function(e){c.processResponse(e);c.sandbox.printDebug("finished WIKIPEDIA LOAD")}})},processResponse:function(b){var a=this.libs.ext;var f=this;var d=[];var c={type:"FeatureCollection",features:d};a.Array.each(b,function(g){d.push({type:"Feature",geometry:{type:"Point",coordinates:[g.get("e"),g.get("n")]},properties:{title:g.get("title"),feature:g.get("feature"),wikipediaUrl:g.get("wikipediaUrl"),summary:g.get("summary")}})});if(this.stopped){return}var e=f.sandbox.getEventBuilder("FeaturesAvailableEvent")(this.layer,c,"application/json","EPSG:3067","replace");f.sandbox.notifyAll(e)},addVectorLayer:function(){var c=this.layerId,b=true,f=false;var a={name:"Wikipedia",wmsName:"1",type:"vectorlayer",styles:{title:"Wikipedia",legend:"",name:"1"},descriptionLink:"http://en.wikipedia.org/",legendImage:"",info:"",isQueryable:true,formats:{value:"text/html"},id:c,minScale:this.defaults.minScale,maxScale:this.defaults.maxScale,style:"",dataUrl:"",wmsUrl:"x",opacity:100,checked:"false"};var d=this.sandbox.getRequestBuilder("AddExternalMapLayerRequest")(c,a);this.sandbox.request(this.getName(),d);var e=this.sandbox.getRequestBuilder("AddMapLayerRequest")(c,b,f);this.sandbox.request(this.getName(),e)},removeVectorLayer:function(){var a=this.layerId;var b=this.sandbox.getRequestBuilder("RemoveMapLayerRequest")(a);this.sandbox.request(this.getName(),b);var c=this.sandbox.getRequestBuilder("RemoveExternalMapLayerRequest")(a);this.sandbox.request(this.getName(),c)},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.WikipediaBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.mapframework.bundle.extension.Extension","Oskari.mapframework.bundle.extension.EventListener"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 11:32:12 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.TrainsBundleInstance",function(a){this.url="/rss/TrainRSS/TrainService.svc/AllTrains";this.name="TrainsModule";this.mediator=null;this.sandbox=null;this.layerId=null;this.layer=null;this.ui=null;this.features=null},{getStore:function(){return this.store},clear:function(){this.store.clearData();this.store.destroyStore();this.store=null},start:function(){var a=this;if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");this.createProjs();this.createFormats();this.createModels();this.createStores();this.startWorker();var b=this.facade.appendExtensionModule(this,this.name,this.eventHandlers,this,"E",{fi:{title:" Trains"},sv:{title:"?"},en:{title:" Trains"}});this.def=b;this.layerId="____Trains___"+this.mediator.instanceid;this.addVectorLayer();this.mediator.setState("started");return this},startWorker:function(){var c=this;var b=this.libs.ext;this.func=b.Function.createThrottled(function(){this.processQuery()},3200,c);var a={run:this.func,interval:3200};this.task=a;b.TaskManager.start(a)},stopWorker:function(){var b=this;var a=this.libs.ext;a.TaskManager.stop(b.task)},createProjs:function(){var a=this;a.projs={"EPSG:3067":new OpenLayers.Projection("EPSG:3067"),"EPSG:4326":new OpenLayers.Projection("EPSG:4326")}},createFormats:function(){var b=this;var c=new OpenLayers.Format.GeoRSS({internalProjection:b.projs["EPSG:3067"],externalProjection:b.projs["EPSG:4326"]});var a={guid:{},category:{},description:{},pubDate:{type:"date"},from:{},to:{},status:{},dir:{}};c.readFields=a;c.createFeatureFromItem=function(o){var j=this.createGeometryFromItem(o);var m=this.getChildValue(o,"*","title",this.featureTitle);var n=this.getChildValue(o,"*","description",this.getChildValue(o,"*","content",this.getChildValue(o,"*","summary",this.featureDescription)));var k=this.getChildValue(o,"*","link");if(!k){try{k=this.getElementsByTagNameNS(o,"*","link")[0].getAttribute("href")}catch(i){k=null}}var d=this.getChildValue(o,"*","id",null);var h={title:m,description:n,link:k};var l=this.readFields;for(f in l){var g=this.getChildValue(o,"*",f,l[f].defaultValue);h[f]=g}var p=new OpenLayers.Feature.Vector(j,h);p.fid=d;return p};b.format=c},createModels:function(){var a=this.libs.ext;var b=this;if(!a.ClassManager.get("Train")){a.define("Train",{extend:"Ext.data.Model",fields:["summary","status","title","from","to","guid","category"]})}},createStores:function(){var b=this.libs.ext;var c=this;var a=b.create("Ext.data.Store",{model:"Train",autoLoad:false});this.store=a},init:function(a){this.sandbox=a;var b=Oskari.clazz.create("Oskari.mapframework.bundle.TrainsBundleUI",this.libs,this);this.ui=b;b.setLibs(this.libs);b.setStore(this.getStore());b.create();return b.get()},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.stopped=true;var a=this.libs.ext;this.stopWorker();this.removeVectorLayer();this.facade.removeExtensionModule(this,this.name,this.eventHandlers,this,this.def);this.def=null;this.sandbox.printDebug("Clearing STORE etc");this.ui.clear();this.ui=null;this.clear();this.mediator.setState("stopped");return this},setNE:function(b,a){this.n=b;this.e=a},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},defaults:{minScale:800000,maxScale:1},getFeatureInfo:function(i,h,a){var d=this;if(!d.features){return}var g=new OpenLayers.Geometry.Point(i,h);var j=OpenLayers.Geometry.Polygon.createRegularPolygon(g,32,8);d.ui.showTrain({});for(var e=0;e<d.features.length;e++){var b=d.features[e];if(!b.geometry){continue}if(j.intersects(b.geometry)){if(a){d.ui.showTrain(b.attributes)}else{d.ui.showTrainDetails(b.attributes)}}}},eventHandlers:{AfterMapLayerRemoveEvent:function(d){var c=d.getMapLayer();if(c.getId()==this.layerId){if(this.sandbox.getObjectCreator(d)!=this.getName()){this.stop();var b=this.mediator.manager;var a=this.mediator.instanceid;b.destroyInstance(a)}}},AfterMapMoveEvent:function(c){var b=this;var a=this.sandbox;var g=c.getScale();if(!(g<this.defaults.minScale&&g>this.defaults.maxScale)){return
}var h=c.getCenterY();var d=c.getCenterX();b.sandbox.printDebug("N:"+h+" E:"+d);b.setNE(h,d);b.func()},FeaturesGetInfoEvent:function(d){var b=this.sandbox;var c=d.getMapLayer();var a=c.getId();if(a!=this.layerId){b.printDebug("FeaturesGetInfoEvent@Trains: "+this.layerId+" vs. queried "+a);return}b.printDebug("Handling FeaturesGetInfoEvent for "+this.layerId);var g=d.getLon();var e=d.getLat();this.getFeatureInfo(g,e)},MouseHoverEvent:function(c){var a=c.getLon();var b=c.getLat();this.getFeatureInfo(a,b,true)},AfterAddExternalMapLayerEvent:function(a){if(a.getMapLayerId()==this.layerId){this.layer=a.getLayer()}},AfterRemoveExternalMapLayerEvent:function(a){if(a.getMapLayerId()==this.layerId){this.layer=null}}},processQuery:function(){var c=this;var i=this.n;var g=this.e;c.sandbox.printDebug("STARTING Trains LOAD N:"+i+" E:"+g);var a=this.libs.ext;var h=Proj4js.transform(c.projs["EPSG:3067"],c.projs["EPSG:4326"],{x:g,y:i});var b=h.x;var d=h.y;c.loadRss()},loadRss:function(){var b=this;var d={};var c=new Date().getTime();var a={url:b.url+"?ts="+c,params:OpenLayers.Util.upperCaseObject(d),callback:function(e){b.handleResponse(e)},scope:this};OpenLayers.Request.GET(a)},handleResponse:function(g){if(this.stopped){return}var e=this;var b=e.getStore();var a=e.libs.ext;var h=g.responseXML;if(!h||!h.documentElement){h=g.responseText}var c=e.format.read(h);if(this.stopped){return}var d=this.sandbox.getEventBuilder("FeaturesAvailableEvent")(this.layer,c,"application/nlsfi-x-openlayers-feature","EPSG:3067","replace");e.sandbox.notifyAll(d);this.features=c},styledLayerDescriptors:{"default":'<StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"     xmlns="http://www.opengis.net/sld"     xmlns:ogc="http://www.opengis.net/ogc"     xmlns:xlink="http://www.w3.org/1999/xlink"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">   <NamedLayer>     <Name>Simple point with stroke</Name>    <UserStyle><Title>GeoServer SLD Cook Book: Simple point with stroke</Title>     <FeatureTypeStyle><Rule><PointSymbolizer> <Graphic><Mark><WellKnownName>circle</WellKnownName><Fill>        <CssParameter name="fill">#00A000</CssParameter>       </Fill><Stroke>          <CssParameter name="stroke">#000000</CssParameter>           <CssParameter name="stroke-width">2</CssParameter>          </Stroke></Mark><Size>12</Size></Graphic>     </PointSymbolizer><TextSymbolizer><Label><ogc:PropertyName>title</ogc:PropertyName></Label><Fill><CssParameter name="fill">#000000</CssParameter></Fill></TextSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'},addVectorLayer:function(){var c=this.layerId,b=true,g=false;var h=this.styledLayerDescriptors["default"];var a={text:"",name:"Trains",wmsName:"1",type:"vectorlayer",styles:{title:"Trains",legend:"",name:"1"},descriptionLink:"http://www.vr.fi/",legendImage:"",info:"",isQueryable:true,formats:{value:"text/html"},id:c,minScale:this.defaults.minScale,maxScale:this.defaults.maxScale,style:"",dataUrl:"",wmsUrl:"x",opacity:100,checked:"false",styledLayerDescriptor:h};var d=this.sandbox.getRequestBuilder("AddExternalMapLayerRequest")(c,a);this.sandbox.request(this.getName(),d);var e=this.sandbox.getRequestBuilder("AddMapLayerRequest")(c,b);this.sandbox.request(this.getName(),e)},removeVectorLayer:function(){var a=this.layerId;var b=this.sandbox.getRequestBuilder("RemoveMapLayerRequest")(a);this.sandbox.request(this.getName(),b);var c=this.sandbox.getRequestBuilder("RemoveExternalMapLayerRequest")(a);this.sandbox.request(this.getName(),c)},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.TrainsBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.mapframework.bundle.extension.Extension","Oskari.mapframework.bundle.extension.EventListener"]});Oskari.clazz.define("Oskari.mapframework.bundle.TrainsBundleUI",function(b,a){this.libs=b;this.form=null;this.ui=null;this.store=null;this.form=null;this.grid=null;this.bundle=a;this.items={}},{clear:function(){this.store=null;
this.form=null;this.libs=null;this.ui=null;this.grid=null},setLibs:function(a){this.libs=a},get:function(){return this.pnl},setStore:function(a){this.store=a},getStore:function(){return this.store},getGrid:function(){return this.grid},showTrain:function(a){this.items.lbl.setValue(a.title||"")},showTrainDetails:function(b){var a=this.getStore();a.removeAll();a.add([b])},create:function(){var a=this.libs.ext;var a=this.libs.ext;var e=this;var c=a.create("Ext.grid.Panel",{store:e.getStore(),width:400,height:200,title:"Trains",columns:[{xtype:"actioncolumn",width:50,items:[{icon:"../map-application-framework/resource/silk-icons/control_play.png",tooltip:"Show",handler:function(i,k,h){var j=e.getStore().getAt(k)}}]},{text:"Title",flex:1,dataIndex:"title"},{text:"Guid",flex:1,dataIndex:"guid"},{text:"From",flex:1,dataIndex:"from"},{text:"To",flex:1,dataIndex:"to"},{text:"Status",flex:1,dataIndex:"status"},{text:"Dir",flex:1,dataIndex:"dir"}]});this.grid=c;var g=a.create("Ext.form.field.Text",{name:"name",fieldLabel:"Name",allowBlank:false});this.items.lbl=g;var d=a.create("Ext.form.Panel",{items:[g,c]});this.form=d;var b=a.create("Ext.Panel",{bodyStyle:"padding:5px 5px 0",height:384,layout:"fit",defaults:{bodyPadding:4},items:[d]});this.pnl=b;return b}});