/* This is a packed Oskari bundle (bundle script version Tue Feb 14 2012 08:27:46 GMT+0200 (Suomen normaaliaika)) */ 
Oskari.clazz.define("Oskari.samples.adapt.BundleInstance",function(){this.map=null;this.mapster=null;this.ui=null;this.app=null},{getApp:function(){return this.app},getUserInterface:function(){return this.ui},start:function(){var a=null;if(document.location.search.length>1){a=Ext.urlDecode(document.location.search.substring(1))}else{a={}}var d=Oskari.clazz.create("Oskari.samples.adapt.Application");this.app=d;var c=Oskari.clazz.create("Oskari.mapframework.complexbundle.NlsFiLayerConfig",{default_wms_url:"http://wms.a.paikkatietoikkuna.fi/gwc/mml-rasteriaineistot?,http://wms.b.paikkatietoikkuna.fi/gwc/mml-rasteriaineistot?,http://wms.c.paikkatietoikkuna.fi/gwc/mml-rasteriaineistot?,http://wms.d.paikkatietoikkuna.fi/gwc/mml-rasteriaineistot?"});var b=c.create();d.setMapConfiguration(b);Oskari.$("pageArgs",a);Oskari.$("startup",c.getMapConfiguration());Oskari.$("Ext",Ext);d.startFramework()},update:function(){},stop:function(){alert("Stopped!")}},{protocol:["Oskari.bundle.BundleInstance"]});Oskari.clazz.define("Oskari.samples.adapt.Application",function(){this._core=null;this.mapConfiguration=null;this.ui=null},{getSandbox:function(){return this._core.getSandbox()},setMapConfiguration:function(a){this.mapConfiguration=a},getMapConfiguration:function(){return this.mapConfiguration},startFramework:function(){var b=this.getMapConfiguration();var a=Oskari.clazz.create("Oskari.mapframework.core.Core");this._core=a;var c=this.createServices(b);var e=this.createEnhancements(b);var d=this.createUserInterface(b);this.ui=d;this.createDefaultExtensionModules(b,d);this.createExtensionBundles(b,d);this.createCoreQuirks(b,a);a.init(d,c,e,b.layers,b.userInterfaceLanguage,b.mapPublisherWizardUrl)},getUserInterface:function(){return this.ui},createCoreQuirks:function(b,a){if(b.disableDevelopmentMode=="true"){var c=Oskari.clazz.create("Oskari.mapframework.enhancement.common.DisableDevelopmentModeEnhancement",true);c.enhance(a)}},createServices:function(a){var b=[];b.push(Oskari.clazz.create("Oskari.mapframework.service.SearchService",a.globalMapAjaxUrl,a.globalPortletNameSpace));b.push(Oskari.clazz.create("Oskari.mapframework.service.MapLayerService",a.globalMapAjaxUrl));b.push(Oskari.clazz.create("Oskari.mapframework.service.GetFeatureInfoService",a.globalMapAjaxUrl));b.push(Oskari.clazz.create("Oskari.mapframework.service.LanguageService",a.userInterfaceLanguage));b.push(Oskari.clazz.create("Oskari.mapframework.service.UsageSnifferService",2,"/log/"));return b},createEnhancements:function(a){var d=[];var c=false;var b=(a.netServiceCenterAvailable==true);d.push(Oskari.clazz.create("Oskari.mapframework.enhancement.mapfull.StartMapWithConfigurationsEnhancement",a.preSelectedLayers,a.mapConfigurations));d.push(Oskari.clazz.create("Oskari.mapframework.enhancement.mapfull.StartMapWithLinkEnhancement"));return d},createUserInterface:function(a){return Oskari.clazz.create("Oskari.mapframework.ui.manager.adapt.AdaptUiManager",a)},createDefaultExtensionModules:function(a,b){return b},createExtensionBundles:function(a,b){}});Oskari.clazz.define("Oskari.mapframework.ui.manager.adapt.AdaptUiManager",function(a){this._sandbox;this._conf=a;this._uimodules=[];this._uimodulesByName={};this.facadeParts={Portlet:{},Drawer:{}}},{createModulesAndUi:function(k){k.printDebug("Creating UI for Map full...");this._sandbox=k;var g=this._conf;var l=false;var j=true;var b=true;var c=true;var h=Oskari.clazz.create("Oskari.mapframework.ui.module.common.MapModule","Main",l,j,b,c);this.mapmodule=h;var a=k.register(h);this.map=a;var d=[];d.push("Oskari.mapframework.mapmodule.LayersPlugin");d.push("Oskari.mapframework.mapmodule.WmsLayerPlugin");d.push("Oskari.mapframework.mapmodule.ControlsPlugin");for(var e=0;e<d.length;e++){var f=Oskari.clazz.create(d[e]);h.registerPlugin(f)}a.addControl(new OpenLayers.Control.TouchNavigation({dragPanOptions:{enableKinetic:true}}));this.setupExtensionModules(k);k.printDebug("All modules created, next build up EXTJs frame...");this.createUi(k);k.printDebug("Map full UI construction completed.")},setupExtensionModules:function(a){a.printDebug("setupExtensionModules...");
for(var c=0;c<this._uimodules.length;c++){var b=this._uimodules[c];if(!b.module){continue}a.printDebug("#*+---- registering ----+*#"+b.identifier);b.component=a.register(b.module)}},addExtensionModule:function(c,b,d,f,a){var e={module:c,identifier:b,region:d,loc:f,component:a};this._uimodules.push(e);this._uimodulesByName[b]=e;return e},getExtensionModule:function(a){return this._uimodulesByName[a].module},getExtensionModuleDefinition:function(a){return this._uimodulesByName[a]},getExtensionModuleComponentsByRegion:function(d){var a=this._sandbox;var b=[];var f="";for(p in d){f+=p+"="+d[p]+" "}a.printDebug("getExtensionModulesByRegion called with "+f);for(var e=0;e<this._uimodules.length;e++){var c=this._uimodules[e];if(!c.component){continue}if(d[c.region]){b.push(c.component);a.printDebug("- module "+c.identifier+" matched")}}return b},getExtensionModuleDefinitionsByRegion:function(c){var a=[];for(var d=0;d<this._uimodules.length;d++){var b=this._uimodules[d];if(c[b.region]){a.push(b)}}return a},createUi:function(a){var d=a.getLanguage();var f=Oskari.$().startup.mapConfigurations;this.map.render("map-div");var b=this.createPortletPanel(a,f,"east","E",512);var e=this.createPortletPanel(a,f,"west","W",512);var c=this.createPortletPanel(a,f,"south","S",256);this._facade=Oskari.clazz.create("Oskari.mapframework.ui.manager.adapt.Facade",a,this,this.facadeParts);Oskari.$("UI.facade",this._facade);this._uiReady=true},getFacade:function(){return this._facade},createPortletPanel:function(m,h,j,l){var i=Ext.get(j);var a=i.getWidth();var q=i.getHeight();var e={};e[l]=true;var g=this.getExtensionModuleDefinitionsByRegion(e);var d=[];for(var c=0;c<g.length;c++){var b=g[c];d.push({title:b.loc?b.loc[lang].title:"?",height:256,items:b.component})}var f=Ext.create("Ext.app.PortalPanel",{xtype:"portalpanel",items:[{items:d}]});var o=[f];var k=Ext.create("Ext.container.Container",{layout:{type:"fit"},renderTo:i,height:q,border:1,style:{width:"100%",height:"100%"},items:o});this.facadeParts.Portlet[l]=f;this.facadeParts.Drawer[l]=k;return k},getBundleMenu:function(){return[{text:"Load Bundle: Bundle Manager",handler:function(){var a=Oskari.bundle_facade;a.require({"Import-Bundle":{bundlemanager:{bundlePath:"../example-bundles/bundle/"}}},function(b){Oskari.bundle_facade.requireBundle("bundlemanager","BundleManager",function(){var c=b.createInstance("BundleManager");c.start()})})}}]}});Oskari.clazz.define("Oskari.mapframework.ui.manager.adapt.Facade",function(a,b,c){this.sandbox=a;this.manager=b;this.parts=c;this.additionalComponents={}},{registerPart:function(a,b){this.parts[a]=b},getSandbox:function(){return this.sandbox},getManager:function(){return this.manager},getParts:function(){return this.parts},appendExtensionModule:function(d,j,a,g,e,i,h){var c=this.sandbox.getLanguage();var b=this.manager.addExtensionModule(d,j,e,i,h);b.bundleInstance=g;if(b.module){if(b.component){b.initialisedComponent=this.getSandbox().register(b.module)}else{b.component=this.getSandbox().register(b.module)}}if(b.component){var l=null;var f=true;if(typeof e=="string"){l=e}f=this.parts.Portlet[l];if(f){var m={border:false,title:b.loc[c].title,xtype:"portlet",layout:"fit",items:[b.component],tools:[{type:"gear",handler:function(r,q,o){b.bundleInstance.config()}}],listeners:{close:function(){b.bundleInstance.stop();var q=b.bundleInstance.mediator.manager;var o=b.bundleInstance.mediator.instanceid;q.destroyInstance(o);b.bundleInstance=null}}};var n=null;n=this.parts.Portlet[l].getComponent(0);var k=n.add(m);b.host=n;b.cmp=k}else{var n=this.parts[l];var k=n.add(b.component);b.host=n;b.cmp=k}b.component=null}for(p in a){this.sandbox.registerForEventByName(d,p)}return b},addUIComponent:function(b,a,d){this.parts[d].add(a);var c={ident:b,region:d,comp:a};this.additionalComponents[b]=c},removeUIComponent:function(a){var b=this.additionalComponents[identtifier];this.parts[b.region].remove(b.comp)},removeExtensionModule:function(b,a,e,d,c){for(p in e){this.sandbox.unregisterFromEventByName(b,p)}this.sandbox.unregister(b)},collapseDirections:{N:Ext.Component.DIRECTION_TOP,E:Ext.Component.DIRECTION_RIGHT,S:Ext.Component.DIRECTION_BOTTOM,W:Ext.Component.DIRECTION_LEFT},collapsePart:function(a){this.parts.Drawer[a].collapse(this.collapseDirections[a],false)
},expandPart:function(a){this.parts.Drawer[a].expand(false)}},{protocol:["Oskari.mapframework.ui.manager.Facade"]});Oskari.clazz.define("Oskari.mapframework.enhancement.mapfull.StartMapWithConfigurationsEnhancement",function(a,b){this._preSelectedJson=a;this._mapConfigurations=b},{enhance:function(b){var f=b.getRequestParameter("coord");var c=b.getRequestParameter("zoomLevel");var a=b.getRequestParameter("mapLayers");if(f!=null&&c!=null&&a!=null){b.printDebug("Ahem, we found 'mapLayers, coord and zoomLevel' parameters from url. This is probably a link startup. Skipping preselection.");return}b.printDebug("Enhancing application by setting position.");var h=this._mapConfigurations.east;var g=this._mapConfigurations.north;var k=this._mapConfigurations.scale;var e=false;b.getMap().moveTo(h,g,k);b.printDebug("Enhancing application by preselecting layers.");if(this._preSelectedJson.preSelectedLayers!=undefined){for(var d=0;d<this._preSelectedJson.preSelectedLayers.length;d++){var j=this._preSelectedJson.preSelectedLayers[d];b.processRequest(b.getRequestBuilder("AddMapLayerRequest")(j.id,false))}}}},{protocol:["Oskari.mapframework.enhancement.Enhancement"]});Oskari.clazz.define("Oskari.mapframework.enhancement.mapfull.StartMapWithLinkEnhancement",function(){},{enhance:function(v){v.printDebug("Checking if map is started with link...");var o=v.getRequestParameter("coord");var n=v.getRequestParameter("zoomLevel");var h=v.getRequestParameter("mapLayers");var f=v.getRequestParameter("showMarker");var k=v.getRequestParameter("keepLayersOrder");if(k===null){k=true}v.getMap().setMarkerVisible(f=="true");if(o===null||n===null){return}var q;if(o.indexOf("_")>=0){q=o.split("_")}else{q=o.split("%20")}var j=q[0];var m=q[1];if(j===null||m===null){v.printDebug("Could not parse link location. Skipping.");return}v.getMap().moveTo(j,m,n);v.printDebug("This is startup by link, moving map...");if(h!==null&&h!==""){v.printDebug("Continuing by adding layers...");var a=h.split(",");for(var t=0;t<a.length;t++){var g=a[t].split("+");var e=g[0];var b=g[1];var u=g[2];if((e.indexOf("_")!=-1)&&(e.indexOf("base_")==-1)&&(e.indexOf("BASE_")==-1)){var w=e.split("_");e=null;var c=null;for(var d in w){if(d){c=v.findBaselayerBySublayerIdFromAllAvailable(w[d]);if(c){e=c.getId();break}}}}if(e!==null){var s=null;var l=null;s=v.getRequestBuilder("AddMapLayerRequest");l=s(e,k);v.processRequest(l);s=v.getRequestBuilder("ChangeMapLayerOpacityRequest");l=s(e,b);v.processRequest(l);s=v.getRequestBuilder("ChangeMapLayerStyleRequest");l=s(e,u);v.processRequest(l)}else{v.printWarn("[StartMapWithLinkEnhancement] Could not find baselayer for "+e)}}}}},{protocol:["Oskari.mapframework.enhancement.Enhancement"]});