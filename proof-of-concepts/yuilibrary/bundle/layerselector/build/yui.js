/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 11:30:12 GMT+0300 (Suomen kes√§aika)) */ 
Oskari.clazz.define("Oskari.poc.yuilibrary.bundle.LayerSelectorBundleInstance",function(){this.map=null;this.core=null;this.sandbox=null;this.mapmodule=null;this.started=false;this.template=null;this.plugins={};this.yuilibrary=null},{__name:"YUILibraryLayerSelector",getName:function(){return this.__name},getSandbox:function(){return this.sandbox},start:function(){var c=this;if(c.started){return}c.started=true;var a=Oskari.$("sandbox");c.sandbox=a;a.register(c);for(p in c.eventHandlers){a.registerForEventByName(c,p)}var b=a.getRequestBuilder("userinterface.AddExtensionRequest")(this);a.request(this,b);c.mediator.bundle.require(function(d){c.yuilibrary=d;c.refresh()})},init:function(){return null},update:function(){},afterChangeMapLayerOpacityEvent:function(a){},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{AfterMapMoveEvent:function(a){}},stop:function(){var a=this.sandbox();for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}var b=a.getRequestBuilder("userinterface.RemoveExtensionRequest")(this);a.request(this,b);this.sandbox.unregister(this);this.started=false},setSandbox:function(a){this.sandbox=null},startExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=Oskari.clazz.create("Oskari.poc.yuilibrary.layerselector.Flyout",this);this.plugins["Oskari.userinterface.Tile"]=Oskari.clazz.create("Oskari.poc.yuilibrary.layerselector.Tile",this)},stopExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=null;this.plugins["Oskari.userinterface.Tile"]=null},getTitle:function(){return"Layer Selection"},getDescription:function(){return"Sample"},getPlugins:function(){return this.plugins},refresh:function(){var a=this;if(!a.yuilibrary){return}this.plugins["Oskari.userinterface.Flyout"].setYUILibrary(a.yuilibrary);this.plugins["Oskari.userinterface.Flyout"].refresh();this.plugins["Oskari.userinterface.Tile"].setYUILibrary(a.yuilibrary);this.plugins["Oskari.userinterface.Tile"].refresh()}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.userinterface.Extension"]});Oskari.clazz.define("Oskari.poc.yuilibrary.layerselector.Flyout",function(a){this.instance=a;this.container=null;this.template=null;this.state=null;this.yuilibrary=null},{setYUILibrary:function(a){this.yuilibrary=a},getName:function(){return"Oskari.poc.yuilibrary.layerselector.Flyout"},setEl:function(c,b,a){this.container=c[0]},startPlugin:function(){},stopPlugin:function(){},getTitle:function(){return"Valitut karttatasot"},getDescription:function(){},getOptions:function(){},setState:function(a){this.state=a;console.log("Flyout.setState",this,a)},refresh:function(){var e=this;var b=e.yuilibrary;var d=e.template;if(!d){d=b.Node.create('<div class="layerselector"></div>');e.template=d}var f=b.one(this.container);var d=this.template;var h=e.instance.getSandbox();var a=h.getRequestBuilder("ChangeMapLayerOpacityRequest");var c=h.findAllSelectedMapLayers();f.empty();var g=d.cloneNode(true);var i=new b.TabView({children:[{label:"foo",content:"<div><p>foo content</p></div><div><p>foo content</p></div><div><p>foo content</p></div>"},{label:"bar",content:"<div><p>bar content</p></div><div><p>bar content</p></div><div><p>bar content</p></div>"},{label:"baz",content:"<div><p>baz content</p></div><div><p>baz content</p></div><div><p>baz content</p></div>"}]});i.render(g);f.appendChild(g)}},{protocol:["Oskari.userinterface.Flyout"]});Oskari.clazz.define("Oskari.poc.yuilibrary.layerselector.Tile",function(a){this.instance=a;this.container=null;this.template=null;this.yuilibrary=null},{setYUILibrary:function(a){this.yuilibrary=a},getName:function(){return"Oskari.poc.yuilibrary.layerselector.Tile"},setEl:function(c,b,a){this.container=$(c)},startPlugin:function(){this.refresh()},stopPlugin:function(){this.container.empty()},getTitle:function(){return"Karttatasot"},getDescription:function(){},getOptions:function(){},setState:function(a){console.log("Tile.setState",this,a)},refresh:function(){var f=this;var a=f.instance;var e=this.container;var d=this.template;
var c=a.getSandbox();var b=e.children(".oskari-tile-status")}},{protocol:["Oskari.userinterface.Tile"]});