export const LOCALIZATION_BUNDLE = 'oskariui';

// AntD width settings for grid
export const ANTD_FORMLAYOUT = {
    labelCol: { span: 24 }, // width of label column in AntD grid settings -> full width = own row inside element
    wrapperCol: { span: 24 } // width of wrapping column in AntD grid settings -> full width = own row inside element
};

export const SUPPORTED_FORMATS = ['point', 'line', 'area'];

export const MARKERS = [
    {
        offsetX: 14.06,
        offsetY: 5.38,
        data: '<svg width="32" height="32"><path fill="#000000" stroke="#000000" d="m 17.662202,6.161625 c -2.460938,-0.46875 -4.101563,-0.234375 -4.921875,0.585937 -0.234375,0.234376 -0.234375,0.468751 -0.117188,0.820313 0.234375,0.585938 0.585938,1.171875 1.054688,2.109375 0.46875,0.9375 0.703125,1.523438 0.820312,1.757813 -0.351562,0.351562 -1.054687,1.054687 -2.109375,1.992187 -1.523437,1.40625 -1.523437,1.40625 -2.226562,2.109375 -0.8203126,0.820312 -0.117188,1.757812 2.109375,2.8125 0.9375,0.46875 1.992187,0.820312 3.046875,0.9375 2.695312,0.585937 4.570312,0.351562 5.742187,-0.585938 0.351563,-0.351562 0.46875,-0.703125 0.351563,-1.054687 0,0 -1.054688,-2.109375 -1.054688,-2.109375 -0.46875,-1.054688 -0.46875,-1.171875 -0.9375,-2.109375 -0.351562,-0.703125 -0.46875,-1.054687 -0.585937,-1.289062 0.234375,-0.234375 0.234375,-0.351563 1.289062,-1.289063 1.054688,-0.9375 1.054688,-0.9375 1.757813,-1.640625 0.703125,-0.585937 0.117187,-1.40625 -1.757813,-2.34375 -0.820312,-0.351563 -1.640625,-0.585938 -2.460937,-0.703125 0,0 0,0 0,0 M 14.615327,26.0835 c 0,0 1.054687,-5.625 1.054687,-5.625 0,0 -1.40625,-0.234375 -1.40625,-0.234375 0,0 -1.054687,5.859375 -1.054687,5.859375 0,0 1.40625,0 1.40625,0 0,0 0,0 0,0" /></svg>'
    }, {
        offsetX: 16,
        offsetY: 6.84,
        data: '<svg width="32" height="32"><path fill="#000000" stroke="#000000" d="m 22.20134,7.4273516 c 0,0 -12.40234,0 -12.40234,0 0,0 0,12.3046904 0,12.3046904 0,0 3.41797,0 3.41797,0 0,0 2.73437,4.39453 2.73437,4.39453 0,0 2.73438,-4.39453 2.73438,-4.39453 0,0 3.51562,0 3.51562,0 0,0 0,-12.3046904 0,-12.3046904 0,0 0,0 0,0"/></svg>'
    }, {
        offsetX: 16,
        offsetY: 5.19,
        data: '<svg width="32" height="32"><path fill="#000000" stroke="#000000" d="m 16.00025,5.7495486 c -1.99219,0 -3.51562,0.58594 -4.92187,1.99219 C 9.67213,9.1479886 8.969,10.788619 8.969,12.780799 c 0,1.17188 0.58594,2.8125 1.75781,5.03907 1.17188,2.22656 2.34375,4.10156 3.51563,5.625 0,0 1.75781,2.46093 1.75781,2.46093 4.6875,-6.21093 7.03125,-10.54687 7.03125,-13.125 0,-1.99218 -0.70312,-3.6328104 -2.10937,-5.0390604 -1.40625,-1.40625 -2.92969,-1.99219 -4.92188,-1.99219 0,0 0,0 0,0 m 0,9.9609404 c -0.82031,0 -1.40625,-0.23437 -1.99219,-0.82031 -0.58593,-0.58594 -0.82031,-1.17188 -0.82031,-1.99219 0,-0.82031 0.23438,-1.52344 0.82031,-2.10937 0.58594,-0.58594 1.17188,-0.8203204 1.99219,-0.8203204 0.82031,0 1.52344,0.2343804 2.10938,0.8203204 0.58593,0.58593 0.82031,1.28906 0.82031,2.10937 0,0.82031 -0.23438,1.40625 -0.82031,1.99219 -0.58594,0.58594 -1.28907,0.82031 -2.10938,0.82031 0,0 0,0 0,0"/></svg>'
    }, {
        offsetX: 12.74,
        offsetY: 5.63,
        data: '<svg width="32" height="32"><path fill="#000000" stroke="#000000" d="m 13.48113,25.7265 c 0,0 1.99218,-8.3203 1.99218,-8.3203 0,0 -1.40625,-0.2344 -1.40625,-0.2344 0,0 -1.99218,8.5547 -1.99218,8.5547 0,0 1.40625,0 1.40625,0 0,0 0,0 0,0 M 10.903,11.3124 c 0,1.4063 0.46875,2.5782 1.40625,3.6329 0.9375,1.0546 2.22656,1.5234 3.63281,1.5234 1.40625,0 2.57813,-0.4688 3.63282,-1.5234 1.05468,-1.0547 1.52343,-2.2266 1.52343,-3.6329 0,-1.4062 -0.46875,-2.5781 -1.52343,-3.5156 -1.05469,-0.9375 -2.22657,-1.5234 -3.63282,-1.5234 -1.40625,0 -2.69531,0.5859 -3.63281,1.5234 -0.9375,0.9375 -1.40625,2.1094 -1.40625,3.5156 0,0 0,0 0,0"/></svg>'
    }, {
        offsetX: 20.12,
        offsetY: 5.41,
        data: '<svg width="32" height="32"><g transform="translate(1.2364754,0.92819)"><path fill="#000000" stroke="#000000" d="m 19.50313,25.03281 c 0,0 4.80468,-19.80468 4.80468,-19.80468 0,0 -1.52343,0 -1.52343,0 0,0 -4.6875,19.80468 -4.6875,19.80468 0,0 1.40625,0 1.40625,0 0,0 0,0 0,0 M 8.01875,5.11094 c 0,0 2.10938,5.27344 2.10938,5.27344 0,0 -4.45313,5.15625 -4.45313,5.15625 0,0 13.47656,0 13.47656,0 0,0 2.46094,-10.42969 2.46094,-10.42969 0,0 -13.59375,0 -13.59375,0 0,0 0,0 0,0"/></g></svg>'
    }, {
        data: '<svg width="32" height="32"><path fill="#000000" stroke="#000000" d="m 8.969,15.99975 c 0,1.99219 0.70313,3.51563 2.10938,4.92188 1.40625,1.40625 2.92968,2.10937 4.92187,2.10937 1.99219,0 3.51563,-0.70312 4.92188,-2.10937 1.40625,-1.40625 2.10937,-2.92969 2.10937,-4.92188 0,-1.99219 -0.70312,-3.51562 -2.10937,-4.92187 C 19.51588,9.67163 17.99244,8.9685 16.00025,8.9685 c -1.99219,0 -3.51562,0.70313 -4.92187,2.10938 -1.40625,1.40625 -2.10938,2.92968 -2.10938,4.92187 0,0 0,0 0,0"/></svg>'
    }, {
        offsetX: 16,
        offsetY: 5.41,
        data: '<svg width="32" height="32"><path fill="#000000" stroke="#000000" d="m 19.280933,16.92943 c 0,0 0,-10.8984403 0,-10.8984403 0,0 -6.5625,0 -6.5625,0 0,0 0,10.8984403 0,10.8984403 0,0 -4.5703104,0 -4.5703104,0 0,0 7.8515604,8.78906 7.8515604,8.78906 0,0 7.85156,-8.78906 7.85156,-8.78906 0,0 -4.57031,0 -4.57031,0 0,0 0,0 0,0"/></svg>'
    }
];

export const LINE_STYLES = {
    "lineDash": [
        {
            "name": "solid",
            "data": `<svg viewBox="0 0 32 32" width="32" height="32" xmlns="http://www.w3.org/2000/svg">
                <path d="M0,32 l32,-32" stroke="#000000" stroke-width="3"/></svg>`
        },
        {
            "name": "dash",
            "data": `<svg viewBox="0 0 32 32" width="32" height="32" xmlns="http://www.w3.org/2000/svg">
                <path d="M0,32 l32,-32" stroke="#000000" stroke-dasharray="4, 4" stroke-width="3"/></svg>`
        }
    ],
    "corners": [
        {
            "name": "miter",
            "data": `<svg version="1.1" viewBox="0 0 32 32" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg"
                        style="enable-background:new 0 0 32 32;">
                    <polygon points="32,9 9,9 9,32 23,32 23,23 32,23 "/>
                    <polygon fill="#fff" points="18.5,15.8 18.5,14 14,14 14,18.4 15.7,18.4 15.7,32 16.7,32 16.7,18.5 18.4,18.5 18.4,16.8 32,16.8 32,15.8 "/>
                </svg>`
        },
        {
            "name": "round",
            "data": `<svg version="1.1" viewBox="0 0 32 32" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg"
                        style="enable-background:new 0 0 32 32;">
               <path d="M32,9H18.3C13.2,9,9,13.2,9,18.3l0,0V32h14v-9h9V9z"/>
               <polygon fill="#fff" points="18.5,15.8 18.5,14 14,14 14,18.4 15.7,18.4 15.7,32 16.7,32 16.7,18.5 18.4,18.5 18.4,16.8 32,16.8 32,15.8 "/>
               </svg>`
        }
    ],
    "linecaps": [
        {
            "name": "butt",
            "data": `<svg version="1.1" viewBox="0 0 32 32" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg"
                        style="enable-background:new 0 0 32 32;">
                <polygon points="19.2,16 19.2,13 12.8,13 12.8,16 9,16 9,32 23,32 23,16 "/>
                <polygon fill="#fff" points="13.8,14 13.8,18.4 15.5,18.4 15.5,32 16.5,32 16.5,18.5 18.2,18.5 18.2,14 "/>
            </svg>`
        },
        {
            "name": "round",
            "data": `<svg version="1.1" viewBox="0 0 32 32" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg"
                    style="enable-background:new 0 0 32 32;">
                <path d="M9,32h14V15.8c0-3.9-3.1-7-7-7l0,0c-3.9,0-7,3.1-7,7V32z"/>
                <polygon fill="#fff" points="13.8,14 13.8,18.4 15.5,18.4 15.5,32 16.5,32 16.5,18.5 18.2,18.5 18.2,14 "/>
            </svg>`
        },

        {
            "name": "square",
            "data": `<svg version="1.1" viewBox="0 0 32 32" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg"
                        style="enable-background:new 0 0 32 32;">
                <polygon points="9,32 23,32 23,8.8 9,8.8 "/>
                <polygon fill="#fff" points="13.8,14 13.8,18.4 15.5,18.4 15.5,32 16.5,32 16.5,18.5 18.2,18.5 18.2,14 "/>
            </svg>`
        }
    ]
};

const COLOR_SELECTOR_COLORS = [
    '#ffffff',
    '#cccccc',
    '#818282',
    '#666666',
    '#000000',
    '#f8931f',
    '#ffde00',
    '#ff3334',
    '#bf2652',
    '#652d90',
    '#3233ff',
    '#2ba7ff',
    '#26bf4b',
    '#00ff01',
    '#ffff00',
];

// Make array of inline SVG for pre-defined color block
export const PRE_DEFINED_COLORS = COLOR_SELECTOR_COLORS.map((color) => {
    return {
        name: color,
        data: '<svg viewBox="0 0 32 32" width="32" height="32" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="32" height="32" fill="' + color + '" /></svg>'
    };
});
