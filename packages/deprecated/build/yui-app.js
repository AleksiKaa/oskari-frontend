/* This is a packed Oskari app (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.tools.Yui",function(){this.bundle_manager=Oskari.bundle_manager;this.excludeTags={mapframework:true},this.langs={fi:true,sv:true,en:true},this.flushPackFiles()},{flushPackFiles:function(){this.packedFiles=[];this.packedLocales={};for(l in this.langs){this.packedLocales[l]=[]}},setExcludeTags:function(a){this.excludeTags=a},getBundleTags:function(a){return this.bundle_manager.stateForBundleDefinitions[a].metadata.manifest["Bundle-Tag"]||{}},shallExclude:function(a){var b=this;var c=b.excludeTags;for(p in a){if(c[p]){return true}}return false},defaultCompressorJar:'"../tools/bundle/yui/yuicompressor-2.4.6.jar"',yui_command_line:function(j,k,g){var i=this;var c=i.bundle_manager.sources[j];var m="";m+="md build\n";var f="bundle.js";m+="java -jar "+k+" --charset UTF-8 --line-break 4096 --type js "+f+" > build/bundle-yui.js\n";m+="echo /* This is a packed Oskari bundle (bundle script version "+(new Date())+") */ > build/yui.js\n";m+="echo /* This is a unpacked Oskari bundle (bundle script version "+(new Date())+") */ > build/yui-pack.js\n";for(var d=0;d<c.scripts.length;d++){var b=c.scripts[d];var a=new String(b.src);var e="text/javascript"==b.type?"js":"css";if("css"==e){continue}while(a.indexOf("/")!=-1){a=a.replace("/","\\")}m+='type "'+a+'" >> build/yui-pack.js\n'}m+="java -jar "+k+" --charset UTF-8 --line-break 4096 --type js build/yui-pack.js >> build/yui.js\n";this.packedFiles.push(g+"/build/yui.js");for(l in this.langs){if(!this.langs[l]){continue}m+="echo /* This is a unpacked Oskari bundle (bundle script version "+(new Date())+") */ > build/yui-pack-locale-"+l+".js\n"}if(c.locales){for(var d=0;d<c.locales.length;d++){var b=c.locales[d];var h=b.lang;var a=new String(b.src);var e="text/javascript"==b.type?"js":"css";if("css"==e){continue}while(a.indexOf("/")!=-1){a=a.replace("/","\\")}m+='type "'+a+'" >> build/yui-pack-locale-'+h+".js\n"}}for(l in this.langs){if(!this.langs[l]){continue}m+="java -jar "+k+" --charset UTF-8 --line-break 4096 --type js build/yui-pack-locale-"+l+".js >> build/yui-locale-"+l+".js\n";this.packedLocales[l].push(g+"/build/yui-locale-"+l+".js")}return m},yui_command_lines:function(a){var d=this;var c={};for(bndlName in d.bundle_manager.sources){var f=d.getBundleTags(bndlName);if(d.shallExclude(f)){continue}var b=Oskari.bundle_manager.stateForBundleDefinitions[bndlName].bundlePath;var e="";e+='pushd "'+b+'"\n';e+=d.yui_command_line(bndlName,a,b);e+="popd\n";c[bndlName]=e}return c},yui_command_line_for_app:function(h){var g=this;g.flushPackFiles();var f="SET CURRENT=%CD%\n";var d="SET YUICOMPRESSOR=%CURRENT%/"+this.defaultCompressorJar+"\n";var e=g.yui_command_lines(h);var c="";for(p in e){c+=e[p]}var i="";i+="md build\n";i+="echo /* This is a packed Oskari app (bundle script version "+(new Date())+") */ > build/yui-app.js\n";for(var b=0;b<this.packedFiles.length;b++){var a=this.packedFiles[b];while(a.indexOf("/")!=-1){a=a.replace("/","\\")}i+='type "'+a+'" >> build/yui-app.js\n'}for(l in this.langs){i+="echo /* This is a packed Oskari locale for app (bundle script version "+(new Date())+") */ > build/yui-app-locale-"+l+".js\n";for(var b=0;b<this.packedLocales[l].length;b++){var a=this.packedLocales[l][b];while(a.indexOf("/")!=-1){a=a.replace("/","\\")}i+='type "'+a+'" >> build/yui-app-locale-'+l+".js\n"}}return f+d+c+i},showYuiBuildCmd:function(){var a=this.yui_command_line_for_app("%YUICOMPRESSOR%");var b=window.open();b.document.write('<body ><pre style="font: 9pt Verdana;">'+a+"</body></pre>")}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.userguide.UserGuideBundleInstance",function(){this.sandbox=null;this.started=false;this.plugins={};this.localization=null;this.ui=null;this._requestHandlers={};this.attachedToDefault=false},{templates:{userguide:'<div class="oskari-userguide"><span class="oskari-prompt"></span><br /><a target="_blank" href="http://www.google.fi/">Google</a></div>'},__name:"userinterface.UserGuide",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},getLocalization:function(a){if(a){return this._localization[a]}return this._localization},start:function(){var c=this;if(c.started){return}c.started=true;var a=Oskari.$("sandbox");c.sandbox=a;this._localization=Oskari.getLocalization(this.getName());var e=this.getLocalization("title");var d=Oskari.clazz.create("Oskari.userinterface.component.Popover",e,"");this.ui=d;d.setContent($(this.templates.userguide));a.register(c);for(p in c.eventHandlers){a.registerForEventByName(c,p)}this._requestHandlers["userguide.ShowUserGuideRequest"]=Oskari.clazz.create("Oskari.mapframework.bundle.userguide.request.ShowUserGuideRequestHandler",a,this);a.addRequestHandler("userguide.ShowUserGuideRequest",this._requestHandlers["userguide.ShowUserGuideRequest"]);var b=a.getRequestBuilder("userinterface.AddExtensionRequest")(this);a.request(this,b);c.createUi()},init:function(){return null},update:function(){},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{"userinterface.ExtensionUpdatedEvent":function(b){var a=this;if(b.getExtension().getName()!=a.getName()){return}var c=b.getViewState()!="close";a.toggleUserInterface(c)}},toggleUserInterface:function(d,a){var b=this;var c=this.ui;if(!d){c.hide()}else{if(!b.attachedToDefault){var a=b.plugins["Oskari.userinterface.Tile"].getEl();c.setPlacement("right");c.attachTo(a);b.attachedToDefault=true}c.show()}},scheduleShowUserGuide:function(h){var k=this;var i=k.ui;var a=h.isToggle();if(a&&i.shown){k.getSandbox().postRequestByName("userinterface.UpdateExtensionRequest",[this,"close"]);return}k.getSandbox().postRequestByName("userinterface.UpdateExtensionRequest",[this,"attach"]);var b=jQuery(this.templates.userguide);var f=jQuery("<div />");var e=Oskari.getLang();var j=f.clone();j.append("Lang: "+e);b.append(j);var j=f.clone();j.append("Extension: "+h.getExtension());b.append(j);var j=f.clone();j.append("Context: "+h.getContext());b.append(j);var j=f.clone();j.append("Element: "+(h.getEl()?"YES":"NO"));b.append(j);var c=h.getEl();var g=h.getPlacement();if(g){i.setPlacement(g)}if(!c){if(!k.attachedToDefault){c=k.plugins["Oskari.userinterface.Tile"].getEl();i.attachTo(c);k.attachedToDefault=true}}else{i.hide();k.attachedToDefault=false;i.attachTo(c)}i.setContent(b)},stop:function(){var a=this.sandbox();for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.removeRequestHandler("userguide.ShowUserGuideRequest",this._requestHandlers["userguide.ShowUserGuideRequest"]);var b=a.getRequestBuilder("userinterface.RemoveExtensionRequest")(this);a.request(this,b);this.sandbox.unregister(this);this.started=false},startExtension:function(){this.plugins["Oskari.userinterface.Tile"]=Oskari.clazz.create("Oskari.mapframework.bundle.userguide.Tile",this,this.getLocalization("tile"))},stopExtension:function(){this.plugins["Oskari.userinterface.Tile"]=null},getPlugins:function(){return this.plugins},getTitle:function(){return this.getLocalization("title")},getDescription:function(){return this.getLocalization("desc")},createUi:function(){var a=this;this.plugins["Oskari.userinterface.Tile"].refresh()}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.userinterface.Extension"]});Oskari.clazz.define("Oskari.mapframework.bundle.userguide.request.ShowUserGuideRequest",function(b){var a=b||{};this._creator=null;this._el=a.el;this._context=a.context;this._extension=a.extension;this._toggle=a.toggle;this._placement=a.placement},{__name:"userguide.ShowUserGuideRequest",getName:function(){return this.__name
},getUuid:function(){return this._uuid},getContext:function(){return this._context},getExtension:function(){return this._extension},getEl:function(){return this._el},isToggle:function(){return this._toggle},getPlacement:function(){return this._placement}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.userguide.request.ShowUserGuideRequestHandler",function(b,a){this.sandbox=b;this.instance=a},{handleRequest:function(a,b){this.sandbox.printDebug("[Oskari.mapframework.bundle.userguide.request.ShowUserGuideRequestHandler] Show UserGuide: "+b.getUuid());this.instance.scheduleShowUserGuide(b)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.userguide.Tile",function(b,a){this.instance=b;this.locale=a;this.container=null;this.template=null},{getName:function(){return"Oskari.mapframework.bundle.userguide.Tile"},setEl:function(d,c,a){this.container=jQuery(d);var b=this.container.children(".oskari-tile-status")},getEl:function(){return this.container},startPlugin:function(){this.refresh()},stopPlugin:function(){this.container.empty()},getTitle:function(){return this.locale.title},getDescription:function(){return this.locale.desciption},getOptions:function(){},refresh:function(){var e=this;var a=e.instance;var d=this.container;var c=this.template;var b=a.getSandbox()}},{protocol:["Oskari.userinterface.Tile"]});Oskari.registerLocalization({lang:"fi",key:"userinterface.UserGuide",value:{title:"Ohje",desc:"",flyout:{title:"Ohje"},tile:{title:"Ohje",}}});Oskari.registerLocalization({lang:"sv",key:"userinterface.UserGuide",value:{title:"Guide",desc:"",flyout:{title:"Guide"},tile:{title:"Guide",}}});Oskari.registerLocalization({lang:"en",key:"userinterface.UserGuide",value:{title:"Guide",desc:"",flyout:{title:"Guide"},tile:{title:"Guide",}}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.toolbar.ToolbarBundleInstance",function(){this.sandbox=null;this.started=false;this.buttons={};this.selectedButton=null;this.container=null},{__name:"Toolbar",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},update:function(){},start:function(){var b=this;if(b.started){return}b.started=true;var a=Oskari.$("sandbox");a.register(b);b.setSandbox(a);this.container=jQuery("#toolbar");for(var c in b.eventHandlers){if(c){a.registerForEventByName(b,c)}}a.addRequestHandler("Toolbar.AddToolButtonRequest",this.requestHandlers.toolButtonRequestHandler);a.addRequestHandler("Toolbar.RemoveToolButtonRequest",this.requestHandlers.toolButtonRequestHandler);a.addRequestHandler("Toolbar.ToolButtonStateRequest",this.requestHandlers.toolButtonRequestHandler);a.registerAsStateful(this.mediator.bundleId,this);if(this._addDefaultButtons){this._addDefaultButtons()}},init:function(){var a=this;this.templateGroup=jQuery('<div class="toolrow"></div>');this.templateTool=jQuery('<div class="tool"></div>');this.requestHandlers={toolButtonRequestHandler:Oskari.clazz.create("Oskari.mapframework.bundle.toolbar.request.ToolButtonRequestHandler",a)}},getToolbarContainer:function(){return this.container},onEvent:function(c){var b=this;var a=b.eventHandlers[c.getName()];if(!a){return}return a.apply(this,[c])},eventHandlers:{},stop:function(){var b=this;var a=b.sandbox();for(var c in b.eventHandlers){if(c){a.unregisterFromEventByName(b,c)}}this.sandbox.unregisterStateful(this.mediator.bundleId);b.sandbox.unregister(b);b.started=false},setState:function(d){if(!d){return}if(d.selected){this.selectedButton=d.selected;var a=d.selected.id;var f=d.selected.group;var c=this.getToolbarContainer();this._removeToolSelections();var e=c.find("div.toolrow[tbgroup="+f+"]");if(e.length>0){var b=e.find("div.tool[tool="+a+"]");if(b.length>0){b.addClass("selected");this.buttons[f][a].callback()}}}else{this.selectedButton=null}},getState:function(){var a={};if(this.selectedButton){a.selected=this.selectedButton}return a}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module"]});Oskari.clazz.category("Oskari.mapframework.bundle.toolbar.ToolbarBundleInstance","button-methods",{addToolButton:function(c,a,g){if(!c||!a||!g||!g.callback){return}var e=this;var d=this.getToolbarContainer();var f=null;if(!this.buttons[a]){this.buttons[a]={};f=this.templateGroup.clone();f.attr("tbgroup",a);d.append(f)}else{f=d.find("div.toolrow[tbgroup="+a+"]")}if(this.buttons[a][c]){return}this.buttons[a][c]=g;var b=this.templateTool.clone();b.attr("tool",c);b.attr("title",g.tooltip);b.addClass(g.iconCls);if(this.selectedButton){if(this.selectedButton.id==c&&this.selectedButton.group==a){b.addClass("selected");g.callback()}}else{if(g.selected){b.addClass("selected");e.selectedButton={id:c,group:a}}}b.bind("click",function(h){if(e.buttons[a][c].enabled==false){return}if(g.sticky==true){e._removeToolSelections();b.addClass("selected");e.selectedButton={id:c,group:a}}g.callback()});f.append(b)},_removeToolSelections:function(){var a=this.getToolbarContainer();var b=a.find("div.tool");b.removeClass("selected")},removeToolButton:function(c,a){if(!a){return}if(this.buttons[a]){var d=this.getToolbarContainer();var e=d.find("div.toolrow[tbgroup="+a+"]");if(c){var b=e.find("div.tool[tool="+c+"]");b.remove();this.buttons[a][c]=null;delete this.buttons[a][c]}else{e.remove();this.buttons[a]=null;delete this.buttons[a]}}},changeToolButtonState:function(f,d,c){if(!d){return}if(this.buttons[d]){var g=this.getToolbarContainer();var i=g.find("div.toolrow[tbgroup="+d+"]");if(f){var e=i.find("div.tool[tool="+f+"]");this.buttons[d][f].enabled=c;if(c){e.removeClass("disabled")}else{e.addClass("disabled")}}else{var h=i.find("div.tool");if(c){h.removeClass("disabled")}else{h.addClass("disabled")}for(var a in this.buttons[d]){this.buttons[d][a].enabled=c}}}}});Oskari.clazz.category("Oskari.mapframework.bundle.toolbar.ToolbarBundleInstance","default-buttons",{_addDefaultButtons:function(){var b=this;
var a=this.getSandbox().getRequestBuilder("ToolSelectionRequest");this.addToolButton("reset","history",{iconCls:"tool-reset",tooltip:"Paluu aloitusn채kym채채n",sticky:false,callback:function(){var d=b.getSandbox().getRequestBuilder("StateHandler.SetStateRequest");if(d){b.getSandbox().request(b,d())}var c=b.getSandbox().getRequestBuilder("ClearHistoryRequest")();b.getSandbox().request(b,c)}});this.addToolButton("history_back","history",{iconCls:"tool-history-back",tooltip:"Taaksep채in historiassa",sticky:false,callback:function(){b.getSandbox().request(b,a("map_control_tool_prev"))}});this.addToolButton("history_forward","history",{iconCls:"tool-history-forward",tooltip:"Eteenp채in historiassa",sticky:false,callback:function(){b.getSandbox().request(b,a("map_control_tool_next"))}});this.addToolButton("zoombox","basictools",{iconCls:"tool-zoombox",tooltip:"Zoom",sticky:true,callback:function(){b.getSandbox().request(b,a("map_control_zoom_tool"))}});this.addToolButton("select","basictools",{iconCls:"tool-pan",tooltip:"Pan",selected:true,sticky:true,callback:function(){b.getSandbox().request(b,a("map_control_navigate_tool"))}});this.addToolButton("measureline","measuretools",{iconCls:"tool-measure-line",tooltip:"Measure line",sticky:true,callback:function(){b.getSandbox().request(b,a("map_control_measure_tool"))}});this.addToolButton("measurearea","measuretools",{iconCls:"tool-measure-area",tooltip:"Measure area",sticky:true,callback:function(){b.getSandbox().request(b,a("map_control_measure_area_tool"))}})}});Oskari.clazz.define("Oskari.mapframework.bundle.toolbar.request.AddToolButtonRequest",function(c,b,a){this._id=c;this._group=b;this._config=a},{__name:"Toolbar.AddToolButtonRequest",getName:function(){return this.__name},getId:function(){return this._id},getGroup:function(){return this._group},getConfig:function(){return this._config}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.toolbar.request.RemoveToolButtonRequest",function(b,a){this._id=b;this._group=a},{__name:"Toolbar.RemoveToolButtonRequest",getName:function(){return this.__name},getId:function(){return this._id},getGroup:function(){return this._group}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.toolbar.request.ToolButtonStateRequest",function(c,b,a){this._id=c;this._group=b;this._state=(a==true)},{__name:"Toolbar.ToolButtonStateRequest",getName:function(){return this.__name},getId:function(){return this._id},getGroup:function(){return this._group},getState:function(){return this._state}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.toolbar.request.ToolButtonRequestHandler",function(a){this._toolbar=a},{handleRequest:function(b,c){var a=b.getSandbox();if(c.getName()=="Toolbar.AddToolButtonRequest"){this._handleAdd(a,c)}else{if(c.getName()=="Toolbar.RemoveToolButtonRequest"){this._handleRemove(a,c)}else{if(c.getName()=="Toolbar.ToolButtonStateRequest"){this._handleState(a,c)}}}},_handleAdd:function(a,b){this._toolbar.addToolButton(b.getId(),b.getGroup(),b.getConfig())},_handleRemove:function(a,b){this._toolbar.removeToolButton(b.getId(),b.getGroup())},_handleState:function(a,b){this._toolbar.changeToolButtonState(b.getId(),b.getGroup(),b.getState())}},{protocol:["Oskari.mapframework.core.RequestHandler"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(e){var i=[],f=e(document),c=e.browser.msie&&parseInt(e.browser.version)===6&&typeof window.XMLHttpRequest!=="object",b=e.browser.msie&&parseInt(e.browser.version)===7,h=null,g=e(window),a=[];e.modal=function(j,d){return e.modal.impl.init(j,d)};e.modal.close=function(){e.modal.impl.close()};e.modal.focus=function(d){e.modal.impl.focus(d)};e.modal.setContainerDimensions=function(){e.modal.impl.setContainerDimensions()};e.modal.setPosition=function(){e.modal.impl.setPosition()};e.modal.update=function(d,j){e.modal.impl.update(d,j)};e.fn.modal=function(d){return e.modal.impl.init(this,d)};e.modal.defaults={appendTo:"body",focus:true,opacity:50,overlayId:"simplemodal-overlay",overlayCss:{},containerId:"simplemodal-container",containerCss:{},dataId:"simplemodal-data",dataCss:{},minHeight:null,minWidth:null,maxHeight:null,maxWidth:null,autoResize:false,autoPosition:true,zIndex:1000,close:true,closeHTML:'<a class="modalCloseImg" title="Close"></a>',closeClass:"simplemodal-close",escClose:true,overlayClose:false,fixed:true,position:null,persist:false,modal:true,onOpen:null,onShow:null,onClose:null};e.modal.impl={d:{},init:function(k,d){var j=this;if(j.d.data){return false}h=e.browser.msie&&!e.boxModel;j.o=e.extend({},e.modal.defaults,d);j.zIndex=j.o.zIndex;j.occb=false;if(typeof k==="object"){k=k instanceof jQuery?k:e(k);j.d.placeholder=false;if(k.parent().parent().size()>0){k.before(e("<span></span>").attr("id","simplemodal-placeholder").css({display:"none"}));j.d.placeholder=true;j.display=k.css("display");if(!j.o.persist){j.d.orig=k.clone(true)}}}else{if(typeof k==="string"||typeof k==="number"){k=e("<div></div>").html(k)}else{alert("SimpleModal Error: Unsupported data type: "+typeof k);return j}}j.create(k);k=null;j.open();if(e.isFunction(j.o.onShow)){j.o.onShow.apply(j,[j.d])}return j},create:function(j){var d=this;d.getDimensions();if(d.o.modal&&c){d.d.iframe=e('<iframe src="javascript:false;"></iframe>').css(e.extend(d.o.iframeCss,{display:"none",opacity:0,position:"fixed",height:a[0],width:a[1],zIndex:d.o.zIndex,top:0,left:0})).appendTo(d.o.appendTo)}d.d.overlay=e("<div></div>").attr("id",d.o.overlayId).addClass("simplemodal-overlay").css(e.extend(d.o.overlayCss,{display:"none",opacity:d.o.opacity/100,height:d.o.modal?i[0]:0,width:d.o.modal?i[1]:0,position:"fixed",left:0,top:0,zIndex:d.o.zIndex+1})).appendTo(d.o.appendTo);d.d.container=e("<div></div>").attr("id",d.o.containerId).addClass("simplemodal-container").css(e.extend({position:d.o.fixed?"fixed":"absolute"},d.o.containerCss,{display:"none",zIndex:d.o.zIndex+2})).append(d.o.close&&d.o.closeHTML?e(d.o.closeHTML).addClass(d.o.closeClass):"").appendTo(d.o.appendTo);d.d.wrap=e("<div></div>").attr("tabIndex",-1).addClass("simplemodal-wrap").css({height:"100%",outline:0,width:"100%"}).appendTo(d.d.container);d.d.data=j.attr("id",j.attr("id")||d.o.dataId).addClass("simplemodal-data").css(e.extend(d.o.dataCss,{display:"none"})).appendTo("body");j=null;d.setContainerDimensions();d.d.data.appendTo(d.d.wrap);if(c||h){d.fixIE()}},bindEvents:function(){var d=this;e("."+d.o.closeClass).bind("click.simplemodal",function(j){j.preventDefault();d.close()});if(d.o.modal&&d.o.close&&d.o.overlayClose){d.d.overlay.bind("click.simplemodal",function(j){j.preventDefault();d.close()})}f.bind("keydown.simplemodal",function(j){if(d.o.modal&&j.keyCode===9){d.watchTab(j)}else{if((d.o.close&&d.o.escClose)&&j.keyCode===27){j.preventDefault();d.close()}}});g.bind("resize.simplemodal orientationchange.simplemodal",function(){d.getDimensions();d.o.autoResize?d.setContainerDimensions():d.o.autoPosition&&d.setPosition();if(c||h){d.fixIE()}else{if(d.o.modal){d.d.iframe&&d.d.iframe.css({height:a[0],width:a[1]});d.d.overlay.css({height:i[0],width:i[1]})}}})},unbindEvents:function(){e("."+this.o.closeClass).unbind("click.simplemodal");f.unbind("keydown.simplemodal");g.unbind(".simplemodal");this.d.overlay.unbind("click.simplemodal")},fixIE:function(){var d=this,j=d.o.position;e.each([d.d.iframe||null,!d.o.modal?null:d.d.overlay,d.d.container.css("position")==="fixed"?d.d.container:null],function(w,n){if(n){var u="document.body.clientHeight",y="document.body.clientWidth",A="document.body.scrollHeight",x="document.body.scrollLeft",r="document.body.scrollTop",m="document.body.scrollWidth",l="document.documentElement.clientHeight",v="document.documentElement.clientWidth",t="document.documentElement.scrollLeft",B="document.documentElement.scrollTop",C=n[0].style;
C.position="absolute";if(w<2){C.removeExpression("height");C.removeExpression("width");C.setExpression("height",""+A+" > "+u+" ? "+A+" : "+u+' + "px"');C.setExpression("width",""+m+" > "+y+" ? "+m+" : "+y+' + "px"')}else{var q,k;if(j&&j.constructor===Array){var z=j[0]?typeof j[0]==="number"?j[0].toString():j[0].replace(/px/,""):n.css("top").replace(/px/,"");q=z.indexOf("%")===-1?z+" + (t = "+B+" ? "+B+" : "+r+') + "px"':parseInt(z.replace(/%/,""))+" * (("+l+" || "+u+") / 100) + (t = "+B+" ? "+B+" : "+r+') + "px"';if(j[1]){var o=typeof j[1]==="number"?j[1].toString():j[1].replace(/px/,"");k=o.indexOf("%")===-1?o+" + (t = "+t+" ? "+t+" : "+x+') + "px"':parseInt(o.replace(/%/,""))+" * (("+v+" || "+y+") / 100) + (t = "+t+" ? "+t+" : "+x+') + "px"'}}else{q="("+l+" || "+u+") / 2 - (this.offsetHeight / 2) + (t = "+B+" ? "+B+" : "+r+') + "px"';k="("+v+" || "+y+") / 2 - (this.offsetWidth / 2) + (t = "+t+" ? "+t+" : "+x+') + "px"'}C.removeExpression("top");C.removeExpression("left");C.setExpression("top",q);C.setExpression("left",k)}}})},focus:function(l){var j=this,k=l&&e.inArray(l,["first","last"])!==-1?l:"first";var d=e(":input:enabled:visible:"+k,j.d.wrap);setTimeout(function(){d.length>0?d.focus():j.d.wrap.focus()},10)},getDimensions:function(){var j=this,d=e.browser.opera&&e.browser.version>"9.5"&&e.fn.jquery<"1.3"||e.browser.opera&&e.browser.version<"9.5"&&e.fn.jquery>"1.2.6"?g[0].innerHeight:g.height();i=[f.height(),f.width()];a=[d,g.width()]},getVal:function(j,k){return j?(typeof j==="number"?j:j==="auto"?0:j.indexOf("%")>0?((parseInt(j.replace(/%/,""))/100)*(k==="h"?a[0]:a[1])):parseInt(j.replace(/px/,""))):null},update:function(d,k){var j=this;if(!j.d.data){return false}j.d.origHeight=j.getVal(d,"h");j.d.origWidth=j.getVal(k,"w");j.d.data.hide();d&&j.d.container.css("height",d);k&&j.d.container.css("width",k);j.setContainerDimensions();j.d.data.show();j.o.focus&&j.focus();j.unbindEvents();j.bindEvents()},setContainerDimensions:function(){var v=this,l=c||b;var d=v.d.origHeight?v.d.origHeight:e.browser.opera?v.d.container.height():v.getVal(l?v.d.container[0].currentStyle.height:v.d.container.css("height"),"h"),k=v.d.origWidth?v.d.origWidth:e.browser.opera?v.d.container.width():v.getVal(l?v.d.container[0].currentStyle.width:v.d.container.css("width"),"w"),q=v.d.data.outerHeight(true),j=v.d.data.outerWidth(true);v.d.origHeight=v.d.origHeight||d;v.d.origWidth=v.d.origWidth||k;var m=v.o.maxHeight?v.getVal(v.o.maxHeight,"h"):null,r=v.o.maxWidth?v.getVal(v.o.maxWidth,"w"):null,o=m&&m<a[0]?m:a[0],u=r&&r<a[1]?r:a[1];var n=v.o.minHeight?v.getVal(v.o.minHeight,"h"):"auto";if(!d){if(!q){d=n}else{if(q>o){d=o}else{if(v.o.minHeight&&n!=="auto"&&q<n){d=n}else{d=q}}}}else{d=v.o.autoResize&&d>o?o:d<n?n:d}var t=v.o.minWidth?v.getVal(v.o.minWidth,"w"):"auto";if(!k){if(!j){k=t}else{if(j>u){k=u}else{if(v.o.minWidth&&t!=="auto"&&j<t){k=t}else{k=j}}}}else{k=v.o.autoResize&&k>u?u:k<t?t:k}v.d.container.css({height:d,width:k});v.d.wrap.css({overflow:(q>d||j>k)?"auto":"visible"});v.o.autoPosition&&v.setPosition()},setPosition:function(){var k=this,m,l,n=(a[0]/2)-(k.d.container.outerHeight(true)/2),j=(a[1]/2)-(k.d.container.outerWidth(true)/2),d=k.d.container.css("position")!=="fixed"?g.scrollTop():0;if(k.o.position&&Object.prototype.toString.call(k.o.position)==="[object Array]"){m=d+(k.o.position[0]||n);l=k.o.position[1]||j}else{m=d+n;l=j}k.d.container.css({left:l,top:m})},watchTab:function(j){var d=this;if(e(j.target).parents(".simplemodal-container").length>0){d.inputs=e(":input:enabled:visible:first, :input:enabled:visible:last",d.d.data[0]);if((!j.shiftKey&&j.target===d.inputs[d.inputs.length-1])||(j.shiftKey&&j.target===d.inputs[0])||d.inputs.length===0){j.preventDefault();var k=j.shiftKey?"last":"first";d.focus(k)}}else{j.preventDefault();d.focus()}},open:function(){var d=this;d.d.iframe&&d.d.iframe.show();if(e.isFunction(d.o.onOpen)){d.o.onOpen.apply(d,[d.d])}else{d.d.overlay.show();d.d.container.show();d.d.data.show()}d.o.focus&&d.focus();d.bindEvents()},close:function(){var d=this;if(!d.d.data){return false}d.unbindEvents();if(e.isFunction(d.o.onClose)&&!d.occb){d.occb=true;
d.o.onClose.apply(d,[d.d])}else{if(d.d.placeholder){var j=e("#simplemodal-placeholder");if(d.o.persist){j.replaceWith(d.d.data.removeClass("simplemodal-data").css("display",d.display))}else{d.d.data.hide().remove();j.replaceWith(d.d.orig)}}else{d.d.data.hide().remove()}d.d.container.hide().remove();d.d.overlay.hide();d.d.iframe&&d.d.iframe.hide().remove();d.d.overlay.remove();d.d={}}}}}));Oskari.clazz.define("Oskari.mapframework.bundle.statehandler.StateHandlerBundleInstance",function(){this._localization=null;this._pluginInstances={};this._startupState=null;this._historyPollingInterval=1500;this._historyTimer=null;this._historyPrevious=[];this._historyEnabled=true;this._historyNext=[];this._currentViewId=1},{__name:"StateHandler",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},start:function(){var c=this;if(c.started){return}c.started=true;var a=Oskari.$("sandbox");c.sandbox=a;a.register(c);for(p in c.eventHandlers){a.registerForEventByName(c,p)}var b="/web/fi/kartta?p_p_id=Portti2Map_WAR_portti2mapportlet&p_p_lifecycle=1&p_p_state=exclusive&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_Portti2Map_WAR_portti2mapportlet_fi.mml.baseportlet.CMD=ajax.jsp&";var d=Oskari.clazz.create("Oskari.mapframework.bundle.statehandler.plugin.SaveViewPlugin",b);this.registerPlugin(d);this.startPlugin(d);a.addRequestHandler("StateHandler.SetStateRequest",this.requestHandlers.setStateHandler);a.addRequestHandler("StateHandler.SaveStateRequest",this.requestHandlers.saveStateHandler)},update:function(){},stop:function(){var a=this.sandbox();a.removeRequestHandler("StateHandler.SetStateRequest",this.requestHandlers.setStateHandler);a.removeRequestHandler("StateHandler.SaveStateRequest",this.requestHandlers.saveStateHandler);var b=a.getRequestBuilder("MapControls.ToolButtonRequest");if(b){a.request(this,b(this.toolbar.config,"remove"))}for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}this.sandbox.unregister(this);this.started=false},init:function(){var b=this;this.toolbar={config:{group:this.getName(),toolId:"statehandler.reset",iconCls:"statehandler_reset_tool",tooltip:this.getLocalization("reset"),callback:function(){b.resetState()}}};var a=Oskari.$("sandbox");this.requestHandlers={setStateHandler:Oskari.clazz.create("Oskari.mapframework.bundle.statehandler.request.SetStateRequestHandler",a,this),saveStateHandler:Oskari.clazz.create("Oskari.mapframework.bundle.statehandler.request.SaveStateRequestHandler",a,this)};return null},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization(this.getName())}if(a){return this._localization[a]}return this._localization},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{AfterMapMoveEvent:function(b){var a=this;if(this._historyEnabled===true){if(this._historyTimer){clearTimeout(this._historyTimer);this._historyTimer=null}this._historyTimer=setTimeout(function(){var d=a.sandbox.getStatefulComponents()["mapfull"];if(d){var c=d.getState();a._historyPrevious.push(c)}},this._historyPollingInterval)}}},historyMoveNext:function(){if(this._historyNext.length>0){var a=this._historyNext.pop();this._historyPrevious.push(a);var b=this.sandbox.getStatefulComponents()["mapfull"];if(b){this._historyEnabled=false;b.setState(a);this._historyEnabled=true}}},historyMovePrevious:function(){if(this._historyPrevious.length>0){var a=this._historyPrevious.pop();this._historyNext.push(a);var b=this.sandbox.getStatefulComponents()["mapfull"];if(b){this._historyEnabled=false;b.setState(a);this._historyEnabled=true}}},registerPlugin:function(a){a.setHandler(this);var b=a.getName();this.sandbox.printDebug("["+this.getName()+"] Registering "+b);this._pluginInstances[b]=a},unregisterPlugin:function(a){var b=a.getName();this.sandbox.printDebug("["+this.getName()+"] Unregistering "+b);this._pluginInstances[b]=undefined;a.setHandler(null)},startPlugin:function(a){var b=a.getName();this.sandbox.printDebug("["+this.getName()+"] Starting "+b);a.startPlugin(this.sandbox)
},stopPlugin:function(a){var b=a.getName();this.sandbox.printDebug("["+this.getName()+"] Starting "+b);a.stopPlugin(this.sandbox)},setCurrentViewId:function(a){this._currentViewId=a},getCurrentViewId:function(){return this._currentViewId}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module"]});Oskari.clazz.category("Oskari.mapframework.bundle.statehandler.StateHandlerBundleInstance","state-methods",{useState:function(c){if(!c){return}var b=this.sandbox.getStatefulComponents();var a=[];for(var d in c){if(b[d]){b[d].setState(c[d].state)}a.push(d)}return a},resetState:function(){for(var b in this._pluginInstances){this.sandbox.printDebug("["+this.getName()+"] resetting state on "+b);this._pluginInstances[b].resetState()}var a=this;if(this._startupState){a._resetComponentsWithNoStateData(a.useState(this._startupState))}else{jQuery.ajax({dataType:"json",type:"GET",url:a.sandbox.getAjaxUrl()+"action_route=GetMapConfiguration&noSavedState=true",success:function(c){a._startupState=c;a._resetComponentsWithNoStateData(a.useState(c))},error:function(){alert("error loading conf")}})}},_resetComponentsWithNoStateData:function(a){var c=this.sandbox.getStatefulComponents();for(var e in c){var d=false;for(var b=0;b<a.length;++b){if(e==a[b]){d=true;break}}if(!d){c[e].setState()}}},saveState:function(a){if(!a){for(var a in this._pluginInstances){this.saveState(a)}return}this.sandbox.printDebug("["+this.getName()+"] saving state with "+a);this._pluginInstances[a].saveState()},getCurrentState:function(){var b={};var a=this.sandbox.getStatefulComponents();for(var c in a){b[c]={state:a[c].getState()}}return b},getSavedState:function(a){return this._pluginInstances[a].getState()}});Oskari.clazz.define("Oskari.mapframework.bundle.statehandler.plugin.Plugin",function(){throw"Oskari.mapframework.bundle.statehandler.Plugin should not be instantiated"},{getName:function(){throw"Implement your own"},setHandler:function(a){throw"Implement your own"},startPlugin:function(a){throw"Implement your own"},stopPlugin:function(a){throw"Implement your own"},getState:function(){throw"Implement your own"},resetState:function(){throw"Implement your own"},saveState:function(a){throw"Implement your own"}});Oskari.clazz.define("Oskari.mapframework.bundle.statehandler.plugin.SaveViewPlugin",function(a){this.handler=null;this.pluginName=null;this._sandbox=null;this._ajaxUrl=a},{__name:"statehandler.SaveViewPlugin",getName:function(){return this.pluginName},getHandler:function(){return this.handler},setHandler:function(a){this.handler=a;this.pluginName=a.getName()+this.__name},getState:function(){},resetState:function(){},saveState:function(){var a=this.handler.getCurrentState();var g=this;var e=this.handler.getLocalization("save");var i=e.title?e.title.save_view:"N채kym채n tallennus";var b=e.msg?e.msg.view_name:"N채kym채n nimi";var b='<div class="e_noname" style="display: inline-block; color: red; display: none;"><br />'+(e.error_noname?e.error_noname:"Nimi ei voi olla tyhj채!")+'<br /></div><div class="e_illegal" style="display: inline-block; color: red; display: none;"><br />'+(e.error_illegalchars?e.error_illegalchars:"Nimess채 on virheellisi채 merkkej채")+"<br /></div>"+b+': <input name="viewName" type="text" class="viewName" />';var f={name:"button_save",text:e.button?e.button.save:"Tallenna",close:false,onclick:function(k){var l=jQuery("div.modalmessage input.viewName").val();if(l){if(l.indexOf("<")>=0){jQuery("div.modalmessage div.e_illegal").show()}else{g._saveState(l);$.modal.close()}}else{jQuery("div.modalmessage div.e_noname").show()}}};var j={name:"button_cancel",text:e.button?e.button.cancel:"Peruuta",close:true};var d="userinterface.ModalDialogRequest";var c=g._sandbox.getRequestBuilder(d);var h=c(i,b,[f,j]);g._sandbox.request(g.handler,h)},_saveState:function(e){var c=this.handler.getCurrentState();var a="";if(e){a="myViewName="+e+"&"}var b=this;var d=this.handler.getLocalization("save");jQuery.ajax({dataType:"json",type:"POST",beforeSend:function(f){if(f&&f.overrideMimeType){f.overrideMimeType("application/j-son;charset=UTF-8")}},url:this._ajaxUrl+"action_route=AddView",data:a+"myViewState="+b.serializeJSON(c)+"currentViewId="+b.handler.getCurrentViewId(),success:function(h){alert(d.success);
var f=b._sandbox.getEventBuilder("StateSavedEvent");var g=f(e,c);b._sandbox.notifyAll(g);b.handler.setCurrentViewId(h.id)},error:function(){if(e){alert(d.error);var f=b._sandbox.getEventBuilder("StateSavedEvent");var g=f(e,c);b._sandbox.notifyAll(g)}}})},serializeJSON:function(e){var d=this;var c=typeof(e);if(c!="object"||e===null){if(c=="string"){e='"'+e+'"'}return String(e)}else{var b=[],a=(e&&e.constructor==Array);jQuery.each(e,function(g,f){c=typeof(f);if(c=="string"){f='"'+f+'"'}else{if(c=="object"&f!==null){f=d.serializeJSON(f)}}b.push((a?"":'"'+g+'":')+String(f))});return(a?"[":"{")+String(b)+(a?"]":"}")}},startPlugin:function(a){this._sandbox=a;var b=this;jQuery(document).ready(function(){window.onbeforeunload=function(){b._saveState()}})},stopPlugin:function(a){this._sandbox=null}},{protocol:["Oskari.mapframework.bundle.statehandler.plugin.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.statehandler.request.SetStateRequest",function(a){this._creator=null;this._state=a;this._currentViewId=1},{__name:"StateHandler.SetStateRequest",getName:function(){return this.__name},getState:function(){return this._state},getCurrentViewId:function(){return this._currentViewId},setCurrentViewId:function(a){this.currentViewId=a}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.statehandler.request.SetStateRequestHandler",function(b,a){this.sandbox=b;this.statehandler=a},{handleRequest:function(a,b){if(b.getState()){this.statehandler.setCurrentViewId(b.getCurrentViewId());this.statehandler.useState(b.getState())}else{this.statehandler.resetState()}}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.statehandler.event.StateSavedEvent",function(a,b){this._name=a;this._state=b},{__name:"StateSavedEvent",getName:function(){return this.__name},getViewName:function(){return this._name},getState:function(){return this._state}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.bundle.statehandler.request.SaveStateRequest",function(){this._creator=null},{__name:"StateHandler.SaveStateRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.statehandler.request.SaveStateRequestHandler",function(b,a){this.sandbox=b;this.statehandler=a},{handleRequest:function(a,b){this.statehandler.saveState()}},{protocol:["Oskari.mapframework.core.RequestHandler"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.service.OgcSearchService",function(b,a){this._TILE_SIZE_IN_PIXELS=256;this._componentName="WfsRequestTiler";this._mapPollingInterval=100;this._gridPollingInterval=200;this._simultaneousPngRequest=4;this._wfsMapUpdateRequests={};this._wfsMapHighlightRequest=null;this._gridQuery=null;this._wfsGridUpdateRequest=null;this._tileCount=16;this._core=a;this._doMapLayerReArrange=false;this.endpointUrl=b},{__qname:"Oskari.mapframework.service.OgcSearchService",getQName:function(){return this.__qname},__name:"OgcSearchService",getName:function(){return this.__name},processGetFeaturesJsonFlowForTableFormat:function(k,h,e,d,c,a,f,j,g){var l=k.getId();var b="&flow_pm_wfsLayerId="+l+"&flow_pm_bbox_min_x="+e+"&flow_pm_bbox_min_y="+d+"&flow_pm_bbox_max_x="+c+"&flow_pm_bbox_max_y="+a+"&flow_pm_map_width="+f+"&flow_pm_map_heigh="+j+"&flow_pm_map_wfs_query_id="+g+"&actionKey=QUERY_FIND_RAW_DATA_TO_TABLE";this._gridQuery=jQuery.ajax({dataType:"json",type:"POST",url:this.endpointUrl+b,data:b,success:h})},processGetFeatureTypeIdsJsonForTableFormat:function(d,e,b,c){var a=d+"&flow_pm_map_width="+b+"&flow_pm_map_heigh="+c+"&actionKey=GET_HIGHLIGHT_WFS_FEATURE_IMAGE_BY_POINT";jQuery.ajax({dataType:"json",type:"POST",url:this.endpointUrl+a,data:a,success:e})},processGetFeaturesPngImageForMapFormat:function(k,h,e,d,c,a,f,j,g){var l=k.getId();var b=Oskari.$().startup.globalMapPngUrl+"&flow_pm_wfsLayerId="+l+"&flow_pm_bbox_min_x="+e+"&flow_pm_bbox_min_y="+d+"&flow_pm_bbox_max_x="+c+"&flow_pm_bbox_max_y="+a+"&flow_pm_map_width="+f+"&flow_pm_map_heigh="+j+"&flow_pm_zoom_level="+g+"&actionKey=GET_PNG_MAP";h(b)},processGetHighlightWFSFeatureImageUrl:function(g,j,e,d,c,a,f,h){if(g!==null&&j!==null){var b=Oskari.$().startup.globalMapPngUrl+"&flow_pm_wfsLayerId="+g+"&wfsFeatureId="+j+"&flow_pm_bbox_min_x="+e+"&flow_pm_bbox_min_y="+d+"&flow_pm_bbox_max_x="+c+"&flow_pm_bbox_max_y="+a+"&flow_pm_map_width="+f+"&flow_pm_map_heigh="+h+"&actionKey=GET_HIGHLIGHT_WFS_FEATURE_IMAGE";return b}else{throw"Cannot do processGetHighlightWFSFeatureImageUrl because wfsLayerId or wfsFeatureId is null."}},scheduleMapLayerRearrangeAfterWfsMapTilesAreReady:function(){this._doMapLayerReArrange=true},removeWFsLayerRequests:function(a){var c=a.getId();if(this._wfsMapUpdateRequests[c]!==null){var b=this._wfsMapUpdateRequests[c];this._wfsMapUpdateRequests[c]=null;delete b}},removeWFSLayerGridRequests:function(a){if(this._gridQuery){this._gridQuery.abort()}this._wfsGridUpdateRequest=null},removeWFSMapHighlightRequest:function(){this._wfsMapHighlightRequest=null},scheduleWFSMapLayerUpdate:function(g,l,e,h,b){var a=g.getId();var k=this._wfsMapUpdateRequests[a];if(k!==null){this._wfsMapUpdateRequests[a]=null;delete k}this._wfsMapUpdateRequests[a]=[];var c=this.splitBbox(l,e,h,this._TILE_SIZE_IN_PIXELS);this._tileCount=c.length;var j=Oskari.clazz.builder("Oskari.mapframework.domain.WfsTileRequest");for(var d=0;d<c.length;d++){var f=j(g,c[d],e,h,b,d);this._wfsMapUpdateRequests[a].push(f)}this._doMapLayerReArrange=true},scheduleWFSGridUpdate:function(f,e,a,d,b){this._wfsGridUpdateRequest=Oskari.clazz.create("Oskari.mapframework.domain.WfsGridScheduledRequest",f,e,a,d,b);var c=this;setTimeout(function(){c.processGridQueue()},this._gridPollingInterval)},scheduleWFSMapHighlightUpdate:function(a){this._wfsMapHighlightRequest=a;this.processHighlightQueue()},splitBbox:function(f,c,b,a){var e=this._core.getMap();var g=[];if(e){var d=e.getTileQueue();if(d){g=d.getQueue()}else{}}else{}return g},processMapQueue:function(){var j=function(b){var l="WFS_LAYER_IMAGE_"+e.getMapLayer().getId()+"_"+e.getSequenceNumber();var m=d.getEventBuilder("AfterWfsGetFeaturesPngImageForMapEvent")(e.getMapLayer(),b,e.getBbox(),l);d.copyObjectCreatorToFrom(m,e);d.dispatch(m)};this._core.printDebug("[OGCSearchService.processMapQueue] Looping this._wfsMapUpdateRequests...");for(var c in this._wfsMapUpdateRequests){var g=this._wfsMapUpdateRequests[c];if(g!==null&&g.length>0){this._core.printDebug("[OGCSearchService.processMapQueue] Got requestArray of size "+g.length+" for id "+c);var e=g[0];
this._core.printDebug("[OGCSearchService.processMapQueue] Creating request for '"+e.getMapLayer().getName()+"'");var d=this._core;var k=e.getBbox();var f=d._map._zoom;this._core.printDebug("[OGCSearchService.processMapQueue] Calling processGetFeaturesPngImageForMapFormat with");this._core.printDebug("     request.getMapLayer() : "+e.getMapLayer().getName());this._core.printDebug("          bbox.bounds.left : "+k.bounds.left);this._core.printDebug("        bbox.bounds.bottom : "+k.bounds.bottom);this._core.printDebug("         bbox.bounds.right : "+k.bounds.right);this._core.printDebug("           bbox.bounds.top : "+k.bounds.top);this._core.printDebug("      _TILE_SIZE_IN_PIXELS : "+this._TILE_SIZE_IN_PIXELS);this._core.printDebug("                   mapZoom : "+f);this.processGetFeaturesPngImageForMapFormat(e.getMapLayer(),j,k.bounds.left,k.bounds.bottom,k.bounds.right,k.bounds.top,this._TILE_SIZE_IN_PIXELS,this._TILE_SIZE_IN_PIXELS,f);this._core.printDebug("[OGCSearchService.processMapQueue] removing handled element");g.splice(0,1);if(g.length===0){delete g;this._core.printDebug("[OGCSearchService.processMapQueue] deleting empty requestArray")}return}}this._core.printDebug("[OGCSearchService.processMapQueue] _doMapLayerReArrange is "+this._doMapLayerReArrange);if(this._doMapLayerReArrange){var h=this._core.getRequestBuilder("RearrangeSelectedMapLayerRequest");var a=h();this._core.processRequest(a);this._doMapLayerReArrange=false}},processGridQueue:function(){var b=this._wfsGridUpdateRequest;var a=this._core;if(b==null){return}if(this._gridQuery){this._gridQuery.abort()}try{a.actionInProgressWfsGrid();var c=function(d){if(d.error=="true"){a.printWarn("Error while querying data to table.")}if(a.getLatestWfsTableQueryId()==parseInt(d.wfsQueryId)||d.error=="true"){if(a.isMapLayerAlreadyHighlighted(b.getMapLayer().getId())){var e=a.getEventBuilder("AfterWfsGetFeaturesJsonFlowForTableFormatEvent")(b.getMapLayer(),d,b.getBbox());a.copyObjectCreatorToFrom(e,b);a.dispatch(e)}else{a.printWarn("WFS feature response json layer ("+b.getMapLayer().getName()+") not match of highlighted layer --> Skipping response.");a.processRequest(a.getRequestBuilder("ActionReadyRequest")("WFS_GRID",false))}}else{a.printWarn("WFS GetFeaturesJsonFlowForTableFormat response id not match to latest wfs query id --> Skipping response.")}};this.processGetFeaturesJsonFlowForTableFormat(b.getMapLayer(),c,b.getBbox().left,b.getBbox().bottom,b.getBbox().right,b.getBbox().top,b.getMapWidth(),b.getMapHeight(),a.generateWfsTableQueryId())}finally{this._wfsGridUpdateRequest=null}},processHighlightQueue:function(){var d=this._wfsMapHighlightRequest;if(d===null){return}try{var e=d.getWFSFeatureId();var g=this._core.findMapLayerFromAllAvailable(d.getMapLayerId());if(!g.isLayerOfType("WFS")){throw"Trying to highlight feature from layer that is not WFS layer!"}var c=Oskari.$().sandbox._core;var j=c._map.getBbox();var f=c._map.getWidth();var h=c._map.getHeight();var b=this.processGetHighlightWFSFeatureImageUrl(g.getId(),e,j.left,j.bottom,j.right,j.top,f,h);var a=this._core.getEventBuilder("AfterWfsGetFeaturesPngImageForMapEvent")(g,b,this._core._map.getBbox(),"HIGHLIGHTED_FEATURE");this._core.copyObjectCreatorToFrom(a,d);this._core.dispatch(a)}finally{this._wfsMapHighlightRequest=null}},startPollers:function(){for(i=0;i<this._tileCount;i++){this.processMapQueue()}}},{protocol:["Oskari.mapframework.service.Service"]});Oskari.clazz.define("Oskari.mapframework.service.NetServiceCenterService",function(a){this._endpoint=a},{__qname:"Oskari.mapframework.service.NetServiceCenterService",getQName:function(){return this.__qname},__name:"NetServiceCenterService",getName:function(){return this.__name},doRequest:function(c,b,d){var e="";if(b!=null){for(var a in b){e+="&"+a+"="+encodeURIComponent(b[a])}}jQuery.ajax({dataType:"json",type:"POST",url:this._endpoint+"&actionKey="+c+e,data:"actionKey="+c+e,complete:d})}},{protocol:["Oskari.mapframework.service.Service"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.service.UsageSnifferService",function UsageSnifferService(b,a){this._sendInterval=b;this._snifferEndpoint=a;this._currentStatistics=[]},{__qname:"Oskari.mapframework.service.UsageSnifferService",getQName:function(){return this.__qname},__name:"UsageSnifferService",getName:function(){return this.__name},startSniffing:function(){var a=this;setInterval(function(){a.sendData()},this._sendInterval*1000);delete this._currentStatistics;this._currentStatistics=new Array()},sendData:function(){var b=this._currentStatistics;for(var a=0;a<b.length;a++){jQuery.get(b[a],function(d,e,c){})}this._currentStatistics=[]},registerMapMovement:function(d,a,e,j,h,f){for(var b=0;b<d.length;b++){var c=d[b];var g=c.getId();g+="?lon="+a+"&lat="+e+"&zoom="+j+"&bbox="+h;if(f!=null&&f!=""){g+="&mapId="+f}this._currentStatistics.push(this._snifferEndpoint+g)}}},{protocol:["Oskari.mapframework.service.Service"]});Oskari.clazz.define("Oskari.mapframework.service.GetFeatureInfoService",function(){},{__qname:"Oskari.mapframework.service.GetFeatureInfoService",getQName:function(){return this.__qname},__name:"GetFeatureInfoService",getName:function(){return this.__name},doGetFeatureInfo:function(f,d,c,i,b,h,e,g){var a="REQUEST=GetFeatureInfo&EXCEPTIONS=application/vnd.ogc.se_xml&BBOX="+bbox+"&X="+f+"&Y="+d+"&INFO_FORMAT="+c+"&QUERY_LAYERS="+i+"&WIDTH="+b+"&HEIGHT="+h+"&FEATURE_COUNT=1";jQuery.ajax({dataType:"text",type:"POST",url:e,data:a,success:g})}},{protocol:["Oskari.mapframework.service.Service"]});Oskari.clazz.define("Oskari.mapframework.service.MapLayerServiceModelBuilder",function(){},{parseLayerData:function(c,b,a){}});Oskari.clazz.define("Oskari.mapframework.service.MapLayerService",function(b,a){this._mapLayerUrl=b;this._sandbox=a;this._loadedLayersList=new Array();this._reservedLayerIds={};this.typeMapping={wmslayer:"Oskari.mapframework.domain.WmsLayer",wmtslayer:"Oskari.mapframework.wmts.domain.WmtsLayer",wfslayer:"Oskari.mapframework.domain.WfsLayer",vectorlayer:"Oskari.mapframework.domain.VectorLayer"},this.modelBuilderMapping={}},{__qname:"Oskari.mapframework.service.MapLayerService",getQName:function(){return this.__qname},__name:"MapLayerService",getName:function(){return this.__name},addLayer:function(b,a){this.checkForDuplicateId(b.getId(),b.getName());this._reservedLayerIds[b.getId()]=true;this._loadedLayersList.push(b);if(a!==true){var c=this._sandbox.getEventBuilder("MapLayerEvent")(b.getId(),"add");this._sandbox.notifyAll(c)}},removeLayer:function(a,b){var d=null;for(var c=0;c<this._loadedLayersList.length;c++){if(this._loadedLayersList[c].getId()==a){d=this._loadedLayersList[c];this._loadedLayersList.splice(c,1);break}}if(d&&b!==true){var e=this._sandbox.getEventBuilder("MapLayerEvent")(d.getId(),"remove");this._sandbox.notifyAll(e)}this._reservedLayerIds[a]=false},updateLayer:function(a,d){var b=this.findMapLayer(a);if(b){b.setName(d.name);var c=this._sandbox.getEventBuilder("MapLayerEvent")(b.getId(),"update");this._sandbox.notifyAll(c)}},loadAllLayers:function(){throw"TBD: loading not implemented"},loadAllLayersAjax:function(b,a){var c=this;jQuery.ajax({type:"GET",dataType:"json",beforeSend:function(d){if(d&&d.overrideMimeType){d.overrideMimeType("application/j-son;charset=UTF-8")}},url:this._mapLayerUrl,success:function(d){c._loadAllLayersAjaxCallBack(d,b)},error:function(){if(a){a()}}})},_loadAllLayersAjaxCallBack:function(f,c){var e=f.layers;for(var b=0;b<e.length;b++){var a=this.createMapLayer(e[b]);if(this._reservedLayerIds[a.getId()]!==true){this.addLayer(a,true)}}var d=this._sandbox.getEventBuilder("MapLayerEvent")(null,"add");this._sandbox.notifyAll(d);if(c){c()}},getAllLayers:function(){var a=Oskari.$().sandbox.getLanguage();return this._loadedLayersList},getAllLayersByMetaType:function(c){var d=[];for(var b=0;b<this._loadedLayersList.length;++b){var a=this._loadedLayersList[b];if(a.getMetaType&&a.getMetaType()===c){d.push(a)}}return d},registerLayerModel:function(b,a){this.typeMapping[b]=a},unregisterLayerModel:function(a){this.typeMapping[a]=undefined},registerLayerModelBuilder:function(a,b){this._sandbox.printDebug("[MapLayerService] registering handler for type "+a);
this.modelBuilderMapping[a]=b},unregisterLayerModelBuilder:function(a){this.modelBuilderMapping[a]=undefined},createMapLayer:function(b){var a=null;if(b.type=="base"){a=this._createGroupMapLayer(b,true)}else{if(b.type=="groupMap"){a=this._createGroupMapLayer(b,false)}else{a=this._createActualMapLayer(b)}}return a},_createGroupMapLayer:function(e,f){var a=Oskari.clazz.create("Oskari.mapframework.domain.WmsLayer");if(f){a.setAsBaseLayer()}else{a.setAsGroupLayer()}a.setVisible(true);a.setId(e.id);a.setName(e.name);a.setMaxScale(e.maxScale);a.setMinScale(e.minScale);a.setDataUrl(e.dataUrl);a.setOrganizationName(e.orgName);a.setInspireName(e.inspire);a.setFeatureInfoEnabled(false);if(e.permissions){for(var d in e.permissions){a.addPermission(d,e.permissions[d])}}for(var c=0;c<e.subLayer.length;c++){var b=this._createActualMapLayer(e.subLayer[c]);a.getSubLayers().push(b)}if(e.opacity!=null){a.setOpacity(e.opacity)}else{if(a.getSubLayers().length>0){a.setOpacity(a.getSubLayers()[0].getOpacity())}else{a.setOpacity(100)}}if(e.legendImage!=null&&e.legendImage!=""){a.setLegendImage(e.legendImage)}if(e.info!=null&&e.info!=""){a.setDescription(e.info)}return a},_createActualMapLayer:function(e){var c=null;var b=e.id;if(e!=null){if(!this.typeMapping[e.type]){throw"Unknown layer type '"+e.type+"'"}c=Oskari.clazz.create(this.typeMapping[e.type]);if(e.type=="wmslayer"){this._populateWmsMapLayerAdditionalData(c,e)}else{if(e.type=="wmtslayer"){this._populateWmtsMapLayerAdditionalData(c,e)}else{if(e.type=="vectorlayer"){c.setStyledLayerDescriptor(e.styledLayerDescriptor)}}}if(e.metaType&&c.setMetaType){c.setMetaType(e.metaType)}c.setAsNormalLayer();c.setId(b);c.setName(e.name);c.setOpacity(e.opacity);c.setMaxScale(e.maxScale);c.setMinScale(e.minScale);c.setDescription(e.subtitle);c.setDataUrl(e.dataUrl);c.setOrganizationName(e.orgName);c.setInspireName(e.inspire);c.setOrderNumber(e.orderNumber);c.setVisible(true);c.setGeometryWKT(e.geom);if(e.permissions){for(var d in e.permissions){c.addPermission(d,e.permissions[d])}}var a=this.modelBuilderMapping[e.type];if(a){a.parseLayerData(c,e,this)}}else{}return c},_populateWmsMapLayerAdditionalData:function(d,b){d.setWmsName(b.wmsName);if(b.wmsUrl){var a=b.wmsUrl.split(",");for(var c=0;c<a.length;c++){d.addWmsUrl(a[c])}}d.setFeatureInfoEnabled(b.gfi!=="disabled");return this._populateStyles(d,b)},_populateWmtsMapLayerAdditionalData:function(c,a){c.setWmtsName(a.wmtsName);if(a.wmtsUrl){var d=a.wmtsUrl.split(",");for(var b=0;b<d.length;b++){c.addWmtsUrl(d[b])}}return this._populateStyles(c,a)},_populateStyles:function(d,a){var g=Oskari.clazz.builder("Oskari.mapframework.domain.Style");if(a.styles){for(var c=0;c<a.styles.length;c++){var f=a.styles;var b=!(isNaN(c));if(b){f=a.styles[c]}var e=g();e.setName(f.name);e.setTitle(f.title);e.setLegend(f.legend);d.addStyle(e);if(!b){break}}d.selectStyle(a.style)}if(d.getStyles().length==0){var e=g();e.setName("");e.setTitle("");e.setLegend("");d.addStyle(e);d.selectStyle("")}d.setQueryable(a.isQueryable);d.setLegendImage(a.legendImage);d.setDataUrl(a.dataUrl);d.setQueryFormat(a.formats.value);return d},checkForDuplicateId:function(c,b){if(this._reservedLayerIds[c]===true){var a=this.findMapLayer(c);throw"Trying to add map layer with id '"+c+" ("+b+")' but that id is already reserved for '"+a.getName()+"'"}},findMapLayer:function(g,f){if(!f){f=this._loadedLayersList}for(var d=0;d<f.length;d++){var c=f[d];if(c.getId()==g){return c}}for(var d=0;d<f.length;d++){var c=f[d];var e=c.getSubLayers();for(var a=0;a<e.length;a++){var b=this.findMapLayer(g,e);if(b!=null){return b}}}return null}},{protocol:["Oskari.mapframework.service.Service"]});Oskari.clazz.define("Oskari.mapframework.service.SearchService",function(a){this._searchUrl=a},{__qname:"Oskari.mapframework.service.SearchService",getQName:function(){return this.__qname},__name:"SearchService",getName:function(){return this.__name},doSearch:function(a,d,b){var c=Oskari.getLang();jQuery.ajax({dataType:"json",type:"POST",url:this._searchUrl,data:"searchKey="+a+"&Language="+c,complete:b,success:d})}},{protocol:["Oskari.mapframework.service.Service"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.service.Service",function(){throw"mapframework.service.Service should not be used"},{getName:function(){throw"Running default implementation of Service.getName(). implement your own!"}});Oskari.clazz.define("Oskari.mapframework.service.LanguageService",function(a){this.currentLanguage=Oskari.getLang()},{__qname:"Oskari.mapframework.service.LanguageService",getQName:function(){return this.__qname},__name:"LanguageService",getName:function(){return this.__name},languageProperties:{fi:{launcher_failed_to_initialize_map_messagebox_title:"Kartan alustaminen ep\u00E4onnistui",launcher_failed_to_initialize_map_messagebox_message:"Linkki, jolla yritit alustaa kartan on virheellinen. Tarkista, ett\u00E4 linkki on luotu karttaikkunan linkkity\u00F6kalulla ja ett\u00E4 linkin osoite on kopioitu kokonaisuudessaan selaimen osoitteeksi. Jos toistuvista yrityksist\u00E4 huolimatta linkki ei toimi, ole hyv\u00E4 ja ota yhteytt\u00E4 palvelun yll\u00E4pitoon.",mapapplication_show_or_hide_menu_bar:"Piilota/N\u00E4yt\u00E4 valikko",mapapplication_show_or_hide_table_bar:"Piilota/N\u00E4yt\u00E4 taulukko",mapapplication_hide_menu_bar:"Piilota valikko",search_cannot_be_empty:"Sy\u00F6t\u00E4 hakukentt\u00E4\u00E4n hakusana",search_failure_messagebox_title:"Hakuvirhe",search_failure_messagebox_message:"Haku ei nyt onnistunut. Kokeile hakua my\u00F6hemmin uudelleen.",search_published_map_no_results:"Haulla ei l\u00F6ytynyt tuloksia",search_published_map_too_many_results:"L\u00F6ytyi yli 100 tulosta, tarkenna hakua.",leftpanel_maplevels_title:"KARTTATASOT",leftpanel_organisation_title:"Organisaatio",leftpanel_thema_title:"Teema",leftpanel_own_maps_title:"Omat kartat",leftpanel_selected_layers_title:"Valitut karttatasot",leftpanel_new_window_title:"Uusi ikkuna",leftpanel_empty_own_maps_content:"Ei omia karttoja",leftpanel_find_maplayers_value:"Hae karttatasoja",leftpanel_tree_menu_tooltip:"Valitse karttatasojen lajittelutapa",leftpanel_filter_button_tooltip:"Palaa alkuper\u00E4iseen karttatasolistaukseen",leftpanel_add_layer:"Lis\u00E4\u00E4 karttataso kartalle",leftpanel_style:"Tyyli:",rightpanel_search_find_places_textbox_value:"Hae paikkoja/osoitteita",rightpanel_search_find_places_button_value:"Hae","rightpanel-searchresults-close_button_value":"Sulje hakutulokset",rightpanel_wms_getfeatureinfo_button_value:"Sulje",rightpanel_material_description_title:"Aineistokuvaus",rightpanel_material_schema_title:"Tietotuotteen skeema",rightpanel_material_legend_title:"Selite",rightpanel_wms_getfeatureinfo_title:"Kohteen tiedot",rightpanel_map_layer_have_not_description:"Kartan selitett\u00E4 ei l\u00F6ytynyt",rightpanel_map_layer_have_not_schema:"Tietotuotteen skeemaa ei l\u00F6ydy.",rightpanel_info_panel_close_button_title:"Sulje info",rightpanel_wms_getfeatureinfo_not_supported_txt:"Ominaisuustietojen kysely ei ole tuettu valitsemallesi kartalle",mapservice_basemap_show_info_title:"N\u00E4yt\u00E4 taustakartan tiedot",mapservice_basemap_delete_title:"Poista taustakartta kartalta",mapservice_layer_show_info_title:"N\u00E4yt\u00E4 karttatason tiedot",mapservice_layer_delete_title:"Poista karttataso kartalta",mapservice_layer_is_not_visible_in_this_scale_zoomin_map_title:"Karttataso ei ole k\u00E4ytett\u00E4viss\u00E4 t\u00E4ss\u00E4 mittakaavassa. L\u00E4henn\u00E4 (+) karttaa.",mapservice_layer_is_not_visible_in_this_scale_zoomout_map_title:"Karttataso ei ole k\u00E4ytett\u00E4viss\u00E4 t\u00E4ss\u00E4 mittakaavassa. Loitonna (-) karttaa.",mapservice_not_found_legend_image:"Ei l\u00F6ytynyt kartan selitteit\u00E4",mapservice_change_layer_opacity_tooltip:"S\u00E4\u00E4d\u00E4 karttatason l\u00E4pin\u00E4kyvyytt\u00E4",mapservice_basemap_image_tooltip:"Taustakartta",mapservice_maplayer_image_tooltip:"Karttataso",mapservice_published_error_params:"Virhe irrotetun kartan parametreissa, ole hyv\u00E4 ja ota yhteytt\u00E4 t\u00E4m\u00E4n sivuston yll\u00E4pit\u00E4j\u00E4\u00E4n.",mapservice_select_layer_style:"Valitse tyyli",map_control_tool_prev_tooltip:"Palaa navigointihistoriassa taaksep\u00E4in",map_control_tool_next_tooltip:"Siirry navigointihistoriassa eteenp\u00E4in",map_control_navigate_tool_tooltip:"Raahaa karttaa pit\u00E4en hiiren vasenta painiketta pohjassa tai l\u00E4henn\u00E4 tuplaklikkaamalla",map_control_zoom_tool_tooltip:"L\u00E4henn\u00E4 haluamallesi alueelle rajaamalla alue pit\u00E4en hiiren vasenta painiketta pohjassa",map_control_measure_menu_tooltip:"Valitse mittausty\u00F6kalu",map_control_measure_tool_tooltip:"Mittaa et\u00E4isyytt\u00E4",map_control_measure_area_tool_tooltip:"Mittaa pinta-alaa",mapcontrolsservice_info_group_title:"Valitse ty\u00F6kalu tietojen n\u00E4ytt\u00E4miseksi",mapcontrolsservice_show_info_tool_title:"N\u00E4yt\u00E4 kohteen tiedot",mapcontrolsservice_show_coordinates_tool_title:"N\u00E4yt\u00E4 koordinaatit",mapcontrolsservice_add_group_title:"Valitse merkint\u00E4ty\u00F6kalu",mapcontrolsservice_add_point_tool_title:"Lis\u00E4\u00E4 piste",mapcontrolsservice_add_line_tool_title:"Lis\u00E4\u00E4 reitti",mapcontrolsservice_add_area_tool_title:"Lis\u00E4\u00E4 alue",map_control_map_link_tool_tooltip:"Luo linkki kartalle",mapcontrolsservice_save_and_print_group_title:"Valitse Tallenna- tai Tulosta-ty\u00F6kalu",mapcontrolsservice_save_tool_title:"Tallenna",map_control_print_tool_tooltip:"Tulosta",mapcontrolsservice_mappublisher_tool_title:"Siirry kartan julkaisuun",mapcontrolsservice_zoomlevel_street_title:"Katu",mapcontrolsservice_zoomlevel_part_of_a_town_title:"Kunnan osa",mapcontrolsservice_zoomlevel_town_title:"Kunta",mapcontrolsservice_zoomlevel_province_title:"Maakunta",mapcontrolsservice_zoomlevel_country_title:"Koko maa",map_control_full_screen_tool_tooltip:"Suurenna/pienenn\u00E4 kartta koko n\u00E4yt\u00F6lle",mapcontrolsservice_measure_length_title:"Et\u00E4isyys",mapcontrolsservice_measure_area_title:"Pinta-ala",mapcontrolsservice_layer_info_layer_not_selected_messagebox_title:"Karttatasoa ei ole valittu",mapcontrolsservice_layer_info_layer_not_selected_messagebox_message:'Valitse haluamasi karttataso "Valitut karttatasot" -valikosta klikkaamalla karttatason nime\u00E4.',mapcontrolsservice_not_found_wms_feature_info:"Kohteelle ei l\u00F6ytynyt tietoa",mapcontrolsservice_maplink_tool_title:"Tee linkki n\u00E4kyviss\u00E4 olevaan karttaan",mapcontrolsservice_getting_WMS_info_title:"Haetaan kohteen tietoja...",mapcontrolsservice_indexmap_title:"N\u00E4yt\u00E4/piilota l\u00E4hestymiskartta",mapcontrolsservice_start_network_service_tool_title:"Avaa yll\u00E4pitopalvelu",mapcontrolsservice_problem_with_safari_printing_title:"Tulostus ei onnistu",mapcontrolsservice_problem_with_safari_printing_message:"Paikkatietoikkuna ei tue l\u00E4pin\u00E4kyvien karttojen tulostamista Safari-selaimella. L\u00E4pin\u00E4kyvien karttojen tulostus on tuettu Internet Explorer-, Firefox-, Opera-, ja Chrome-selaimilla. Voit s\u00E4\u00E4t\u00E4\u00E4 kaikkien karttojen l\u00E4pin\u00E4kyvyyden arvoon 100% ja tulostaa uudelleen tai vaihtoehtoisesti luoda linkin nykyiseen n\u00E4kym\u00E4\u00E4n ja avata sen tulostusl\u00E4pin\u00E4kyvyytt\u00E4 tukevalla selaimella.",searchservice_search_cannot_be_empty:"Sy\u00F6t\u00E4 hakukentt\u00E4\u00E4n hakusana.",searchservice_search_alert_title:"Haku",searchservice_search_not_found_anything_text:"Antamallasi hakusanalla ei l\u00F6ytynyt tuloksia. Tarkista, ett\u00E4 kirjoitit hakusanan varmasti oikein.",searchservice_search_result_column_name:"Nimi",searchservice_search_result_column_village:"Kunta",searchservice_search_result_column_type:"Tyyppi",searchservice_searching_title:"Etsit\u00E4\u00E4n...",maplinkservice_link_generated_messagebox_title:"Suora karttalinkki",maplinkservice_link_generated_messagebox_message:'T\u00E4ll\u00E4 linkill\u00E4 p\u00E4\u00E4set palaamaan suoraan luomaasi n\u00E4kym\u00E4\u00E4n. Linkkiin on tallennettu sijainti, mittakaava, valitut karttatasot, niiden l\u00E4pin\u00E4kyvyysasetukset sek\u00E4 valitut tyylit.<br/><br/><textarea id="mapLinkTextarea" rows="2" cols="100">##0##</textarea>',maplinkservice_link_generation_failed_messagebox_title:"Linkin muodostaminen ep\u00E4onnistui",maplinkservice_link_generation_failed_messagebox_message:"Linkin muodostamisessa tapahtui virhe. Kokeile sen muodostamista uudelleen hetken kuluttua. Jos ongelma ei korjaannu, ole hyv\u00E4 ja ota yhteytt\u00E4 yll\u00E4pitoon.",published_map_search_textbox_value:"Hae paikkoja/osoitteita",published_map_search_button_value:"Hae",published_map_is_empty:"<p>Julkaisemassasi kartassa ei ole viel\u00E4 valittuna yht\u00E4\u00E4n taustakarttaa tai karttaa.</p><p>Aloita valitsemalla vasemmalta kartta.</p>",published_map_exceeded_limit:"Sallittu palvelupyynt철jen m\u00E4\u00E4r\u00E4 on ylittynyt. Voit kuitenkin avata",published_map_exceeded_limit_link_text:"kartan Paikkatietoikkunassa",published_map_terms_of_use:"K\u00E4ytt\u00F6ehdot",map_move_and_draw_module_select_searc_area_title:"Rajaa hakualue",wizard_module_confirm_close_button_value:"Sulje",wizard_module_confirm_cancel_button_value:"Peruuta",wizard_service_module_confirm_message_title:"Suljetaanko m\u00E4\u00E4rittely?",wizard_service_module_confirm_message:"<br>Olet sulkemassa m\u00E4\u00E4rittely\u00E4 tallentamatta tekemi\u00E4si muutoksia.<br>Haluatko sulkea m\u00E4\u00E4rittelyn?<br><br>",wizard_module_previous_button_value:"Edellinen",wizard_module_next_button_value:"Seuraava",wizard_module_progressbar_start_value:"Vaiheen",wizard_module_progressbar_end_value:"m\u00E4\u00E4ritys",wizard_module_save_button_value:"Tallenna",status_wfs_update_grid:"P\u00E4ivitet\u00E4\u00E4n taulukkoa...",status_update_map:"P\u00E4ivitet\u00E4\u00E4n karttaa",status_search:"Suoritetaan hakua...",status_get_feature_info:"Haetaan ominaisuustietoja...",status_multiple_tasks_running:"teht\u00E4v\u00E4\u00E4 jonossa",status_tooltip_header:"Tila",search_module_popup_layer_is_wfs_title:"Valittu karttataso on tietotuote",selected_layers_module_highlight_wms_layer:"Aktivoi kohdetietojen n\u00E4ytt\u00F6",selected_layers_module_highlight_wfs_layer:"Avaa kohdetietotaulukko",selected_layers_module_dim_wms_layer:"Lopeta kohdetietojen n\u00E4ytt\u00F6",selected_layers_module_dim_wfs_layer:"Sulje kohdetietotaulukko",selected_layers_module_wfs_icon_tooltip:"Tietotuote",selected_layers_module_collapse_panel_tooltip:"Piilota l\u00E4pin\u00E4kyvyyden ja tyylin s\u00E4\u00E4t\u00F6",selected_layers_module_expand_panel_tooltip:"N\u00E4yt\u00E4 l\u00E4pin\u00E4kyvyyden ja tyylin s\u00E4\u00E4t\u00F6",grid_module_not_found_info_for_selected_area:"Kartan alueelta ei l\u00F6ydy tietoja.",grid_module_loading_info:"Ladataan...",grid_module_wfs_maplayer_not_visible_this_scale:"Tietotuote ei ole k\u00E4ytett\u00E4viss\u00E4 t\u00E4ss\u00E4 mittakaavassa. L\u00E4henn\u00E4 (+) tai loitonna (-) karttaa.",grid_module_gridpanel_title:"{0} -tietotuotteen kohdetyypit",grid_module_gridpanel_no_title:"Ei tietotuotetta",grid_module_feature_type_title:"Kohdetyyppi",grid_module_all_tab_title:"Kaikki",grid_module_featuretype_tab_tooltip:"Kohdetyypin tiedot",grid_module_all_tab_tooltip:"Kaikkien tietotuotteen kohdetyyppien tiedot",grid_module_column_header_tooltip:"Lajittele ominaisuustiedon arvon perusteella",overlay_popup_module_close_button_text:"Sulje",selected_layers_module_published_basemaps_title:"Julkaistavat taustakartat",selected_layers_module_published_maps_title:"Julkaistavat kartat"},en:{launcher_failed_to_initialize_map_messagebox_title:"Initialization of the map failed",launcher_failed_to_initialize_map_messagebox_message:"The link used for initializing the map is incorrect. Make sure that the link is created using the map window's link tool and that the whole link address is copied as the browser address. If the link cannot be opened despite of several.",mapapplication_show_or_hide_menu_bar:"Show/hide menu",mapapplication_show_or_hide_table_bar:"Hide/Show table",mapapplication_hide_menu_bar:"Hide menu",search_cannot_be_empty:"Search cannot be empty.",search_failure_messagebox_title:"Search error",search_failure_messagebox_message:"Unable to search at this time. Please try again later.",search_published_map_no_results:"No results found",search_published_map_too_many_results:"Over 100 results found. Please define your search.",leftpanel_maplevels_title:"MAP LAYERS",leftpanel_organisation_title:"Organisation",leftpanel_thema_title:"Theme",leftpanel_own_maps_title:"My maps",leftpanel_selected_layers_title:"Selected map layers",leftpanel_new_window_title:"New window",leftpanel_empty_own_maps_content:"My maps is empty",leftpanel_find_maplayers_value:"Find map layers",leftpanel_tree_menu_tooltip:"Sort map layers by",leftpanel_filter_button_tooltip:"Return to default map layer listing",leftpanel_add_layer:"Add maplayer",leftpanel_style:"Style:",rightpanel_search_find_places_textbox_value:"Find places",rightpanel_search_find_places_button_value:"Find","rightpanel-searchresults-close_button_value":"Close search results",rightpanel_wms_getfeatureinfo_button_value:"Close",rightpanel_material_description_title:"Map layer description",rightpanel_material_schema_title:"Data product schema",rightpanel_material_legend_title:"Legend",rightpanel_wms_getfeatureinfo_title:"Feature information",rightpanel_map_layer_have_not_description:"Map legend not found.",rightpanel_map_layer_have_not_schema:"Data product schema is not available.",rightpanel_info_panel_close_button_title:"Close info",rightpanel_wms_getfeatureinfo_not_supported_txt:"Enquiry of feature information is not supported on selected map layer ",mapservice_basemap_show_info_title:"Show background map info",mapservice_basemap_delete_title:"Delete background map",mapservice_layer_show_info_title:"Show map layer info",mapservice_layer_delete_title:"Delete map layer",mapservice_layer_is_not_visible_in_this_scale_zoomin_map_title:"Map layer is not visible in current map scale. Zoom in (+) the map.",mapservice_layer_is_not_visible_in_this_scale_zoomout_map_title:"Map layer is not visible in current map scale. Zoom out (-) the map.",mapservice_not_found_legend_image:"Map legends not found",mapservice_change_layer_opacity_tooltip:"Adjust transparency of map layer",mapservice_basemap_image_tooltip:"Background map",mapservice_maplayer_image_tooltip:"Map layer",mapservice_published_error_params:"Error in the parametres of the published map. Please contact the website support.",mapservice_select_layer_style:"Choose style",map_control_tool_prev_tooltip:"Go to previous view",map_control_tool_next_tooltip:"Go to next view in on navigation history",map_control_navigate_tool_tooltip:"Navigate",map_control_zoom_tool_tooltip:"Zoom In",map_control_measure_menu_tooltip:"Select measure tool",map_control_measure_tool_tooltip:"Measure length",map_control_measure_area_tool_tooltip:"Measure area",mapcontrolsservice_info_group_title:"Select info tool",mapcontrolsservice_show_info_tool_title:"Show info",mapcontrolsservice_show_coordinates_tool_title:"Show coordinates",mapcontrolsservice_add_group_title:"Select add tool",mapcontrolsservice_add_point_tool_title:"Add point",mapcontrolsservice_add_line_tool_title:"Add route",mapcontrolsservice_add_area_tool_title:"Add area",map_control_map_link_tool_tooltip:"Establish a link to the map",mapcontrolsservice_save_and_print_group_title:"Select save or print tool",mapcontrolsservice_save_tool_title:"Save",map_control_print_tool_tooltip:"Print",mapcontrolsservice_mappublisher_tool_title:"Start map publisher",mapcontrolsservice_zoomlevel_street_title:"Street",mapcontrolsservice_zoomlevel_part_of_a_town_title:"Part of town",mapcontrolsservice_zoomlevel_town_title:"Town",mapcontrolsservice_zoomlevel_province_title:"Province",mapcontrolsservice_zoomlevel_country_title:"Country",map_control_full_screen_tool_tooltip:"Maximize/minimize map",mapcontrolsservice_measure_length_title:"Distance",mapcontrolsservice_measure_area_title:"Area",mapcontrolsservice_layer_info_layer_not_selected_messagebox_title:"No map layer selected",mapcontrolsservice_layer_info_layer_not_selected_messagebox_message:"Choose one map layer among those added to the map by clicking it.",mapcontrolsservice_not_found_wms_feature_info:"No info found",mapcontrolsservice_maplink_tool_title:"Establish a link to the visible map",mapcontrolsservice_getting_WMS_info_title:"Searching feature information...",mapcontrolsservice_indexmap_title:"Show/hide index map",mapcontrolsservice_start_network_service_tool_title:"Open maintenance service",mapcontrolsservice_problem_with_safari_printing_title:"Problem with printing",mapcontrolsservice_problem_with_safari_printing_message:"Paikkatietoikkuna doesn't support the printing of transparent maps on web browser Safari. Printing transparent maps is supported on the following browsers: Internet Explorer, Firefox, Opera and Chrome. You can adjust the transparency value in all maps up to 100% and reprint or alternatively create a new link in the current view and open the link with a browser that enables the printing of transparent maps.",searchservice_search_cannot_be_empty:"Search cannot be empty.",searchservice_search_alert_title:"Search",searchservice_search_not_found_anything_text:"Your search did not provide any results. Please check your spelling.",searchservice_search_result_column_name:"Name",searchservice_search_result_column_village:"Municipality",searchservice_search_result_column_type:"Type",searchservice_searching_title:"Searching...",maplinkservice_link_generated_messagebox_title:"Direct map link",maplinkservice_link_generated_messagebox_message:'Use this link to return directly to the view created. Location, scale, selected map layers, their transparency settings and selected styles are stored in the link.<br/><br/><textarea id="mapLinkTextarea" rows="2" cols="100">##0##</textarea>',maplinkservice_link_generation_failed_messagebox_title:"The link could not be established",maplinkservice_link_generation_failed_messagebox_message:"An error occurred when establishing the link. Try again. If the problem cannot be solved, please contact the service support.",published_map_search_textbox_value:"Find places",published_map_search_button_value:"Find",published_map_is_empty:"<p>No maps or background maps are selected for the published map.</p><p>Start by selecting a map on the left.</p>",published_map_exceeded_limit:"You have exceeded the allowed amount of service requests. It is still possible to open",published_map_exceeded_limit_link_text:"the map at Paikkatietoikkuna",published_map_terms_of_use:"Terms of Use",map_move_and_draw_module_select_searc_area_title:"Define search area",wizard_module_confirm_close_button_value:"Close",wizard_module_confirm_cancel_button_value:"Cancel",wizard_service_module_confirm_message_title:"Close the definition?",wizard_service_module_confirm_message:"<br>You are about to close the definition without saving your changes.<br>Do you want to close the definition?<br><br>",wizard_module_previous_button_value:"Previous",wizard_module_next_button_value:"Next",wizard_module_progressbar_start_value:"Phase",wizard_module_progressbar_end_value:"definition",wizard_module_save_button_value:"Save",status_wfs_update_grid:"Updating table...",status_update_map:"Updating map",status_search:"Searching...",status_get_feature_info:"Searching feature attributes...",status_multiple_tasks_running:"tasks in queue",status_tooltip_header:"Mode",search_module_popup_layer_is_wfs_title:"Selected map layer is data product",selected_layers_module_highlight_wms_layer:"Activate to view feature information",selected_layers_module_highlight_wfs_layer:"Open attribute table",selected_layers_module_dim_wms_layer:"Stop viewing feature information",selected_layers_module_dim_wfs_layer:"Close feature attribute table",selected_layers_module_wfs_icon_tooltip:"Data product",selected_layers_module_collapse_panel_tooltip:"Hide transparency and style adjustment",selected_layers_module_expand_panel_tooltip:"Show transparency and style adjustment",grid_module_not_found_info_for_selected_area:"No information found on the map area.",grid_module_loading_info:"Loading...",grid_module_wfs_maplayer_not_visible_this_scale:"Data product is not available in this scale. Zoom in (+) or zoom out (-) the map.",grid_module_gridpanel_title:"Feature types for data product {0}",grid_module_gridpanel_no_title:"No data product",grid_module_feature_type_title:"Feature type",grid_module_all_tab_title:"All",grid_module_featuretype_tab_tooltip:"Feature type information",grid_module_all_tab_tooltip:"Information about all feature types of data product",grid_module_column_header_tooltip:"Sort according to attribute value",overlay_popup_module_close_button_text:"Close",selected_layers_module_published_basemaps_title:"Julkaistavat taustakartat",selected_layers_module_published_maps_title:"Julkaistavat kartat"},sv:{launcher_failed_to_initialize_map_messagebox_title:"Initieringen av kartan misslyckades",launcher_failed_to_initialize_map_messagebox_message:"L\u00E4nken du anv\u00E4nde f\u00F6r att initiera kartan \u00E4r felaktig. Kontrollera att l\u00E4nken har bildats med l\u00E4nkverktyget i kartf\u00F6nstret och att l\u00E4nkens adress \u00E4r kopierad i sin helhet som",mapapplication_show_or_hide_menu_bar:"D\u00F6lj/Visa menyn",mapapplication_show_or_hide_table_bar:"D\u00F6lj/Visa tabellen",mapapplication_hide_menu_bar:"D\u00F6lj menyn",search_cannot_be_empty:"Mata in s\u00F6kordet i s\u00F6kf\u00E4ltet",search_failure_messagebox_title:"S\u00F6kfel",search_failure_messagebox_message:"S\u00F6kningen lyckas inte f\u00F6r tillf\u00E4llet. F\u00F6rs\u00F6k igen senare.",search_published_map_no_results:"Inga tr\u00E4ff",search_published_map_too_many_results:"\u00F6ver 100 tr\u00E4ffar, avgr\u00E4nsa s\u00F6kningen.",leftpanel_maplevels_title:"KARTLAGER",leftpanel_organisation_title:"Organisation",leftpanel_thema_title:"Tema",leftpanel_own_maps_title:"Mina kartor",leftpanel_selected_layers_title:"Valda kartlager",leftpanel_new_window_title:"Nytt f\u00F6nster",leftpanel_empty_own_maps_content:"Inga egna kartor",leftpanel_find_maplayers_value:"S\u00F6k kartlager",leftpanel_tree_menu_tooltip:"V\u00E4lj sorteringss\u00E4tt f\u00F6r kartlagren.",leftpanel_filter_button_tooltip:"Tillbaka till den f\u00F6rvalda f\u00F6rteckningen \u00F6ver kartlager.",leftpanel_add_layer:"Tills\u00E4tt kartlager",leftpanel_style:"Stil:",rightpanel_search_find_places_textbox_value:"S\u00F6k plats/adress",rightpanel_search_find_places_button_value:"S\u00F6k","rightpanel-searchresults-close_button_value":"St\u00E4ng s\u00F6kresultat",rightpanel_wms_getfeatureinfo_button_value:"St\u00E4ng",rightpanel_material_description_title:"Materialbeskrivning",rightpanel_material_schema_title:"Dataproduktens schema",rightpanel_material_legend_title:"F\u00F6rklaringen",rightpanel_wms_getfeatureinfo_title:"Egenskapsuppgifter",rightpanel_map_layer_have_not_description:"F\u00F6rklaringen f\u00F6r kartan hittas inte.",rightpanel_map_layer_have_not_schema:"Dataproduktens schemauppgifter hittas inte.",rightpanel_info_panel_close_button_title:"St\u00E4ng info",rightpanel_wms_getfeatureinfo_not_supported_txt:"F\u00F6rfr\u00E5gan om egenskapsuppgifter st\u00F6ds inte f\u00F6r den valda kartan",mapservice_basemap_show_info_title:"Visa information om bakgrundskartan",mapservice_basemap_delete_title:"Radera bakgrundskartan",mapservice_layer_show_info_title:"Visa information om kartlager",mapservice_layer_delete_title:"Radera kartlager",mapservice_layer_is_not_visible_in_this_scale_zoomin_map_title:"Kartlagret kan inte visas i denna skala. Zooma in (+) kartan.",mapservice_layer_is_not_visible_in_this_scale_zoomout_map_title:"Kartlagret kan inte visas i denna skala. Zooma ut (-) kartan.",mapservice_not_found_legend_image:"F\u00F6rklaringar f\u00F6r kartan hittas inte",mapservice_change_layer_opacity_tooltip:"Justera kartlagrets genomsynlighet",mapservice_basemap_image_tooltip:"Bakgrundskarta",mapservice_maplayer_image_tooltip:"Kartlager",mapservice_published_error_params:"Fel i den avskiljda kartans parametrar, var god och kontakta denna webbplats underh\u00E5ll.",mapservice_select_layer_style:"V\u00E4lj stil",map_control_tool_prev_tooltip:"G\u00E5 tillbaka i navigeringshistorien",map_control_tool_next_tooltip:"G\u00E5 fram\u00E5t i navigeringshistorien",map_control_navigate_tool_tooltip:"Navigera eller v\u00E4lj",map_control_zoom_tool_tooltip:"Zooma in p\u00E5 det \u00F6nskade omr\u00E5det genom att gr\u00E4nsa omr\u00E5det med att h\u00E5lla musens v\u00E4nstra knapp nedtryckt",map_control_measure_menu_tooltip:"V\u00E4lj m\u00E4tverktyg",map_control_measure_tool_tooltip:"M\u00E4t avst\u00E5nd",map_control_measure_area_tool_tooltip:"M\u00E4t areal",mapcontrolsservice_info_group_title:"V\u00E4lj verktyg f\u00F6r att visa uppgifter",mapcontrolsservice_show_info_tool_title:"Visa objektets uppgifter",map_control_map_link_tool_tooltip:"Bilda l\u00E4nk p\u00E5 kartan",mapcontrolsservice_show_coordinates_tool_title:"Visa koordinaterna",mapcontrolsservice_add_group_title:"V\u00E4lj anteckningsverktyg",mapcontrolsservice_add_point_tool_title:"Tills\u00E4tt punkt",mapcontrolsservice_add_line_tool_title:"Tills\u00E4tt rutt",mapcontrolsservice_add_area_tool_title:"Tills\u00E4tt omr\u00E5de",mapcontrolsservice_save_and_print_group_title:"V\u00E4lj verktyget Spara eller Skriv ut",mapcontrolsservice_save_tool_title:"Spara",map_control_print_tool_tooltip:"Skriv ut",mapcontrolsservice_mappublisher_tool_title:"Till publicering av kartan",mapcontrolsservice_zoomlevel_street_title:"Gata",mapcontrolsservice_zoomlevel_part_of_a_town_title:"Stadsdel",mapcontrolsservice_zoomlevel_town_title:"Kommun",mapcontrolsservice_zoomlevel_province_title:"Landskap",mapcontrolsservice_zoomlevel_country_title:"Hela landet",map_control_full_screen_tool_tooltip:"F\u00F6rstora/f\u00F6rminska kartan p\u00E5 hela bildsk\u00E4rmen",mapcontrolsservice_measure_length_title:"Avst\u00E5nd",mapcontrolsservice_measure_area_title:"Areal",mapcontrolsservice_layer_info_layer_not_selected_messagebox_title:"Du har inte valt kartlager",mapcontrolsservice_layer_info_layer_not_selected_messagebox_message:"V\u00E4lj ett av kartlagren som tillagts p\u00E5 kartan genom att klicka det.",mapcontrolsservice_not_found_wms_feature_info:"Info hittas inte",mapcontrolsservice_maplink_tool_title:"Skapa l\u00E4nk till synliga kartan",mapcontrolsservice_getting_WMS_info_title:"S\u00F6ker egenskapsuppgifter...",mapcontrolsservice_indexmap_title:"Visa/d\u00F6lj positioneringskarta",mapcontrolsservice_start_network_service_tool_title:"\u00D6ppna underh\u00E5llstj\u00E4nst",mapcontrolsservice_problem_with_safari_printing_title:"Problem med utskrivningen",mapcontrolsservice_problem_with_safari_printing_message:"Paikkatietoikkuna st\u00F6der inte utskrivningen av genomskinliga kartor p\u00E5 webbl\u00E4saren Safari. Utskrivningen av genomskinliga kartor st\u00F6ds p\u00E5 webbl\u00E4sarna Internet Explorer, Firefox, Opera och Chrome. Du kan justera alla kartornas genomskinlighetsv\u00E4rde upp till 100 % och skriva ut p\u00E5 nytt eller alternativt skapa en ny l\u00E4nk i den nuvarande vyn och \u00F6ppna l\u00E4nken med en webbl\u00E4sare som m\u00F6jligg\u00F6r utskrivningen av genomskinliga kartor.",searchservice_search_cannot_be_empty:"Mata in s\u00F6kordet i s\u00F6kf\u00E4ltet.",searchservice_search_alert_title:"S\u00F6k",searchservice_search_not_found_anything_text:"Ditt s\u00F6kord gav inga resultat. Kontrollera att du s\u00E4kert skrev s\u00F6kordet p\u00E5 r\u00E4tt s\u00E4tt.",searchservice_search_result_column_name:"Namn",searchservice_search_result_column_village:"Kommun",searchservice_search_result_column_type:"Typ",searchservice_searching_title:"S\u00F6ker...",maplinkservice_link_generated_messagebox_title:"Direkt kartl\u00E4nk",maplinkservice_link_generated_messagebox_message:'Med l\u00E4nken kommer du direkt tillbaka till den vy du skapat. L\u00E4nken omfattar l\u00E4get, skalan, valda kartlager, deras inst\u00E4llningar f\u00F6r genomsynlighet samt valda stilar.<br/><br/><textarea id="mapLinkTextarea" rows="2" cols="100">##0##</textarea>',maplinkservice_link_generation_failed_messagebox_title:"L\u00E4nkskapandet misslyckades",maplinkservice_link_generation_failed_messagebox_message:"Ett fel intr\u00E4ffade i samband med l\u00E4nkskapandet. F\u00F6rs\u00F6k skapa l\u00E4nken p\u00E5 nytt om en stund. Om problemet upprepas, var god och kontakta underh\u00E5llet.",published_map_search_textbox_value:"S\u00F6k plats/adress",published_map_search_button_value:"S\u00F6k",published_map_is_empty:"<p>Du har inte valt karta eller bakgrundskarta f\u00F6r kartan som du publicerat.</p><p>B\u00F6rja med att v\u00E4lja en karta till v\u00E4nster.</p>",published_map_exceeded_limit:"Det till\u00E5tna antalet framst\u00E4llningar har \u00F6verskridits. Du kan \u00E4nd\u00E5 \u00F6ppna",published_map_exceeded_limit_link_text:"kartan p\u00E5 Paikkatietoikkuna",published_map_terms_of_use:"Anv\u00E4ndningsvillkor",map_move_and_draw_module_select_searc_area_title:"Begr\u00E4nsa s\u00F6komr\u00E5det",wizard_module_confirm_close_button_value:"St\u00E4ng",wizard_module_confirm_cancel_button_value:"Annullera",wizard_service_module_confirm_message_title:"St\u00E4ng definitionen?",wizard_service_module_confirm_message:"<br>Du h\u00E5ller p\u00E5 att st\u00E4nga definitionen utan att spara dina \u00E4ndringar.<br>Vill du st\u00E4nga definitionen?<br><br>",wizard_module_previous_button_value:"F\u00F6reg\u00E5ende",wizard_module_next_button_value:"N\u00E4sta",wizard_module_progressbar_start_value:"Fas",wizard_module_progressbar_end_value:"definition",wizard_module_save_button_value:"Spara",status_wfs_update_grid:"Uppdaterar tabellen...",status_update_map:"Uppdaterar kartan",status_search:"S\u00F6ker...",status_get_feature_info:"S\u00F6ker egenskapsuppgifter...",status_multiple_tasks_running:"uppdrag i k\u00F6",status_tooltip_header:"L\u00E4ge",search_module_popup_layer_is_wfs_title:"Valda kartlagret \u00E4r dataprodukt",selected_layers_module_highlight_wms_layer:"Aktivera f\u00F6r att l\u00E4sa objektuppgifter",selected_layers_module_highlight_wfs_layer:"\u00D6ppna objektuppgiftstabellen",selected_layers_module_dim_wms_layer:"Avbryt att visa objektuppgifter",selected_layers_module_dim_wfs_layer:"St\u00E4ng objektuppgiftstabellen",selected_layers_module_wfs_icon_tooltip:"Dataprodukt",selected_layers_module_collapse_panel_tooltip:"D\u00F6lj justering av stil och genomsynlighet",selected_layers_module_expand_panel_tooltip:"Vis justering av stil och genomsynlighet",grid_module_not_found_info_for_selected_area:"Information p\u00E5 kartomr\u00E5det hittas inte.",grid_module_loading_info:"Laddar...",grid_module_wfs_maplayer_not_visible_this_scale:"Dataprodukten \u00E4r inte tillg\u00E4nglig i denna skala. Zooma in (+) eller zooma ut (-) kartan.",grid_module_gridpanel_title:"Objekttyperna f\u00F6r dataprodukten {0}",grid_module_gridpanel_no_title:"Ingen dataprodukt",grid_module_feature_type_title:"Objekttyp",grid_module_all_tab_title:"Alla",grid_module_featuretype_tab_tooltip:"Uppgifter om objekttyp",grid_module_all_tab_tooltip:"Uppgifter om dataproduktens alla objekttyper",grid_module_column_header_tooltip:"Sortera enligt v\u00E4rdet p\u00E5 egenskapsuppgift",overlay_popup_module_close_button_text:"St\u00E4ng",selected_layers_module_published_basemaps_title:"Julkaistavat taustakartat",selected_layers_module_published_maps_title:"Julkaistavat kartat"}},get:function(a,d){var b=this.currentLanguage;
var c=this.languageProperties[b][a];if(c===null){return"undefined key '"+a+"' for language '"+b+"'"}else{if(d){c=this.formatMessage(c,d)}return c}},formatMessage:function(d,c){var b=d;for(var a in c){b=b.replace("{"+a+"}",c[a])}return b},showPopup:function(a,f,b){var g=this.get(a);var e=this.get(f);if(b!=null){for(var d=0;d<b.length;d++){var c="##"+d+"##";e=e.replace(c,b[d])}}Ext.Msg.show({title:g,msg:e,buttons:Ext.Msg.OK})},isFiCurrentLanguage:function(){return(this.currentLanguage=="fi")},isSvCurrentLanguage:function(){return(this.currentLanguage=="sv")},isEnCurrentLanguage:function(){return(this.currentLanguage=="en")},getLanguage:function(){return this.currentLanguage}},{protocol:["Oskari.mapframework.service.Service"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.DefaultSearchServiceBundleInstance",function(a){this.name="searchservice";this.mediator=null;this.sandbox=null;this.impl=null;this.ui=null},{createPanel:function(){var c=this;var a=c.libs.ext;var b=a.create("Ext.Panel",{region:"center",layout:"fit",height:384,items:[]});return b},start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");this.impl=Oskari.clazz.create("Oskari.mapframework.ui.module.searchservice.SearchModule");var a=this.createPanel();var b=this.facade.appendExtensionModule(this.impl,this.name,{},this,"E",{fi:{title:"Haku"},sv:{title:"?"},en:{title:"Haku"}},a);this.def=b;a.add(b.initialisedComponent);this.impl.start(this.facade.getSandbox());this.mediator.setState("started");return this},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.impl.eventHandlers,this,this.def);this.def=null;this.impl=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.DefaultSearchServiceBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});Oskari.clazz.define("Oskari.mapframework.ui.module.searchservice.SearchModule",function(){this._sandbox=null;this.uiItems={}},{__name:"SearchModule",getName:function(){return this.__name},init:function(j){this._sandbox=j;var k=j;var h=this;k.printDebug("[SearchModule] Init");Ext.define("Search",{extend:"Ext.data.Model",fields:["name","village","type",{name:"lat",convert:function(m,l){var n=l.raw.lat;return n}},{name:"lon",convert:function(m,l){var n=l.raw.lon;return n}},{name:"zoomLevel",convert:function(m,l){var n=l.raw.zoomLevel;return n}},{name:"name",convert:function(m,l){var n=l.raw.name;return n}}]});var i=Ext.create("Ext.Button",{id:"search-button",style:"border: 1px solid #9D9D9D;",text:k.getText("rightpanel_search_find_places_button_value"),handler:function(){f()}});this.uiItems.searchButton=i;var c=Ext.create("Ext.Button",{id:"search-clear-button",style:"border: 1px solid #9D9D9D;",icon:Oskari.$().startup.imageLocation+"/resource/icons/poisto.png",handler:function(){e()}});this.uiItems.clearButton=c;var a=Ext.create("Ext.form.field.Text",{id:"mapwindow-search",emptyText:k.getText("rightpanel_search_find_places_textbox_value"),flex:1,autoCreate:{tag:"input",type:"text",autocomplete:"off"},enableKeyEvents:true,listeners:{focus:function(l){k.request("SearchModule",k.getRequestBuilder("DisableMapKeyboardMovementRequest")())},keyup:function(m,l){if(l.keyCode==13){f()}},blur:function(l){k.request("SearchModule",k.getRequestBuilder("EnableMapKeyboardMovementRequest")())}}});this.uiItems.searchTextBox=a;var d=Ext.create("Ext.Panel",{id:"SearchModuleResultPanel",layout:"fit"});this.uiItems.resultPanel=d;var b=k.getText("searchservice_searching_title");function e(){d.setLoading(false);d.removeAll(true);i.enable();a.enable();a.reset();a.enable();var l=Oskari.$().mapframework.runtime.findSandbox();var m=l.getEventBuilder("SearchClearedEvent")();l.notifyAll(m,true)}function f(){d.removeAll(true);i.disable();a.disable();d.setLoading(b);var o=a.getValue();var l=Oskari.$().mapframework.runtime.findSandbox();var n=function(p){Oskari.$().mapframework.runtime.findComponent("SearchModule").showResults(p)};var m=l.getRequestBuilder("SearchRequest")(encodeURIComponent(o),n,null);l.request("SearchModule",m)}var g=Ext.create("Ext.Panel",{layout:"fit",title:k.getText("searchservice_search_alert_title"),id:"SearchModule",items:[this.uiItems.resultPanel],dockedItems:[{xtype:"toolbar",dock:"top",items:[this.uiItems.searchTextBox,this.uiItems.searchButton,this.uiItems.clearButton]}],border:false,frame:false});this.uiItems.searchModulePanel=g;return g},start:function(a){a.printDebug("Starting "+this.getName())},stop:function(a){},showResults:function(e){this.uiItems.searchButton.enable();this.uiItems.searchTextBox.enable();this.uiItems.resultPanel.setLoading(false);
var a=this._sandbox;a.request(this,a.getRequestBuilder("ActionReadyRequest")("SEARCH",false));if(e.totalCount==-1){Ext.Msg.alert(a.getText("searchservice_search_alert_title"),e.errorText)}else{if(e.totalCount==0){Ext.Msg.alert(a.getText("searchservice_search_alert_title"),a.getText("searchservice_search_not_found_anything_text"))}else{var d=e;var b=Ext.create("Ext.data.Store",{model:"Search",autoLoad:true,pageSize:15,remoteSort:true,proxy:{type:"pagingmemory",data:e,reader:{type:"json",root:"locations",totalProperty:"totalCount"}}});if(d.totalCount==1){this._sendMapMove(d.locations[0].lon,d.locations[0].lat,d.locations[0].zoomLevel)}var c=Ext.create("Ext.grid.Panel",{renderTo:Ext.getBody(),store:b,layout:"fit",flex:1,displayInfo:false,columns:[{text:a.getText("searchservice_search_result_column_name"),dataIndex:"name",width:80,flex:2,renderer:this._renderLink,sortable:true},{text:a.getText("searchservice_search_result_column_village"),dataIndex:"village",width:60,flex:2,renderer:this._renderVillage,sortable:true},{text:a.getText("searchservice_search_result_column_type"),dataIndex:"type",width:55,flex:1,sortable:true}],dockedItems:[{xtype:"pagingtoolbar",store:b,dock:"bottom",hidden:d.totalCount<15,displayInfo:false}]});this.uiItems.resultPanel.add(c)}}},_sendMapMove:function(c,b,a){this._sandbox.request(this.getName(),this._sandbox.getRequestBuilder("MapMoveRequest")(c,b,a,true))},_renderLink:function(b,c,a){return"<b><a href=\"#\" onclick=\"Oskari.$().sandbox.requestByName('SearchModule', 'MapMoveRequest',["+a.data.lon+","+a.data.lat+","+a.data.zoomLevel+',true]);return false;">'+a.data.name+"</a>"},_renderVillage:function(b,c,a){this.village=a.data.village;return this.village},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.ui.module.searchservice.MetadataModule",function(){this._sandbox=null;this.uiItems={}},{__name:"MetadataModule",getName:function(){return this.__name},init:function(d){this._sandbox=d;var a=d;a.printDebug("Initializing metadata module...");a.registerForEventByName(this,"AfterShowMapLayerInfoEvent");a.registerForEventByName(this,"AfterGetFeatureInfoEvent");a.registerForEventByName(this,"AfterAppendFeatureInfoEvent");var c=Ext.create("Ext.Panel",{autoScroll:true,layout:"fit"});this.uiItems.resultPanel=c;var b=Ext.create("Ext.Panel",{layout:"fit",id:"MetadataModule",title:a.getText("rightpanel_material_legend_title"),items:[this.uiItems.resultPanel],border:false,frame:false});this.uiItems.metadataModulePanel=b;return b},start:function(a){a.printDebug("Starting "+this.getName())},stop:function(a){},afterShowMapLayerInfoEvent:function(c){this.uiItems.resultPanel.update("");this.uiItems.resultPanel.removeAll();var b=c.getMapLayer();var a=this._sandbox;var d=a.getText("rightpanel_map_layer_have_not_description");if(b.getLegendImage&&b.getLegendImage()){d='<img src="'+b.getLegendImage()+'" alt="'+b.getName()+'" />'}else{if(b.getCurrentStyle&&b.getCurrentStyle().getLegend()){d='<img src="'+b.getCurrentStyle().getLegend()+'" alt="'+b.getName()+'" />'}}this.uiItems.resultPanel.update(d);Oskari.$("UI.facade").expandPart("E");this.uiItems.metadataModulePanel.expand(true)},afterGetFeatureInfoEvent:function(c){this.uiItems.resultPanel.removeAll();var b=c.getResponse();var a=this._sandbox;if(b==true){var d=Ext.create("Ext.Panel",{title:"<b>"+a.getText("rightpanel_wms_getfeatureinfo_title")+"</b>",id:"inner_feature_info_panel",layout:"fit",autoScroll:true});this.uiItems.metadataModulePanel.innerInfoPanel=d;this.uiItems.resultPanel.add(d);this.uiItems.metadataModulePanel.expand(true)}else{if(c.isWfsSelected()==true){a.showPopupText("search_module_popup_layer_is_wfs_title","search_module_popup_layer_is_wfs_message")}else{a.showPopupText("mapcontrolsservice_layer_info_layer_not_selected_messagebox_title","mapcontrolsservice_layer_info_layer_not_selected_messagebox_message")}}},afterAppendFeatureInfoEvent:function(c){var b="<h3>"+c.getHeader()+"</h3>";var d=c.getMessage();if(d.startsWith("{parsed: {")){var e=Ext.decode(d);
if(e&&e.parsed){d=this._formatJsonGFI(e.parsed)}}d='<div style="padding: 5px; font: 11px Tahoma, Arial, Helvetica, sans-serif;">'+d+"</div>";this.uiItems.metadataModulePanel.innerInfoPanel.update(b+d);var a=this._sandbox;a.request(this,a.getRequestBuilder("ActionReadyRequest")("GET_FEATURE_INFO",false))},_formatJsonGFI:function(b){var a="<br/><table>";var d=false;for(attr in b){var c=b[attr];if(c.startsWith("http://")){c='<a href="'+c+'" target="_blank">'+c+"</a>"}a=a+'<tr style="padding: 5px;';if(!d){a=a+" background-color: #EEEEEE"}d=!d;a=a+'"><td style="padding: 2px">'+attr+'</td><td style="padding: 2px">'+c+"</td></tr>"}return a+"</table>"},eventHandlers:{AfterShowMapLayerInfoEvent:function(a){this.afterShowMapLayerInfoEvent(a)},AfterGetFeatureInfoEvent:function(a){this.afterGetFeatureInfoEvent(a)},AfterAppendFeatureInfoEvent:function(a){this.afterAppendFeatureInfoEvent(a)}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])}},{protocol:["Oskari.mapframework.module.Module"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.search.service.SearchService",function(a){this._searchUrl=a},{__qname:"Oskari.mapframework.bundle.search.service.SearchService",getQName:function(){return this.__qname},__name:"SearchService",getName:function(){return this.__name},doSearch:function(a,d,b){var c=Oskari.getLang();jQuery.ajax({dataType:"json",type:"POST",beforeSend:function(e){if(e&&e.overrideMimeType){e.overrideMimeType("application/json")}},url:this._searchUrl,data:"searchKey="+a+"&Language="+c,error:b,success:d})}},{protocol:["Oskari.mapframework.service.Service"]});Oskari.clazz.define("Oskari.mapframework.bundle.search.SearchBundleInstance",function(){this.sandbox=null;this.started=false;this.plugins={};this.localization=null;this.service=null},{__name:"Search",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization(this.getName())}if(a){return this._localization[a]}return this._localization},start:function(){var d=this;if(d.started){return}d.started=true;var a=Oskari.$("sandbox");d.sandbox=a;this.localization=Oskari.getLocalization(this.getName());var c=null;if(this.conf&&this.conf.url){c=this.conf.url}else{c=a.getAjaxUrl()+"action_route=GetSearchResult"}this.service=Oskari.clazz.create("Oskari.mapframework.bundle.search.service.SearchService",c);a.register(d);for(p in d.eventHandlers){a.registerForEventByName(d,p)}var b=a.getRequestBuilder("userinterface.AddExtensionRequest")(this);a.request(this,b);d.createUi()},init:function(){return null},update:function(){},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{},stop:function(){var a=this.sandbox();for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}var b=a.getRequestBuilder("userinterface.RemoveExtensionRequest")(this);a.request(this,b);this.sandbox.unregister(this);this.started=false},startExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=Oskari.clazz.create("Oskari.mapframework.bundle.search.Flyout",this);this.plugins["Oskari.userinterface.Tile"]=Oskari.clazz.create("Oskari.mapframework.bundle.search.Tile",this)},stopExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=null;this.plugins["Oskari.userinterface.Tile"]=null},getPlugins:function(){return this.plugins},getTitle:function(){return this.getLocalization("title")},getDescription:function(){return this.getLocalization("desc")},createUi:function(){var a=this;this.plugins["Oskari.userinterface.Flyout"].createUi();this.plugins["Oskari.userinterface.Tile"].refresh()}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.userinterface.Extension"]});Oskari.clazz.define("Oskari.mapframework.bundle.search.Flyout",function(a){this.instance=a;this.container=null;this.state=null;this.template=null;this.templateResultTable=null;this.templateResultTableHeader=null;this.templateResultTableRow=null;this.resultHeaders=[];this.lastResult=null;this.lastSort=null},{getName:function(){return"Oskari.mapframework.bundle.search.Flyout"},setEl:function(c,b,a){this.container=c[0];if(!jQuery(this.container).hasClass("search")){jQuery(this.container).addClass("search")}},startPlugin:function(){this.template=jQuery('<div class="searchContainer"><div class="controls"><input class="search_field" type="text" name="search" /><input class="search_button" type="button" name="btn_find" /></div><div><br></div><div class="info"></div><div><br></div><div class="resultList"></div></div>');this.templateResultTable=jQuery('<table class="search_result"><thead><tr></tr></thead><tbody></tbody></table>');this.templateResultTableHeader=jQuery('<th><a href="JavaScript:void(0);"></a></th>');this.templateResultTableRow=jQuery('<tr><td><a href="JavaScript:void(0);"></a></td><td></td><td></td></tr>');this.resultHeaders=[{title:"Nimi",prop:"name"},{title:"Kyl채",prop:"village"},{title:"Tyyppi",prop:"type"}]},stopPlugin:function(){},getTitle:function(){return this.instance.getLocalization("title")
},getDescription:function(){return this.instance.getLocalization("desc")},getOptions:function(){},setState:function(a){this.state=a;console.log("Flyout.setState",this,a)},createUi:function(){var e=this;var b=e.instance.getSandbox();var a=jQuery(this.container);a.empty();var h=this.template.clone();var f=h.find("input[name=search]");this._bindClearButton(f);var d=function(){f.attr("disabled","disabled");c.attr("disabled","disabled");var i=h.find("div.resultList");i.empty();e.instance.service.doSearch(f.val(),function(j){f.removeAttr("disabled");c.removeAttr("disabled");e._renderResults(j,f.val())},function(j){f.removeAttr("disabled");c.removeAttr("disabled");alert("vihre!")})};var c=h.find("input[name=btn_find]");var g=this.instance.getLocalization("searchButton");c.val(g);c.bind("click",d);f.keypress(function(i){if(i.which==13){d()}});a.append(h)},_bindClearButton:function(a){var b=jQuery('<div style="margin-left: 0px; position: relative; display: inline-block; left: -20px; top: 3px;"><img src="/Oskari/applications/paikkatietoikkuna.fi/full-map/icons/icon-close.png"/></div>');b.bind("click",function(){a.val("");a.trigger("keyup")});a.after(b)},_renderResults:function(m,c){if(!m||!m.totalCount){return}var d=jQuery(this.container).find("div.resultList");this.lastResult=m;var j=this;var a=jQuery(this.container).find("div.info");a.empty();if(m.totalCount==-1){d.append("searchservice_search_alert_title: "+m.errorText);return}else{if(m.totalCount==0){d.append(this.instance.getLocalization("searchservice_search_alert_title")+":"+this.instance.getLocalization("searchservice_search_not_found_anything_text"));return}else{a.append(this.instance.getLocalization("searchResultCount")+m.totalCount+this.instance.getLocalization("searchResultDescription"))}}if(m.totalCount==1){j._resultClicked(m.locations[0]);this.instance.sandbox.postRequestByName("userinterface.UpdateExtensionRequest",[j.instance,"close"])}var l=this.templateResultTable.clone();var e=l.find("thead tr");var b=l.find("tbody");var h=function(i){return function(){b.empty();var o=false;if(j.lastSort&&j.lastSort.attr==i.prop){o=!j.lastSort.descending}j._sortResults(i.prop,o);j._populateResultTable(b);var n=e.find("a:contains("+i.title+")");e.find("th").removeClass("asc");e.find("th").removeClass("desc");if(o){n.parent().addClass("desc")}else{n.parent().addClass("asc")}}};for(var f=0;f<this.resultHeaders.length;++f){var g=this.templateResultTableHeader.clone();var k=g.find("a");k.append(this.resultHeaders[f].title);k.bind("click",h(this.resultHeaders[f]));e.append(g)}this._populateResultTable(b);d.append("<div><h3>Tulokset:"+m.totalCount+" hakutulosta haulla "+c+"</h3></div>");d.append(l)},_populateResultTable:function(b){var e=this;var a=function(i){return function(){e._resultClicked(i)}};var d=this.lastResult.locations;for(var c=0;c<d.length;++c){var k=d[c];var g=this.templateResultTableRow.clone();var j=g.find("td");var h=jQuery(j[0]);var f=h.find("a");f.append(k.name);f.bind("click",a(k));jQuery(j[1]).append(k.village);jQuery(j[2]).append(k.type);b.append(g)}},_resultClicked:function(a){var f=this;var c="searchResultPopup";var b=this.instance.sandbox;var g=this.instance.sandbox.getRequestBuilder("MapMoveRequest");b.request(f.instance.getName(),g(a.lon,a.lat,a.zoomLevel,false));var e=[{html:"<h3>"+a.name+"</h3><p>"+a.village+"<br/>"+a.type+"</p>",actions:{Sulje:function(){var h=b.getRequestBuilder("InfoBox.HideInfoBoxRequest")(c);b.request(f.instance.getName(),h)}}}];var d=b.getRequestBuilder("InfoBox.ShowInfoBoxRequest")(c,"Hakutulos",e,new OpenLayers.LonLat(a.lon,a.lat),true);b.request(this.instance.getName(),d)},_sortResults:function(c,a){var b=this;if(!this.lastResult){return}this.lastSort={attr:c,descending:a};this.lastResult.locations.sort(function(e,d){return b._searchResultComparator(e,d,c,a)})},_searchResultComparator:function(d,c,i,f){var g=d[i].toLowerCase();var e=c[i].toLowerCase();var h=0;if(g==e||"name"==i){g=d.id;e=c.id}if(g<e){h=-1}else{if(g>e){h=1}}if(f){h=h*-1}return h}},{protocol:["Oskari.userinterface.Flyout"]});Oskari.clazz.define("Oskari.mapframework.bundle.search.Tile",function(a){this.instance=a;
this.container=null;this.template=null},{getName:function(){return"Oskari.mapframework.bundle.search.Tile"},setEl:function(c,b,a){this.container=jQuery(c)},startPlugin:function(){this.refresh()},stopPlugin:function(){this.container.empty()},getTitle:function(){return this.instance.getLocalization("title")},getDescription:function(){return this.instance.getLocalization("desc")},getOptions:function(){},setState:function(a){console.log("Tile.setState",this,a)},refresh:function(){var f=this;var a=f.instance;var e=this.container;var d=this.template;var c=a.getSandbox();var b=e.children(".oskari-tile-status")}},{protocol:["Oskari.userinterface.Tile"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.category("Oskari.mapframework.sandbox.Sandbox","map-layer-methods",{findMapLayerFromAllAvailable:function(b){var a=this._core.findMapLayerFromAllAvailable(b);return a},findBaselayerBySublayerIdFromAllAvailable:function(b){var a=this._core.findBaselayerBySublayerIdFromAllAvailable(b);return a},findAllSelectedMapLayers:function(){var a=this._core.getAllSelectedLayers();return a.slice(0)},findMapLayerFromSelectedMapLayers:function(a){var b=this._core.findMapLayerFromSelectedMapLayers(a);return b},isLayerAlreadySelected:function(a){return this._core.isLayerAlreadySelected(a)},isWfsLayersSelected:function(){return this._core.isWfsLayersSelected()},findAllSelectedWFSMapLayers:function(){var a=this._core.getAllSelectedWfsLayers();return a},findAllHighlightedLayers:function(){var a=this._core.getAllHighlightedMapLayers();return a},isMapLayerHighLighted:function(c){var b=this.findAllHighlightedLayers();for(var a=0;a<b.length;a++){if(b[a].getId()==c){return true}}return false},allowMultipleHighlightLayers:function(a){this._core.allowMultipleHighlightLayers(a)}});Oskari.clazz.category("Oskari.mapframework.sandbox.Sandbox","map-methods",{getMap:function(){return this._core.getMap()},syncMapState:function(e,d){var b=this._core.getMap();var c=b.getZoom();var a=b.isMarkerVisible();if(e===true&&c==12){this._core.processRequest(this._core.getRequestBuilder("MapMoveRequest")(b.getX(),b.getY(),0,false))}this._core.processRequest(this._core.getRequestBuilder("MapMoveRequest")(b.getX(),b.getY(),c,a));if(e===true){this._core.processRequest(this._core.getRequestBuilder("ClearHistoryRequest")())}},isMapFullScreenMode:function(){return this._core.isMapFullScreenMode()},generatePublishedMapLinkToFinnishGeoportalPage:function(){return this._core.generatePublishedMapLinkToFinnishGeoportalPage()},doSniffing:function(a){if(!a){a=this._core.getAllSelectedLayers()}this._core.doSniffing(a)}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.sandbox.Sandbox",function(a){this._core=a;this._listeners=new Array();this._modules=new Array();this._modulesByName={};this._statefuls={};this.debugRequests=true;this.debugEvents=true;this.requestEventLog=[];this.requestEventStack=[];this.gatherDebugRequests=true;this.maxGatheredRequestsAndEvents=4096;this.requestAndEventGather=[];this._user=null;this._ajaxUrl=null},{disableDebug:function(){this.debugRequests=false;this.debugEvents=false;this.gatherDebugRequests=false},printDebug:function(a){this._core.printDebug(a)},setUser:function(a){this._user=Oskari.clazz.create("Oskari.mapframework.domain.User",a)},getUser:function(){if(!this._user){this.setUser()}return this._user},setAjaxUrl:function(a){this._ajaxUrl=a},getAjaxUrl:function(){return this._ajaxUrl},printWarn:function(a){this._core.printWarn(a)},getText:function(a,b){this._core.printDebug("sandbox.getText() is deprecated - Use new locale system instead");return this._core.getText(a,b)},getService:function(a){return this._core.getService(a)},showPopupText:function(a,c,b){return this._core.showPopupText(a,c,b)},registerAsStateful:function(b,a){this._statefuls[b]=a},unregisterStateful:function(a){this._statefuls[a]=null;delete this._statefuls[a]},getStatefulComponents:function(){return this._statefuls},register:function(a){this._modules.push(a);this._modulesByName[a.getName()]=a;this._core.registerFrameworkComponentToRuntimeEnvironment(a,a.getName());return a.init(this)},unregister:function(c){var b=[];for(var a=0;a<this._modules.length;a++){if(c===this._modules[a]){continue}b.push(this._modules[a])}this._modules=b;this._modulesByName[c.getName()]=undefined;this._core.unregisterFrameworkComponentFromRuntimeEnvironment(c,c.getName())},registerForEvent:function(c,d){var b=d.getName();this._core.printDebug("Sandbox is registering module '"+c.getName()+"' to event '"+b+"'");var a=this._listeners[b];if(a==null){a=new Array();this._listeners[b]=a}a.push(c);this._core.printDebug("There are currently "+a.length+" listeners for event '"+b+"'");delete d},registerForEventByName:function(c,b){this._core.printDebug("#*#*#* Sandbox is registering module '"+c.getName()+"' to event '"+b+"'");var a=this._listeners[b];if(a==null){a=new Array();this._listeners[b]=a}a.push(c);this._core.printDebug("There are currently "+a.length+" listeners for event '"+b+"'")},unregisterFromEvent:function(d,e){var c=e.getName();this._core.printDebug("Sandbox is unregistering module '"+d.getName()+"' from event '"+c+"'");var a=this._listeners[c];if(a==null){}var b=a.indexOf(d);if(b>-1){a.splice(b,1);this._core.printDebug("Module unregistered successfully from event")}else{this._core.printDebug("Module does not listen to that event, skipping.")}delete e},unregisterFromEventByName:function(e,c){this._core.printDebug("Sandbox is unregistering module '"+e.getName()+"' from event '"+c+"'");var a=this._listeners[c];if(a==null){}var b=-1;for(var f=0;f<a.length;f++){if(a[f]==e){b=f;break}}if(b>-1){a.splice(b,1);this._core.printDebug("Module unregistered successfully from event")}else{this._core.printDebug("Module does not listen to that event, skipping.")}},startModules:function(){var a=this._modules.length;for(var c=0;c<a;c++){var b=this._modules[c];b.start(this)}},getRequestBuilder:function(a){return this._core.getRequestBuilder(a)},getEventBuilder:function(a){return this._core.getEventBuilder(a)},eventLoopGuard:0,debugPushRequest:function(b,c){if(!this.debugRequests){return}var a={from:b,reqName:c.getName()};this.requestEventStack.push(a);this.requestEventLog.push(a);if(this.requestEventLog.length>64){this.requestEventLog.shift()}},debugPopRequest:function(){if(!this.debugRequests){return}this.requestEventStack.pop()},debugPushEvent:function(b,c,a){if(!this.debugEvents){return}this.eventLoopGuard++;if(this.eventLoopGuard>64){throw"Events Looped?"}var d={from:b,to:c.getName(),evtName:a.getName()};this.requestEventStack.push(d);this.requestEventLog.push(d);if(this.requestEventLog.length>64){this.requestEventLog.shift()}},debugPopEvent:function(){if(!this.debugEvents){return
}this.eventLoopGuard--;this.requestEventStack.pop()},ajax:function(c,g,b,a,e){if(Ext&&Ext.Ajax&&Ext.Ajax.request){Ext.Ajax.request({url:c,success:g,failure:b})}else{if(jQuery&&jQuery.ajax){var f=function(h){var i={responseText:h};g(i)};var d="GET";if(e){d="POST"}jQuery.ajax({type:d,url:c,beforeSend:function(h){if(h&&h.overrideMimeType){h.overrideMimeType("application/j-son;charset=UTF-8")}},success:f,error:b})}else{alert("Couldn't make ajax call")}}},request:function(b,c){var a=null;if(b.getName!=null){a=this.findRegisteredModule(b.getName())}else{a=this.findRegisteredModule(b)}if(a==null){throw"Attempt to create request with unknown component '"+b+"' as creator"}this._core.setObjectCreator(c,a);this.printDebug("Module '"+a+"' is requesting for '"+this.getObjectName(c)+"'...");if(this.gatherDebugRequests){this.pushRequestAndEventGather(a+"->Sandbox: ",this.getObjectName(c))}var d=null;this.debugPushRequest(a,c);d=this._core.processRequest(c);this.debugPopRequest();return d},requestByName:function(b,g,f){this.printDebug("#!#!#! --------------> requestByName "+g);var e=this.getRequestBuilder(g);var c=e.apply(this,f);var a=null;if(b.getName!=null){a=this.findRegisteredModule(b.getName())}else{a=this.findRegisteredModule(b)}if(a==null){throw"Attempt to create request with unknown component '"+b+"' as creator"}this._core.setObjectCreator(c,a);this.printDebug("Module '"+a+"' is requesting for '"+this.getObjectName(c)+"'...");if(this.gatherDebugRequests){this.pushRequestAndEventGather(a+"->Sandbox: ",this.getObjectName(c))}var d=null;this.debugPushRequest(a,c);d=this._core.processRequest(c);this.debugPopRequest();return d},postRequestByName:function(c,b){var a=this;window.setTimeout(function(){a.printDebug("#!#!#! POSTING --------------> requestByName "+c);var g=a.getRequestBuilder(c);var e=g.apply(a,b);var d="postmaster";a._core.setObjectCreator(e,d);a.printDebug("Module '"+d+"' is POSTING a request for '"+a.getObjectName(e)+"'...");if(a.gatherDebugRequests){a.pushRequestAndEventGather(d+"->Sandbox: ",a.getObjectName(e))}var f=null;a.debugPushRequest(d,e);f=a._core.processRequest(e);a.debugPopRequest()},10)},findModulesInterestedIn:function(c){var a=c.getName();var b=this._listeners[a];return b},notifyAll:function(e,f){var a;if(!f){a=e.getName();this._core.printDebug("Sandbox received notifyall for event '"+a+"'")}var b=this.findModulesInterestedIn(e);if(b!=null){if(!f){this._core.printDebug("Found "+b.length+" interested modules")}for(var d=0;d<b.length;d++){var c=b[d];if(!f){this._core.printDebug("Notifying module '"+c.getName()+"'.");if(this.gatherDebugRequests){this.pushRequestAndEventGather("Sandbox->"+c.getName()+":",a)}}this.debugPushEvent(this.getObjectCreator(e),c,e);c.onEvent(e);this.debugPopEvent()}}else{if(!f){this._core.printDebug("No interested modules found.")}}if(!f){delete e}},findRegisteredModuleInstance:function(a){return this._modulesByName[a]},findRegisteredModule:function(a){return this._modulesByName[a]?this._modulesByName[a].getName():null},getRequestParameter:function(a){return this._core.getRequestParameter(a)},getLanguage:function(){return this._core.getLanguage()},getBrowserWindowSize:function(){return this._core.getBrowserWindowSize()},getObjectName:function(a){return this._core.getObjectName(a)},getObjectCreator:function(a){return this._core.getObjectCreator(a)},setObjectCreator:function(b,a){return this._core.setObjectCreator(b,a)},copyObjectCreatorToFrom:function(b,a){return this._core.copyObjectCreatorToFrom(b,a)},addRequestHandler:function(b,a){return this._core.addRequestHandler(b,a)},removeRequestHandler:function(b,a){return this._core.removeRequestHandler(b,a)},pushRequestAndEventGather:function(a,c){var b={};b.name=a;b.request=c;this.requestAndEventGather.push(b);if(this.requestAndEventGather.length>this.maxGatheredRequestsAndEvents){this.requestAndEventGather.shift()}},popUpSeqDiagram:function(){var b='<html><head></head><body><div class=wsd wsd_style="modern-blue" ><pre>';var a="";for(x in this.requestAndEventGather){a+=this.requestAndEventGather[x].name+this.requestAndEventGather[x].request+"\n"
}if(a!=""){b+=a+'</pre></div><script type="text/javascript" src="http://www.websequencediagrams.com/service.js"><\/script></body>';var c=window.open();c.document.write(b);this.requestAndEventGather=[]}else{alert("No requests in queue")}}});Oskari.clazz.category("Oskari.mapframework.sandbox.Sandbox","key-listener-methods",{isCtrlKeyDown:function(){return this._core.isCtrlKeyDown()}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.$("mapframework",{});Oskari.$().mapframework.runtime={};Oskari.$().mapframework.runtime.findSandbox=function(){return Oskari.$().mapframework.runtime.components.sandbox};Oskari.$().mapframework.runtime.findComponent=function(a){return Oskari.$().mapframework.runtime.components[a]};Oskari.$().mapframework.runtime.isComponentPresent=function(a){if(Oskari.$().mapframework.runtime.components!=null&&Oskari.$().mapframework.runtime.components[a]!=null){return true}else{return false}};/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.request.common.RearrangeSelectedMapLayerRequest",function(a,b){this._creator=null;this._mapLayerId=a;this._toPosition=b},{__name:"RearrangeSelectedMapLayerRequest",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId},getToPosition:function(){return this._toPosition}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.ChangeMapLayerOpacityRequest",function(b,a){this._creator=null;this._mapLayerId=b;this._opacity=a},{__name:"ChangeMapLayerOpacityRequest",getName:function(){return this.__name},getOpacity:function(){return this._opacity},getMapLayerId:function(){return this._mapLayerId}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.ChangeMapLayerStyleRequest",function(a,b){this._creator=null;this._mapLayerId=a;this._style=b},{__name:"ChangeMapLayerStyleRequest",getName:function(){return this.__name},getStyle:function(){return this._style},getMapLayerId:function(){return this._mapLayerId}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.HighlightMapLayerRequest",function(a){this._creator=null;this._mapLayerId=a},{__name:"HighlightMapLayerRequest",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.DimMapLayerRequest",function(a){this._creator=null;this._mapLayerId=a},{__name:"DimMapLayerRequest",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId}},{protocol:["Oskari.mapframework.request.Request"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.request.common.UpdateHiddenValueRequest",function(a){this._creator=null;this._polygon=a},{__name:"UpdateHiddenValueRequest",getName:function(){return this.__name},getPolygon:function(){return this._polygon}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.SearchRequest",function(a,c,b){this._creator=null;this._searchString=a;this._onSuccess=c;this._onComplete=b},{__name:"SearchRequest",getName:function(){return this.__name},getSearchString:function(){return this._searchString},getOnSuccess:function(){return this._onSuccess},getOnComplete:function(){return this._onComplete}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.GenerateHtmlLinkToMapRequest",function(){this._creator=null},{__name:"GenerateHtmlLinkToMapRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.GenerateHtmlPrintToMapRequest",function(){this._creator=null},{__name:"GenerateHtmlPrintToMapRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.ShowMapMeasurementRequest",function(a){this._creator=null;this._value=a},{__name:"ShowMapMeasurementRequest",getName:function(){return this.__name},getValue:function(){return this._value}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.DrawPolygonRequest",function(a){this._creator=null;this._polygon=a},{__name:"DrawPolygonRequest",getName:function(){return this.__name},getPolygon:function(){return this._polygon}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.DrawSelectedPolygonRequest",function(a){this._creator=null;this._polygon=a},{__name:"DrawSelectedPolygonRequest",getName:function(){return this.__name},getPolygon:function(){return this._polygon}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.SelectPolygonRequest",function(b,a){this._creator=null;this._id=b;this._groupId=a},{__name:"SelectPolygonRequest",getName:function(){return this.__name},getId:function(){return this._id},getGroupId:function(){return this._groupId}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.RemovePolygonRequest",function(c,a,b){this._creator=null;this._id=c;this._groupId=a;this._showPol=b},{__name:"RemovePolygonRequest",getName:function(){return this.__name},getId:function(){return this._id},getGroupId:function(){return this._groupId},getShowPol:function(){return this._showPol}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.ErasePolygonRequest",function(a){this._creator=null;this._id=a},{getName:function(){return"ErasePolygonRequest"},getId:function(){return this._id}},{protocol:["Oskari.mapframework.request.Request"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.request.common.DisableMapKeyboardMovementRequest",function(){this._creator=null},{__name:"DisableMapKeyboardMovementRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.EnableMapKeyboardMovementRequest",function(){this._creator=null},{__name:"EnableMapKeyboardMovementRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.AddMapLayerRequest",function(b,a,d,c){this._creator=null;this._mapLayerId=b;this._keepLayersOrder=(a==true);this._isExternal=(c==true);this._isBasemap=(d==true)},{__name:"AddMapLayerRequest",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId},getKeepLayersOrder:function(){return this._keepLayersOrder},isBasemap:function(){return this._isBasemap},isExternal:function(){return this._isExternal}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.RemoveMapLayerRequest",function(a){this._creator=null;this._mapLayerId=a},{__name:"RemoveMapLayerRequest",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.GetFeatureInfoRequest",function(b,a,e,i,g,c,d,f,h){this._creator=null;this._mapLayers=b;this._lon=a;this._lat=e;this._x=i;this._y=g;this._mapWidth=c;this._mapHeight=d;this._bbox=f;this._srs=h},{__name:"GetFeatureInfoRequest",getName:function(){return this.__name},getMapLayers:function(){return this._mapLayers},getLon:function(){return this._lon},getLat:function(){return this._lat},getX:function(){return this._x},getY:function(){return this._y},getMapWidth:function(){return this._mapWidth},getMapHeight:function(){return this._mapHeight},getBoundingBox:function(){return this._bbox},getSRS:function(){return this._srs}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.MapMoveRequest",function(d,c,b,a){this._creator=null;this._centerX=d;this._centerY=c;this._zoom=b;this._marker=a},{__name:"MapMoveRequest",getName:function(){return this.__name},getCenterX:function(){return this._centerX},getCenterY:function(){return this._centerY},getZoom:function(){return this._zoom},getMarker:function(){return this._marker}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.ShowMapLayerInfoRequest",function(a){this._creator=null;this._mapLayerId=a},{__name:"ShowMapLayerInfoRequest",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.HideMapMarkerRequest",function(){this._creator=null},{__name:"HideMapMarkerRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.CtrlKeyDownRequest",function(){this._creator=null},{__name:"CtrlKeyDownRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.CtrlKeyUpRequest",function(){this._creator=null},{__name:"CtrlKeyUpRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.request.Request",function(){this._creator=null;throw"mapframework.request.Request should not be used"},{getName:function(){throw"Running default implementation of Request.getName(). implement your own!"},setCreator:function(a){this._creator=a},getCreator:function(){return this._creator}});Oskari.clazz.define("Oskari.mapframework.request.action.ActionReadyRequest",function(b,a){this._creator=null;this._id=b;this._wfsPngAction=a},{__name:"ActionReadyRequest",getName:function(){return this.__name},getId:function(){return this._id},isWfsPngAction:function(){return this._wfsPngAction}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.action.ActionStartRequest",function(c,b,a){this._creator=null;this._id=c;this._actionName=b;this._wfsPngAction=a},{__name:"ActionStartRequest",getName:function(){return this.__name},getId:function(){return this._id},getActionDescription:function(){return this._actionName},isWfsPngAction:function(){return this._wfsPngAction}},{protocol:["Oskari.mapframework.request.Request"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.publisher.PublisherBundleInstance",function(){this.sandbox=null;this.started=false;this.plugins={};this.localization=null},{__name:"Publisher",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization(this.getName())}if(a){return this._localization[a]}return this._localization},start:function(){var c=this;if(c.started){return}c.started=true;var a=Oskari.$("sandbox");c.sandbox=a;this.localization=Oskari.getLocalization(this.getName());a.register(c);for(p in c.eventHandlers){a.registerForEventByName(c,p)}var b=a.getRequestBuilder("userinterface.AddExtensionRequest")(this);a.request(this,b);c.createUi()},init:function(){return null},update:function(){},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{AfterMapLayerRemoveEvent:function(a){this.plugins["Oskari.userinterface.Flyout"].handleLayerSelectionChanged()},AfterMapLayerAddEvent:function(a){this.plugins["Oskari.userinterface.Flyout"].handleLayerSelectionChanged()},MapLayerEvent:function(a){this.plugins["Oskari.userinterface.Flyout"].handleLayerSelectionChanged()},AfterMapMoveEvent:function(a){this.plugins["Oskari.userinterface.Flyout"].handleMapMoved()}},stop:function(){var a=this.sandbox();for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}var b=a.getRequestBuilder("userinterface.RemoveExtensionRequest")(this);a.request(this,b);this.sandbox.unregister(this);this.started=false},startExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=Oskari.clazz.create("Oskari.mapframework.bundle.publisher.Flyout",this);this.plugins["Oskari.userinterface.Tile"]=Oskari.clazz.create("Oskari.mapframework.bundle.publisher.Tile",this)},stopExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=null;this.plugins["Oskari.userinterface.Tile"]=null},getPlugins:function(){return this.plugins},getTitle:function(){return this.getLocalization("title")},getDescription:function(){return this.getLocalization("desc")},createUi:function(){var a=this;this.plugins["Oskari.userinterface.Flyout"].createUi();this.plugins["Oskari.userinterface.Tile"].refresh()}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.userinterface.Extension"]});Oskari.clazz.define("Oskari.mapframework.bundle.publisher.Flyout",function(a){this.instance=a;this.container=null;this.state=null;this.template=null;this.view=null},{getName:function(){return"Oskari.mapframework.bundle.publisher.Flyout"},setEl:function(c,b,a){this.container=c[0];if(!jQuery(this.container).hasClass("publisher")){jQuery(this.container).addClass("publisher")}},startPlugin:function(){this.template=jQuery("<div></div>")},stopPlugin:function(){},getTitle:function(){return this.instance.getLocalization("title")},getDescription:function(){return this.instance.getLocalization("desc")},getOptions:function(){},setState:function(a){this.state=a;console.log("Flyout.setState",this,a)},createUi:function(){var c=this;var b=jQuery(this.container);b.empty();var a=c.instance.getSandbox();if(false){this.view=Oskari.clazz.create("Oskari.mapframework.bundle.publisher.view.NotLoggedIn",this.instance,this.instance.getLocalization("NotLoggedView"))}else{this.view=Oskari.clazz.create("Oskari.mapframework.bundle.publisher.view.BasicPublisher",this.instance,this.instance.getLocalization("BasicView"))}this.view.render(b)},handleLayerSelectionChanged:function(){if(this.view&&this.view.handleLayerSelectionChanged){this.view.handleLayerSelectionChanged()}},handleMapMoved:function(){if(this.view&&this.view.handleMapMoved){this.view.handleMapMoved()}}},{protocol:["Oskari.userinterface.Flyout"]});Oskari.clazz.define("Oskari.mapframework.bundle.publisher.Tile",function(a){this.instance=a;this.container=null;this.template=null},{getName:function(){return"Oskari.mapframework.bundle.publisher.Tile"},setEl:function(c,b,a){this.container=jQuery(c)},startPlugin:function(){this.refresh()
},stopPlugin:function(){this.container.empty()},getTitle:function(){return this.instance.getLocalization("title")},getDescription:function(){return this.instance.getLocalization("desc")},getOptions:function(){},setState:function(a){console.log("Tile.setState",this,a)},refresh:function(){var f=this;var a=f.instance;var e=this.container;var d=this.template;var c=a.getSandbox();var b=e.children(".oskari-tile-status")}},{protocol:["Oskari.userinterface.Tile"]});Oskari.clazz.define("Oskari.mapframework.bundle.publisher.view.NotLoggedIn",function(a,b){this.instance=a;this.template=jQuery("<p></p>");this.loc=b},{render:function(a){var c=this;var b=this.template.clone();b.append(this.loc.text);a.append(b)}});Oskari.clazz.define("Oskari.mapframework.bundle.publisher.view.BasicPublisher",function(a,d,c){var b=this;this.instance=a;this.template=jQuery('<div class="basic_publisher"><div class="form"><div class="field"><div class="help icon-info" title="TODO: tooltip"></div><label for="domain">'+d.domain.label+'</label><br clear="all" /><input name="domain" placeholder="'+d.domain.placeholder+'"/></div><div class="field"><div class="help icon-info" title="TODO: tooltip"></div><label for="name">'+d.name.label+'</label><br clear="all" /><input name="name" placeholder="'+d.name.placeholder+'"/></div><div class="field"><div class="help icon-info" title="TODO: tooltip"></div><label for="language">'+d.language.label+'</label><br clear="all" /><select name="language"></select></div><div class="options"></div><div class="buttons"></div></div><div class="map">'+d.preview+'<div class="preview"></div><div class="maplocation">'+d.location+'<div class="locationdata"></div></div></div></div>');this.templateHelp=jQuery('<div class="help icon-info"></div>');this.templateTool=jQuery('<div class="tool "><input type="checkbox"/><span></span></div>');this.templateSizeOptionTool=jQuery('<div class="tool "><input type="radio" name="size" /><span></span></div>');this.templateCustomSize=jQuery('<div class="customsize"><input type="text" disabled="true" name="width" placeholder="'+d.sizes.width+'"/> x <input type="text" disabled="true" name="height" placeholder="'+d.sizes.height+'"/></div>');this.templateLayerRow=jQuery('<tr data-id=""><td><input type="checkbox" /></td><td></td></tr>');this.templateUseAsDefault=jQuery('<a href="JavaScript:void(0);">'+d.layers.useAsDefaultLayer+"</a>");this.tools=[{id:"Oskari.mapframework.bundle.mapmodule.plugin.ScaleBarPlugin",name:"Mittakaavajana",selected:false},{id:"Oskari.mapframework.bundle.mapmodule.plugin.IndexMapPlugin",name:"Indeksikartta",selected:false},{id:"Oskari.mapframework.bundle.mapmodule.plugin.Portti2Zoombar",name:"Mittakaavan s채채t철",selected:true,config:{location:{top:"10px",left:"10px"}}},{id:"Oskari.mapframework.bundle.mapmodule.plugin.SearchPlugin",name:"Osoite- ja paikannimihaku",selected:false}];this.showLayerSelection=false;this.sizeOptions=[{id:"small",width:375,height:300},{id:"medium",width:500,height:400,selected:true},{id:"large",width:640,height:512},{id:"custom",width:"max 1000",height:1000,minWidth:50,minHeight:20,maxWidth:1000,maxHeight:1000}];this.loc=d;this.config={layers:{promote:[{text:"Haluatko n채ytt채채 my철s ilmakuvia?",id:[24]}],preselect:"base_35"}};this.accordion=null;this.setupLayersList();this.defaultBaseLayer=null;if(this.config.layers.preselect){this.defaultBaseLayer=this.config.layers.preselect}this.maplayerPanel=null;this.previewMap=null;this.mainPanel=null},{render:function(b){var g=this;var f=this.template.clone();this.mainPanel=f;var e=f.find("select[name=language]");var h=this.loc.language.options;for(var d in h){e.append('<option value="'+d+'">'+h[d]+"</option>")}var c=f.find("div.map div.preview");this.map=this._createMap();this.map.render(c.get()[0]);this.handleMapMoved();b.append(f);var a=Oskari.clazz.create("Oskari.userinterface.component.Accordion");this.accordion=a;a.addPanel(this._createSizePanel());a.addPanel(this._createToolsPanel());this.maplayerPanel=Oskari.clazz.create("Oskari.userinterface.component.AccordionPanel");this.maplayerPanel.setTitle(this.loc.layers.label);
this._populateMapLayerPanel();a.addPanel(this.maplayerPanel);a.insertTo(f.find("div.options"));this._addButtons(f)},_createMap:function(){var e=Oskari.clazz.create("Oskari.mapframework.ui.module.common.MapModule","Preview",false,false,true,false);this.previewMap=e;var b=this.instance.getSandbox();var g=b.register(e);var a=[];a.push("Oskari.mapframework.mapmodule.WmsLayerPlugin");a.push("Oskari.mapframework.mapmodule.TilesGridPlugin");a.push("Oskari.mapframework.mapmodule.WfsLayerPlugin");a.push("Oskari.mapframework.wmts.mapmodule.plugin.WmtsLayerPlugin");for(var d=0;d<a.length;d++){var f=Oskari.clazz.create(a[d]);e.registerPlugin(f)}e.setStealth(true);e.start(b);var c=new OpenLayers.Control.PorttiMouse({sandbox:b,mapmodule:e});e.addMapControl("mouseControls",c);e.updateCurrentState();return g},_createSizePanel:function(){var j=this;var a=Oskari.clazz.create("Oskari.userinterface.component.AccordionPanel");a.setTitle(this.loc.size.label);var l=a.getContainer();var g=this.templateHelp.clone();g.attr("title","TODO: tooltip");l.append(g);var c=function(i){return function(){var q=l.find("input[name=size]:checked").val();var m=l.find("div.customsize input");if(q=="custom"){m.removeAttr("disabled")}else{m.attr("disabled",true);for(var o=0;o<j.sizeOptions.length;++o){var r=j.sizeOptions[o];if(r.id==q){var n=j.mainPanel.find("div.map div.preview");n.width(r.width);n.height(r.height);break}}}}};for(var d=0;d<this.sizeOptions.length;++d){var e=this.sizeOptions[d];var b=this.templateSizeOptionTool.clone();var k=this.loc.sizes[e.id];k=k+" ("+e.width+" x "+e.height+"px)";b.find("span").append(k);if(e.selected){b.find("input").attr("checked","checked");var h=j.mainPanel.find("div.map div.preview");h.width(e.width);h.height(e.height)}l.append(b);b.find("input").attr("value",e.id);b.find("input").change(c(e))}var f=this.templateCustomSize.clone();l.append(f);return a},_populateMapLayerPanel:function(){var f=this;var h=this.maplayerPanel.getContainer();var e=this.templateHelp.clone();e.attr("title","TODO: tooltip");h.append(e);var a=this.templateTool.clone();a.find("span").append(this.loc.layerselection.label);if(this.showLayerSelection){a.find("input").attr("checked","checked")}h.append(a);h.append(this.loc.layerselection.info);a.find("input").change(function(){var i=jQuery(this);var l=i.is(":checked");f.showLayerSelection=l;h.empty();f._populateMapLayerPanel()});if(!this.showLayerSelection){return}var k=jQuery("<table></table>");var b=function(l,i){return function(){var n=jQuery(this);var o=n.is(":checked");var m=l.find("td");i.selected=o;if(o){f.defaultBaseLayer=i.id}else{if(f.defaultBaseLayer==i.id){f.defaultBaseLayer=null}}}};for(var c=0;c<this.layers.length;++c){var d=this.layers[c];var j=this.templateLayerRow.clone();j.attr("data-id",d.id);var g=j.find("td");if(this.defaultBaseLayer&&this.defaultBaseLayer==d.id){jQuery(g[0]).find("input").attr("checked","checked");d.selected=true}jQuery(g[0]).find("input").change(b(j,d));jQuery(g[1]).append(d.name);k.append(j)}h.append(k);if(this.config.layers.promote&&this.config.layers.promote.length>0){this._populateLayerPromotion(h)}},_populateLayerPromotion:function(o){var g=this;var m=this.instance.getSandbox();var a=m.getRequestBuilder("AddMapLayerRequest");var c=function(i){return function(){m.request(g.instance.getName(),a(i.getId(),true))}};for(var e=0;e<this.config.layers.promote.length;++e){var b=this.config.layers.promote[e];var h=jQuery("<ul></ul>");var l=false;for(var d=0;d<b.id.length;++d){if(!m.isLayerAlreadySelected(b.id[d])){var n=jQuery('<li><a href="JavaScript:void(0);"></a></li>');var f=m.findMapLayerFromAllAvailable(b.id[d]);if(f){var k=n.find("a");k.append(f.getName());k.bind("click",c(f));h.append(n);l=true}}}if(l){o.append(b.text);o.append(h)}}},handleLayerSelectionChanged:function(){this.setupLayersList();var a=this.maplayerPanel.getContainer();a.empty();this._populateMapLayerPanel()},handleMapMoved:function(){var b=this.instance.sandbox.getMap();var d=b.getX();var c=b.getY();var a=b.getZoom();this.previewMap.moveMapToLanLot(new OpenLayers.LonLat(d,c));this.previewMap.setZoomLevel(a,true);
this.mainPanel.find("div.locationdata").html("N: "+c+" E: "+d+" "+this.loc.zoomlevel+": "+a)},setupLayersList:function(){this.layers=[];var c=this.instance.sandbox.findAllSelectedMapLayers();for(var b=0;b<c.length;++b){var a={id:c[b].getId(),name:c[b].getName()};this.layers.push(a)}},_createToolsPanel:function(){var g=this;var b=Oskari.clazz.create("Oskari.userinterface.component.AccordionPanel");b.setTitle(this.loc.tools.label);var h=b.getContainer();var a=this.templateHelp.clone();a.attr("title","TODO: tooltip");h.append(a);var f=function(j,i){if(!j.plugin){j.plugin=Oskari.clazz.create(j.id,j.config);g.previewMap.registerPlugin(j.plugin)}if(i){j.plugin.startPlugin(g.instance.sandbox)}else{j.plugin.stopPlugin(g.instance.sandbox)}};var d=function(i){return function(){var j=jQuery(this);var k=j.is(":checked");i.selected=k;f(i,k)}};for(var e=0;e<this.tools.length;++e){var c=this.templateTool.clone();c.find("span").append(this.tools[e].name);if(this.tools[e].selected){c.find("input").attr("checked","checked");f(this.tools[e],true)}h.append(c);c.find("input").change(d(this.tools[e]))}return b},_addButtons:function(a){var b=this;var e=a.find("div.buttons");var d=jQuery('<input type="button" name="save" />');d.val(this.loc.buttons.save);d.bind("click",function(){b._gatherSelections(a)});var c=jQuery('<input type="button" name="cancel" />');c.val(this.loc.buttons.cancel);c.bind("click",function(){b.instance.sandbox.postRequestByName("userinterface.UpdateExtensionRequest",[b.instance,"close"])});e.append(c);e.append(d)},_gatherSelections:function(b){var e=b.find("input[name=domain]").val();if(!this._checkLength(e,1)){alert(this.loc.error.domain);return}if(e.startsWith("http")||e.startsWith("www")){alert(this.loc.error.domainStart);return}var a=b.find("input[name=name]").val();if(!this._checkLength(a,1)){alert(this.loc.error.name);return}var f=b.find("select[name=language]").val();var k=b.find("input[name=size]:checked").val();var d={domain:e,name:a,language:f,plugins:[],layers:[]};for(var g=0;g<this.tools.length;++g){if(this.tools[g].selected){d.plugins.push({id:this.tools[g].id})}}if(k=="custom"){var c=b.find("div.customsize input[name=width]").val();var j=b.find("div.customsize input[name=height]").val();if(this._validateSize(c,j)){d.size={width:c,height:j}}else{alert(this.loc.error.size);return}}else{for(var g=0;g<this.sizeOptions.length;++g){var h=this.sizeOptions[g];if(h.id==k){d.size={width:h.width,height:h.height};break}}}if(this.showLayerSelection){d.tools.push("layerselection");for(var g=0;g<this.layers.length;++g){if(this.layers[g].selected){d.layers.push({id:this.layers[g].id})}}}jQuery.ajax({url:"/web/fi/kartta?p_p_id=Portti2Map_WAR_portti2mapportlet&p_p_lifecycle=1&p_p_state=exclusive&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_Portti2Map_WAR_portti2mapportlet_fi.mml.baseportlet.CMD=ajax.jsp&action_route=Publish",type:"POST",data:"pubdata="+JSON.stringify(d),dataType:"json",beforeSend:function(i){if(i&&i.overrideMimeType){i.overrideMimeType("application/j-son;charset=UTF-8")}},success:function(i){alert("Ok")},error:function(){alert("Fail")}})},_checkLength:function(d,b,a){if(d){var c=jQuery.trim(d.toString());if(b&&c.length<b){return false}if(a&&c.length>a){return false}return true}return false},_isNumber:function(a){return !isNaN(parseInt(a))&&isFinite(a)},_validateSize:function(d,a){if(!this._isNumber(d)||!this._isNumber(a)){return false}var e=null;for(var b=0;b<this.sizeOptions.length;++b){var c=this.sizeOptions[b];if(c.id=="custom"){e=c;break}}if(d<e.minWidth||d>e.maxWidth){return false}if(a<e.minHeight||a>e.maxHeight){return false}return true}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.personaldata.PersonalDataBundleInstance",function(){this.core=null;this.sandbox=null;this.started=false;this.template=null;this.plugins={}},{__name:"PersonalData",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization(this.getName())}if(a){return this._localization[a]}return this._localization},start:function(){var d=this;if(d.started){return}d.started=true;var a=Oskari.$("sandbox");d.sandbox=a;a.register(d);for(p in d.eventHandlers){a.registerForEventByName(d,p)}var c=a.getRequestBuilder("userinterface.AddExtensionRequest")(this);a.request(this,c);d.createUi();var e=a.getRequestBuilder("StateHandler.SaveStateRequest");if(e){var b=a.getRequestBuilder("Toolbar.AddToolButtonRequest");a.request(d,b("save_view","viewtools",{iconCls:"tool-save-view",tooltip:"Tallenna n채kym채",sticky:false,callback:function(){a.request(d,e())}}))}if(!a.getUser().isLoggedIn()){var b=a.getRequestBuilder("Toolbar.ToolButtonStateRequest");a.request(d,b("save_view","viewtools",false))}},init:function(){return null},update:function(){},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{},stop:function(){var a=this.sandbox();for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}var b=a.getRequestBuilder("userinterface.RemoveExtensionRequest")(this);a.request(this,b);this.sandbox.unregister(this);this.started=false},startExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=Oskari.clazz.create("Oskari.mapframework.bundle.personaldata.Flyout",this);this.plugins["Oskari.userinterface.Tile"]=Oskari.clazz.create("Oskari.mapframework.bundle.personaldata.Tile",this)},stopExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=null;this.plugins["Oskari.userinterface.Tile"]=null},getPlugins:function(){return this.plugins},getTitle:function(){return this.getLocalization("title")},getDescription:function(){return this.getLocalization("desc")},createUi:function(){var a=this;this.plugins["Oskari.userinterface.Flyout"].createUi();this.plugins["Oskari.userinterface.Tile"].refresh()}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.userinterface.Extension"]});Oskari.clazz.define("Oskari.mapframework.bundle.personaldata.Flyout",function(a){this.instance=a;this.container=null;this.state=null;this.templateNotLoggedIn=null;this.template=null;this.templateTabHeader=null;this.templateTabContent=null;this.tabsData=[]},{getName:function(){return"Oskari.mapframework.bundle.personaldata.Flyout"},setEl:function(c,b,a){this.container=c[0];if(!jQuery(this.container).hasClass("personaldata")){jQuery(this.container).addClass("personaldata")}},startPlugin:function(){var a=this;this.templateNotLoggedIn=jQuery("<p>"+this.instance.getLocalization("notLoggedIn")+"</p>");this.template=jQuery('<div class="oskariTabs"><ul></ul></div><br clear="all"/><div class="oskariTabsWrapper"></div>');this.templateTabHeader=jQuery('<li><a href="JavaScript:void(0);"></a></li>');this.templateTabContent=jQuery('<div class="tab-content"></div>');var b=this.instance.getLocalization("tabs");this.tabsData={myPlaces:Oskari.clazz.create("Oskari.mapframework.bundle.personaldata.MyPlacesTab",this.instance,b.myplaces),myViews:Oskari.clazz.create("Oskari.mapframework.bundle.personaldata.MyViewsTab",this.instance,b.myviews),publishedMaps:Oskari.clazz.create("Oskari.mapframework.bundle.personaldata.PublishedMapsTab",this.instance,b.publishedmaps),account:Oskari.clazz.create("Oskari.mapframework.bundle.personaldata.AccountTab",this.instance,b.account)}},stopPlugin:function(){},getTitle:function(){return this.instance.getLocalization("title")},getDescription:function(){return this.instance.getLocalization("desc")},getOptions:function(){},setState:function(a){this.state=a;console.log("Flyout.setState",this,a)},createUi:function(){var g=this;var j=g.instance.getSandbox();var h=jQuery(this.container);
h.empty();var e=this.template.clone();h.append(e);var a=h.find("div.oskariTabs ul");this._createTabHeaders(a);var f=h.find("div.oskariTabsWrapper");var d=true;for(var b in this.tabsData){var c=this.tabsData[b];var i=this.templateTabContent.clone();if(!d){i.css("display","none")}f.append(i);c.addTabContent(i);if(c.bindEvents){c.bindEvents()}d=false}jQuery(a).find("li a").bind("click",function(){var l=jQuery(this).parent();var k=l.index();h.find(".tab-content").hide();h.find(".tab-content:eq("+k+")").show();l.closest("ul").find("li").removeClass("active");l.addClass("active")})},_createTabHeaders:function(d){var c=true;for(var a in this.tabsData){var b=this.tabsData[a];var e=this.templateTabHeader.clone();if(c){e.addClass("active");c=false}e.find("a").html(b.getTitle());d.append(e)}}},{protocol:["Oskari.userinterface.Flyout"]});Oskari.clazz.define("Oskari.mapframework.bundle.personaldata.Tile",function(a){this.instance=a;this.container=null;this.template=null},{getName:function(){return"Oskari.mapframework.bundle.personaldata.Tile"},setEl:function(c,b,a){this.container=jQuery(c)},startPlugin:function(){this.refresh()},stopPlugin:function(){this.container.empty()},getTitle:function(){return this.instance.getLocalization("title")},getDescription:function(){},getOptions:function(){},setState:function(a){console.log("Tile.setState",this,a)},refresh:function(){}},{protocol:["Oskari.userinterface.Tile"]});Oskari.clazz.define("Oskari.mapframework.bundle.personaldata.MyPlacesTab",function(a,b){this.instance=a;this.template=jQuery("<p>omat templateMyPlacesTab content</p>");this.loc=b;this.dummy=false},{getTitle:function(){return this.loc.title},addTabContent:function(c){var f=this;var e=this.template.clone();c.append(e);var d=jQuery("<div>Add measure area</div>");d.bind("click",function(i){var h=f.instance.getSandbox();var j=h.getRequestBuilder("Toolbar.AddToolButtonRequest");h.request(f.instance,j("measurearea","measuretools",{iconCls:"tool-measure-area",tooltip:"Measure area",sticky:true,callback:function(){h.request(f.instance,h.getRequestBuilder("ToolSelectionRequest")("map_control_measure_area_tool"))}}))});e.append(d);e.append("<hr/>");var b=jQuery("<div>Disable/enable measure area</div>");b.bind("click",function(i){var h=f.instance.getSandbox();var j=h.getRequestBuilder("Toolbar.ToolButtonStateRequest");h.request(f.instance,j("measurearea","measuretools",f.dummy));f.dummy=!f.dummy});e.append(b);e.append("<hr/>");var a=jQuery("<div>Remove measure area</div>");a.bind("click",function(i){var h=f.instance.getSandbox();var j=h.getRequestBuilder("Toolbar.RemoveToolButtonRequest");h.request(f.instance,j("measurearea","measuretools"))});e.append(a);var g=jQuery("<div>Disable/enable all measuretools</div>");g.bind("click",function(i){var h=f.instance.getSandbox();var j=h.getRequestBuilder("Toolbar.ToolButtonStateRequest");h.request(f.instance,j(undefined,"measuretools",f.dummy));f.dummy=!f.dummy});e.append(g);e.append("<hr/>")}});Oskari.clazz.define("Oskari.mapframework.bundle.personaldata.MyViewsTab",function(a,b){this.instance=a;this.template=jQuery('<div><a href="JavaScript: void(0);"></a></div> <div style="border: 1px solid; margin: 20px; padding: 25px;" class="response"></div><div class="viewsList"></div>');this.templateViewRow=jQuery('<div class="view"><div class="name"><a href="JavaScript:void(0);"></a></div></div>');this.templateViewTools=jQuery('<div class="tools"><div class="edit"><a href="JavaScript:void(0);"></a></div><div class="publish"><a href="JavaScript:void(0);"></a></div><div class="delete"><a href="JavaScript:void(0);"></a></div></div>');this.loc=b;this.container=null;this.debugCounter=0},{getName:function(){return"PersonalData.MyViews"},getTitle:function(){return this.loc.title},addTabContent:function(c){var e=this;var d=e.template.clone();e.container=c;d.find("a").html("> Tallenna n채kym채 <");c.append(d);var a=e.instance;var b=a.getSandbox();d.find("a").bind("click",function(){var f=b.getRequestBuilder("StateHandler.SaveStateRequest");if(f){b.request(a,f())}});e._refreshViewsList()},_refreshViewsList:function(){var a=this;
var b=a.container.find(".viewsList");jQuery.ajax({url:"/web/fi/kartta?p_p_id=Portti2Map_WAR_portti2mapportlet&p_p_lifecycle=1&p_p_state=exclusive&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_Portti2Map_WAR_portti2mapportlet_fi.mml.baseportlet.CMD=ajax.jsp&action_route=GetViews",type:"POST",dataType:"json",beforeSend:function(c){if(c&&c.overrideMimeType){c.overrideMimeType("application/j-son;charset=UTF-8")}},success:function(d){b.html("");if(d.views&&d.views.length>0){a.viewData=d.views;for(var f=0;f<a.viewData.length;f++){var c=a.viewData[f];var e=a.createViewContainer(c);b.append(e)}b.find("div.view:odd").addClass("odd");b.find("div.view:even").removeClass("odd");var h=a.instance.plugins["Oskari.userinterface.Tile"];var j=h.container;var g=jQuery(j).find(".oskari-tile-status");g.empty();g.append("("+d.views.length+")")}},error:function(){alert(a.loc.efailtogetmyviews)}})},editView:function(g){var e=this;var i=this.instance.getSandbox();var h=this.loc.edit?this.loc.edit:"Muokkaa n채kym채채";var a='<div class="e_noname" style="display: inline-block; color: red; display: none;">'+(this.loc.error_noname?this.loc.error_noname:"Nimi ei voi olla tyhj채!")+'<br /></div><div class="e_illegal" style="display: inline-block; color: red; display: none;"><br />'+(this.loc.error_illegalchars?this.loc.error_illegalchars:"Nimess채 on virheellisi채 merkkej채")+"<br /></div>"+(this.loc.msg?this.loc.msg.view_name:"N채kym채n nimi")+': <input name="viewName" value="'+g.name+'" type="text" class="viewName" />';var d={name:"button_save",text:(this.loc.button?this.loc.button.save:"Tallenna"),close:false,onclick:function(k){var l=jQuery("div.modalmessage input.viewName").val();if(l){if(l.indexOf("<")>=0){jQuery("div.modalmessage div.e_illegal").show()}else{$.modal.close();jQuery.ajax({url:"/web/fi/kartta?p_p_id=Portti2Map_WAR_portti2mapportlet&p_p_lifecycle=1&p_p_state=exclusive&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_Portti2Map_WAR_portti2mapportlet_fi.mml.baseportlet.CMD=ajax.jsp&action_route=RenameView",type:"POST",data:"id="+g.id+"&newName="+l,dataType:"json",beforeSend:function(m){if(m&&m.overrideMimeType){m.overrideMimeType("application/j-son;charset=UTF-8")}},success:function(m){e._refreshViewsList()},error:function(){alert(e.loc.e_fail)}})}}else{jQuery("div.modalmessage div.e_noname").show()}}};var j={name:"button_cancel",text:(this.loc.button?this.loc.button.cancel:"Peruuta"),close:true};var c="userinterface.ModalDialogRequest";var b=i.getRequestBuilder(c);var f=b(h,a,[d,j]);i.request(this.instance,f)},createViewContainer:function(c){var e=this;var i=this.instance.getSandbox();var a=this.templateViewRow.clone();var d=this.templateViewTools.clone();var g=a.find("div.name a");g.append(c.name);g.bind("click",function(){var l=i.getRequestBuilder("StateHandler.SetStateRequest");if(l){var k=l(c.state);var j=(typeof c.state.mapfull.state);if(j=="string"){c.state.mapfull.state=JSON.parse(c.state.mapfull.state)}k.setCurrentViewId(c.id);i.request(e.instance,k)}});a.attr("view_id",c.id);a.append(d);var b=d.find("div.edit a");b.append(this.loc.edit);b.bind("click",function(){var j=jQuery(this).closest("div.view");var l=j.attr("view_id");var k=e.getViewById(l);e.editView(k)});var h=d.find("div.publish a");if(c.isPublic){h.append(this.loc.unpublish)}else{h.append(this.loc.publish)}h.bind("click",function(){var j=jQuery(this).closest("div.view");var l=j.attr("view_id");var k=e.getViewById(l);if(!k){return}k.isPublic=!k.isPublic;if(k.isPublic){h.html(e.loc.unpublish)}else{h.html(e.loc.publish)}jQuery.ajax({url:"/web/fi/kartta?p_p_id=Portti2Map_WAR_portti2mapportlet&p_p_lifecycle=1&p_p_state=exclusive&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_Portti2Map_WAR_portti2mapportlet_fi.mml.baseportlet.CMD=ajax.jsp&action_route=AdjustViewAccess&id="+l+"&isPublic="+k.isPublic,type:"POST",dataType:"json",beforeSend:function(m){if(m&&m.overrideMimeType){m.overrideMimeType("application/j-son;charset=UTF-8")}},success:function(m){e._refreshViewsList()},error:function(){alert(loc.efailtoremovemyview)}})});var f=d.find("div.delete a");f.append(this.loc["delete"]);
f.bind("click",function(){var s=jQuery(this).closest("div.view");var k=s.attr("view_id");var o=e.getViewById(k);if(o){var n={};n.name="delete_ok";n.text=e.loc.button?e.loc.button.yes:"Kyll채";n.onclick=function(){jQuery.ajax({url:"/web/fi/kartta?p_p_id=Portti2Map_WAR_portti2mapportlet&p_p_lifecycle=1&p_p_state=exclusive&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_Portti2Map_WAR_portti2mapportlet_fi.mml.baseportlet.CMD=ajax.jsp&action_route=DeleteView&id="+k,type:"POST",dataType:"json",beforeSend:function(t){if(t&&t.overrideMimeType){t.overrideMimeType("application/j-son;charset=UTF-8")}},success:function(t){s.remove();e._refreshViewsList()},error:function(){alert(loc.efailtoremovemyview)}})};var r={};r.name="delete_cancel";r.text=e.loc.button?e.loc.button.no:"Ei";r.close=true;var j=i.getRequestBuilder("userinterface.ModalDialogRequest");var q=e.loc.msg?e.loc.msg.confirm_delete:"Poiston varmistus";var l=e.loc.msg?e.loc.msg.delete_view:"Poistetaanko n채kym채";l+=" '"+o.name+"'?";var m=j(q,l,[n,r]);i.request(e.instance,m)}else{return}});return a},getViewById:function(b){for(var a=0;a<this.viewData.length;++a){if(this.viewData[a].id==b){return this.viewData[a]}}alert("Couldnt find view for id: "+b);return null},bindEvents:function(){var a=this.instance;var b=a.getSandbox();for(p in this.eventHandlers){b.registerForEventByName(this,p)}},unbindEvents:function(){var a=this.instance;var b=a.getSandbox();for(p in this.eventHandlers){b.unregisterForEventByName(this,p)}},eventHandlers:{StateSavedEvent:function(a){this.container.find("div.response").html("Tallennettu tila: <hr/>"+this.serializeJSON(a.getState()));this.debugCounter++;this._refreshViewsList()}},serializeJSON:function(e){var d=this;var c=typeof(e);if(c!="object"||e===null){if(c=="string"){e='"'+e+'"'}return String(e)}else{var b=[],a=(e&&e.constructor==Array);jQuery.each(e,function(g,f){c=typeof(f);if(c=="string"){f='"'+f+'"'}else{if(c=="object"&f!==null){f=d.serializeJSON(f)}}b.push((a?"":'"'+g+'":')+String(f))});return(a?"[":"{")+String(b)+(a?"]":"}")}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])}});Oskari.clazz.define("Oskari.mapframework.bundle.personaldata.PublishedMapsTab",function(a,b){this.instance=a;this.template=jQuery("<p>omat templatePublishedMapsTab content</p>");this.loc=b},{getTitle:function(){return this.loc.title},addTabContent:function(a){var b=this.template.clone();a.append(b)}});Oskari.clazz.define("Oskari.mapframework.bundle.personaldata.AccountTab",function(a,b){this.instance=a;this.template=jQuery('<div class="account"><div class="info"></div><div class="bottomlinks"></div></div>');this.loc=b},{getTitle:function(){return this.loc.title},addTabContent:function(a){var b=this.template.clone();a.append(b);this._createAccount(a)},_createAccount:function(c){var k=this;var m=k.instance.getSandbox();var o=jQuery('<div class="dataField"><div class="label"></div><div class="value"></div><br clear="all" /></div>');var e=m.getUser();var n=this.loc;var d=[{label:n.firstName,value:e.getFirstName()},{label:n.lastName,value:e.getLastName()},{label:n.nickName,value:e.getNickName()},{label:n.email,value:e.getLoginName()}];var b=c.find("div.info");for(var g=0;g<d.length;++g){var f=d[g];var h=o.clone();h.find(".label").html(f.label);h.find(".value").html(f.value);b.append(h)}var j=[{label:n.changeInfo,href:"JavaScript:void(0);"},{label:n.changePassword,href:"JavaScript:void(0);"},{label:n.removeAccount,href:"JavaScript:void(0);"}];var a=c.find("div.bottomlinks");for(var g=0;g<j.length;++g){var f=j[g];var l=jQuery('<a href="'+f.href+'">'+f.label+"</a>&nbsp; ");a.append(l)}}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.myviews.MyViewsBundleInstance",function(){this.core=null;this.sandbox=null;this.started=false;this.templates={};this.plugins={};this.__modaldialog=null},{__name:"MyViews",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization(this.getName())}if(a){return this._localization[a]}return this._localization},start:function(){var d=this;if(d.started){return}d.started=true;var a=Oskari.$("sandbox");d.sandbox=a;a.register(d);for(var e in d.eventHandlers){if(d.eventHandlers.hasOwnProperty(e)){a.registerForEventByName(d,e)}}var b=a.getRequestBuilder("userinterface.AddExtensionRequest");var c=b(this);a.request(this,c);d.draw()},init:function(){return null},update:function(){},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{MapClickedEvent:function(d){var b=this;var a=jQuery(window).height();var c=jQuery(window).width();var g=jQuery('<div class="modaldialog"><span class="modalmessage"></span><br /><span class="modalyes modalclose">yes</span><br /><span class="modalno">no</span><br /></div>');var f={minHeight:Math.floor(a/5),minWidth:Math.floor(c/4),position:[d.getMouseY(),d.getMouseX()],appendTo:jQuery("#mapdiv"),closeClass:"modalclose",overlayId:"modaloverlay",overlayCss:{"background-color":"darkgrey",cursor:"wait"},containerId:"modalcontainer",containerCss:{"background-color":"white",border:"1px solid","text-align":"center"},dataId:"modaldata",dataCss:{color:"darkblue"},onShow:function(e){var h=this;jQuery(".modalmessage",e.data[0]).append("Confess!");jQuery(".modalyes",e.data[0]).click(function(){});jQuery(".modalno",e.data[0]).click(function(){jQuery(".modalmessage",e.data[0]).append("!")})}};b.showModalDialog(g,f)}},stop:function(){var a=this.sandbox();for(var d in this.eventHandlers){if(this.eventHandlers.hasOwnProperty(d)){a.unregisterFromEventByName(this,d)}}var b=a.getRequestBuilder("userinterface.RemoveExtensionRequest");var c=b(this);a.request(this,c);this.sandbox.unregister(this);this.started=false},startExtension:function(){},stopExtension:function(){},getPlugins:function(){return this.plugins},getTitle:function(){return this.getLocalization("title")},getDescription:function(){return this.getLocalization("desc")},draw:function(){var a=this},showModalDialog:function(b,a){jQuery(b).modal(a)}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.userinterface.Extension"]});(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(e){var i=[],f=e(document),c=e.browser.msie&&parseInt(e.browser.version)===6&&typeof window.XMLHttpRequest!=="object",b=e.browser.msie&&parseInt(e.browser.version)===7,h=null,g=e(window),a=[];e.modal=function(j,d){return e.modal.impl.init(j,d)};e.modal.close=function(){e.modal.impl.close()};e.modal.focus=function(d){e.modal.impl.focus(d)};e.modal.setContainerDimensions=function(){e.modal.impl.setContainerDimensions()};e.modal.setPosition=function(){e.modal.impl.setPosition()};e.modal.update=function(d,j){e.modal.impl.update(d,j)};e.fn.modal=function(d){return e.modal.impl.init(this,d)};e.modal.defaults={appendTo:"body",focus:true,opacity:50,overlayId:"simplemodal-overlay",overlayCss:{},containerId:"simplemodal-container",containerCss:{},dataId:"simplemodal-data",dataCss:{},minHeight:null,minWidth:null,maxHeight:null,maxWidth:null,autoResize:false,autoPosition:true,zIndex:1000,close:true,closeHTML:'<a class="modalCloseImg" title="Close"></a>',closeClass:"simplemodal-close",escClose:true,overlayClose:false,fixed:true,position:null,persist:false,modal:true,onOpen:null,onShow:null,onClose:null};e.modal.impl={d:{},init:function(k,d){var j=this;if(j.d.data){return false}h=e.browser.msie&&!e.boxModel;j.o=e.extend({},e.modal.defaults,d);j.zIndex=j.o.zIndex;j.occb=false;if(typeof k==="object"){k=k instanceof jQuery?k:e(k);j.d.placeholder=false;if(k.parent().parent().size()>0){k.before(e("<span></span>").attr("id","simplemodal-placeholder").css({display:"none"}));
j.d.placeholder=true;j.display=k.css("display");if(!j.o.persist){j.d.orig=k.clone(true)}}}else{if(typeof k==="string"||typeof k==="number"){k=e("<div></div>").html(k)}else{alert("SimpleModal Error: Unsupported data type: "+typeof k);return j}}j.create(k);k=null;j.open();if(e.isFunction(j.o.onShow)){j.o.onShow.apply(j,[j.d])}return j},create:function(j){var d=this;d.getDimensions();if(d.o.modal&&c){d.d.iframe=e('<iframe src="javascript:false;"></iframe>').css(e.extend(d.o.iframeCss,{display:"none",opacity:0,position:"fixed",height:a[0],width:a[1],zIndex:d.o.zIndex,top:0,left:0})).appendTo(d.o.appendTo)}d.d.overlay=e("<div></div>").attr("id",d.o.overlayId).addClass("simplemodal-overlay").css(e.extend(d.o.overlayCss,{display:"none",opacity:d.o.opacity/100,height:d.o.modal?i[0]:0,width:d.o.modal?i[1]:0,position:"fixed",left:0,top:0,zIndex:d.o.zIndex+1})).appendTo(d.o.appendTo);d.d.container=e("<div></div>").attr("id",d.o.containerId).addClass("simplemodal-container").css(e.extend({position:d.o.fixed?"fixed":"absolute"},d.o.containerCss,{display:"none",zIndex:d.o.zIndex+2})).append(d.o.close&&d.o.closeHTML?e(d.o.closeHTML).addClass(d.o.closeClass):"").appendTo(d.o.appendTo);d.d.wrap=e("<div></div>").attr("tabIndex",-1).addClass("simplemodal-wrap").css({height:"100%",outline:0,width:"100%"}).appendTo(d.d.container);d.d.data=j.attr("id",j.attr("id")||d.o.dataId).addClass("simplemodal-data").css(e.extend(d.o.dataCss,{display:"none"})).appendTo("body");j=null;d.setContainerDimensions();d.d.data.appendTo(d.d.wrap);if(c||h){d.fixIE()}},bindEvents:function(){var d=this;e("."+d.o.closeClass).bind("click.simplemodal",function(j){j.preventDefault();d.close()});if(d.o.modal&&d.o.close&&d.o.overlayClose){d.d.overlay.bind("click.simplemodal",function(j){j.preventDefault();d.close()})}f.bind("keydown.simplemodal",function(j){if(d.o.modal&&j.keyCode===9){d.watchTab(j)}else{if((d.o.close&&d.o.escClose)&&j.keyCode===27){j.preventDefault();d.close()}}});g.bind("resize.simplemodal orientationchange.simplemodal",function(){d.getDimensions();d.o.autoResize?d.setContainerDimensions():d.o.autoPosition&&d.setPosition();if(c||h){d.fixIE()}else{if(d.o.modal){d.d.iframe&&d.d.iframe.css({height:a[0],width:a[1]});d.d.overlay.css({height:i[0],width:i[1]})}}})},unbindEvents:function(){e("."+this.o.closeClass).unbind("click.simplemodal");f.unbind("keydown.simplemodal");g.unbind(".simplemodal");this.d.overlay.unbind("click.simplemodal")},fixIE:function(){var d=this,j=d.o.position;e.each([d.d.iframe||null,!d.o.modal?null:d.d.overlay,d.d.container.css("position")==="fixed"?d.d.container:null],function(v,n){if(n){var t="document.body.clientHeight",x="document.body.clientWidth",z="document.body.scrollHeight",w="document.body.scrollLeft",q="document.body.scrollTop",m="document.body.scrollWidth",l="document.documentElement.clientHeight",u="document.documentElement.clientWidth",r="document.documentElement.scrollLeft",A="document.documentElement.scrollTop",B=n[0].style;B.position="absolute";if(v<2){B.removeExpression("height");B.removeExpression("width");B.setExpression("height",""+z+" > "+t+" ? "+z+" : "+t+' + "px"');B.setExpression("width",""+m+" > "+x+" ? "+m+" : "+x+' + "px"')}else{var p,k;if(j&&j.constructor===Array){var y=j[0]?typeof j[0]==="number"?j[0].toString():j[0].replace(/px/,""):n.css("top").replace(/px/,"");p=y.indexOf("%")===-1?y+" + (t = "+A+" ? "+A+" : "+q+') + "px"':parseInt(y.replace(/%/,""))+" * (("+l+" || "+t+") / 100) + (t = "+A+" ? "+A+" : "+q+') + "px"';if(j[1]){var o=typeof j[1]==="number"?j[1].toString():j[1].replace(/px/,"");k=o.indexOf("%")===-1?o+" + (t = "+r+" ? "+r+" : "+w+') + "px"':parseInt(o.replace(/%/,""))+" * (("+u+" || "+x+") / 100) + (t = "+r+" ? "+r+" : "+w+') + "px"'}}else{p="("+l+" || "+t+") / 2 - (this.offsetHeight / 2) + (t = "+A+" ? "+A+" : "+q+') + "px"';k="("+u+" || "+x+") / 2 - (this.offsetWidth / 2) + (t = "+r+" ? "+r+" : "+w+') + "px"'}B.removeExpression("top");B.removeExpression("left");B.setExpression("top",p);B.setExpression("left",k)}}})},focus:function(l){var j=this,k=l&&e.inArray(l,["first","last"])!==-1?l:"first";
var d=e(":input:enabled:visible:"+k,j.d.wrap);setTimeout(function(){d.length>0?d.focus():j.d.wrap.focus()},10)},getDimensions:function(){var j=this,d=e.browser.opera&&e.browser.version>"9.5"&&e.fn.jquery<"1.3"||e.browser.opera&&e.browser.version<"9.5"&&e.fn.jquery>"1.2.6"?g[0].innerHeight:g.height();i=[f.height(),f.width()];a=[d,g.width()]},getVal:function(j,k){return j?(typeof j==="number"?j:j==="auto"?0:j.indexOf("%")>0?((parseInt(j.replace(/%/,""))/100)*(k==="h"?a[0]:a[1])):parseInt(j.replace(/px/,""))):null},update:function(d,k){var j=this;if(!j.d.data){return false}j.d.origHeight=j.getVal(d,"h");j.d.origWidth=j.getVal(k,"w");j.d.data.hide();d&&j.d.container.css("height",d);k&&j.d.container.css("width",k);j.setContainerDimensions();j.d.data.show();j.o.focus&&j.focus();j.unbindEvents();j.bindEvents()},setContainerDimensions:function(){var u=this,l=c||b;var d=u.d.origHeight?u.d.origHeight:e.browser.opera?u.d.container.height():u.getVal(l?u.d.container[0].currentStyle.height:u.d.container.css("height"),"h"),k=u.d.origWidth?u.d.origWidth:e.browser.opera?u.d.container.width():u.getVal(l?u.d.container[0].currentStyle.width:u.d.container.css("width"),"w"),p=u.d.data.outerHeight(true),j=u.d.data.outerWidth(true);u.d.origHeight=u.d.origHeight||d;u.d.origWidth=u.d.origWidth||k;var m=u.o.maxHeight?u.getVal(u.o.maxHeight,"h"):null,q=u.o.maxWidth?u.getVal(u.o.maxWidth,"w"):null,o=m&&m<a[0]?m:a[0],t=q&&q<a[1]?q:a[1];var n=u.o.minHeight?u.getVal(u.o.minHeight,"h"):"auto";if(!d){if(!p){d=n}else{if(p>o){d=o}else{if(u.o.minHeight&&n!=="auto"&&p<n){d=n}else{d=p}}}}else{d=u.o.autoResize&&d>o?o:d<n?n:d}var r=u.o.minWidth?u.getVal(u.o.minWidth,"w"):"auto";if(!k){if(!j){k=r}else{if(j>t){k=t}else{if(u.o.minWidth&&r!=="auto"&&j<r){k=r}else{k=j}}}}else{k=u.o.autoResize&&k>t?t:k<r?r:k}u.d.container.css({height:d,width:k});u.d.wrap.css({overflow:(p>d||j>k)?"auto":"visible"});u.o.autoPosition&&u.setPosition()},setPosition:function(){var k=this,m,l,n=(a[0]/2)-(k.d.container.outerHeight(true)/2),j=(a[1]/2)-(k.d.container.outerWidth(true)/2),d=k.d.container.css("position")!=="fixed"?g.scrollTop():0;if(k.o.position&&Object.prototype.toString.call(k.o.position)==="[object Array]"){m=d+(k.o.position[0]||n);l=k.o.position[1]||j}else{m=d+n;l=j}k.d.container.css({left:l,top:m})},watchTab:function(j){var d=this;if(e(j.target).parents(".simplemodal-container").length>0){d.inputs=e(":input:enabled:visible:first, :input:enabled:visible:last",d.d.data[0]);if((!j.shiftKey&&j.target===d.inputs[d.inputs.length-1])||(j.shiftKey&&j.target===d.inputs[0])||d.inputs.length===0){j.preventDefault();var k=j.shiftKey?"last":"first";d.focus(k)}}else{j.preventDefault();d.focus()}},open:function(){var d=this;d.d.iframe&&d.d.iframe.show();if(e.isFunction(d.o.onOpen)){d.o.onOpen.apply(d,[d.d])}else{d.d.overlay.show();d.d.container.show();d.d.data.show()}d.o.focus&&d.focus();d.bindEvents()},close:function(){var d=this;if(!d.d.data){return false}d.unbindEvents();if(e.isFunction(d.o.onClose)&&!d.occb){d.occb=true;d.o.onClose.apply(d,[d.d])}else{if(d.d.placeholder){var j=e("#simplemodal-placeholder");if(d.o.persist){j.replaceWith(d.d.data.removeClass("simplemodal-data").css("display",d.display))}else{d.d.data.hide().remove();j.replaceWith(d.d.orig)}}else{d.d.data.hide().remove()}d.d.container.hide().remove();d.d.overlay.hide();d.d.iframe&&d.d.iframe.hide().remove();d.d.overlay.remove();d.d={}}}}}));/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.myplaces.event.FinishedDrawingEvent",function(a){this._creator=null;if(a){if(a.geometry){this._drawing=a.geometry}if(a.modification){this._modification=a.modification}}},{__name:"MyPlaces.FinishedDrawingEvent",getName:function(){return this.__name},getDrawing:function(){return this._drawing},isModification:function(){return this._modification}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.myplaces.event.MyPlaceHoverEvent",function(b,a,c){this._creator=null;this._lonlat=b;this._hoverEvent=a;this._zoom=c},{__name:"MyPlaces.MyPlaceHoverEvent",getName:function(){return this.__name},getHoverEvent:function(){return this._hoverEvent},getLonLat:function(){return this._lonlat},getZoomLevel:function(){return this._zoom}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.myplaces.event.MyPlacesChangedEvent",function(a){this._creator=null},{__name:"MyPlaces.MyPlacesChangedEvent",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.myplaces.event.MyPlaceSelectedEvent",function(b,a){this._creator=null;this._myPlace=b;this._dblClick=a},{__name:"MyPlaces.MyPlaceSelectedEvent",getName:function(){return this.__name},getPlace:function(){return this._myPlace},isDblClick:function(){return this._dblClick}},{protocol:["Oskari.mapframework.event.Event"]});Ext.define("Oskari.mapframework.bundle.myplaces.model.MyPlace",{extend:"Ext.data.Model",fields:["id","name","description","categoryID","geometry","createDate","updateDate"]});Ext.define("Oskari.mapframework.bundle.myplaces.model.MyPlacesCategory",{extend:"Ext.data.Model",fields:["id","name","isDefault","lineWidth","lineColor","fillColor","dotSize","dotColor"]});Oskari.clazz.define("Oskari.mapframework.myplaces.mapmodule.DrawPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this.drawControls=null;this.drawLayer=null;this.editMode=false;this.currentDrawMode=null},{__name:"MyPlaces.DrawPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this._map=a.getMap();this.pluginName=a.getName()+this.__name},startDrawing:function(b){if(b.isModify){this.modifyControls.modify.selectControl.select(this.drawLayer.features[0])}else{this.drawLayer.removeAllFeatures();if(b.geometry){this.editMode=true;var a=[new OpenLayers.Feature.Vector(b.geometry)];this.drawLayer.addFeatures(a);this.modifyControls.modify.selectControl.select(this.drawLayer.features[0])}else{this.editMode=false;this.toggleControl(b.drawMode)}}},stopDrawing:function(){this.toggleControl();this.drawLayer.removeAllFeatures()},forceFinishDraw:function(){try{this.drawControls[this.currentDrawMode].finishSketch()}catch(a){this.stopDrawing();var b=this._sandbox.getEventBuilder("MyPlaces.MyPlaceSelectedEvent")();this._sandbox.notifyAll(b)}},finishedDrawing:function(){this.toggleControl();var a=this.getDrawing();if(this.editMode){a.modification=this.editMode}else{this.modifyControls.modify.selectControl.select(this.drawLayer.features[0])}var b=this._sandbox.getEventBuilder("MyPlaces.FinishedDrawingEvent")(a);this._sandbox.notifyAll(b)},toggleControl:function(b){this.currentDrawMode=b;for(var a in this.drawControls){var c=this.drawControls[a];if(b==a){c.activate()}else{c.deactivate()}}},init:function(a){var c=this;this.requestHandlers={startDrawingHandler:Oskari.clazz.create("Oskari.mapframework.myplaces.request.StartDrawingRequestPluginHandler",a,c),stopDrawingHandler:Oskari.clazz.create("Oskari.mapframework.myplaces.request.StopDrawingRequestPluginHandler",a,c),getGeometryHandler:Oskari.clazz.create("Oskari.mapframework.myplaces.request.GetGeometryRequestPluginHandler",a,c)};this.drawLayer=new OpenLayers.Layer.Vector("MyPlaces Draw Layer",{eventListeners:{featuresadded:function(d){c.finishedDrawing()}}});this.drawControls={point:new OpenLayers.Control.DrawFeature(c.drawLayer,OpenLayers.Handler.Point),line:new OpenLayers.Control.DrawFeature(c.drawLayer,OpenLayers.Handler.Path),area:new OpenLayers.Control.DrawFeature(c.drawLayer,OpenLayers.Handler.Polygon)};
this.modifyControls={modify:new OpenLayers.Control.ModifyFeature(c.drawLayer)};this._map.addLayers([c.drawLayer]);for(var b in this.drawControls){this._map.addControl(this.drawControls[b])}for(var b in this.modifyControls){this._map.addControl(this.modifyControls[b])}this.modifyControls.modify.activate()},getDrawing:function(a){return{geometry:this.drawLayer.features[0].geometry}},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;a.register(this);a.addRequestHandler("MyPlaces.StartDrawingRequest",this.requestHandlers.startDrawingHandler);a.addRequestHandler("MyPlaces.StopDrawingRequest",this.requestHandlers.stopDrawingHandler);a.addRequestHandler("MyPlaces.GetGeometryRequest",this.requestHandlers.getGeometryHandler)},stopPlugin:function(a){a.removeRequestHandler("MyPlaces.StartDrawingRequest",this.requestHandlers.startDrawingHandler);a.removeRequestHandler("MyPlaces.StopDrawingRequest",this.requestHandlers.stopDrawingHandler);a.removeRequestHandler("MyPlaces.GetGeometryRequest",this.requestHandlers.getGeometryHandler);a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.myplaces.request.GetGeometryRequestPluginHandler",function(a,b){this.sandbox=a;this.drawPlugin=b},{handleRequest:function(a,c){var d=c.getCallBack();this.sandbox.printDebug("[Oskari.mapframework.myplaces.request.GetGeometryRequestPluginHandler] geometry requested");var b=this.drawPlugin.getDrawing();d(b.geometry)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.myplaces.request.StartDrawingRequestPluginHandler",function(a,b){this.sandbox=a;this.drawPlugin=b},{handleRequest:function(a,b){var c=b.getDrawMode();this.sandbox.printDebug("[Oskari.mapframework.myplaces.request.StartDrawingRequestPluginHandler] Start Drawing: "+c);this.drawPlugin.startDrawing({drawMode:b.getDrawMode(),geometry:b.getGeometry(),isModify:b.isModify(),style:""})}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.myplaces.request.StopDrawingRequestPluginHandler",function(a,b){this.sandbox=a;this.drawPlugin=b},{handleRequest:function(a,b){this.sandbox.printDebug("[Oskari.mapframework.myplaces.request.StopDrawingRequestPluginHandler] Stop drawing");if(b.isPropagate()){this.drawPlugin.forceFinishDraw()}else{this.drawPlugin.stopDrawing()}}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.myplaces.mapmodule.HoverPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"MyPlaces.HoverPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this._map=a.getMap();this.pluginName=a.getName()+this.__name},init:function(a){var b=this;OpenLayers.Control.Hover=OpenLayers.Class(OpenLayers.Control,{defaultHandlerOptions:{delay:500,pixelTolerance:null,stopMove:false},initialize:function(c){this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions);OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Hover(this,{pause:this.onPause,move:this.onMove},this.handlerOptions)},onPause:function(c){},onMove:function(c){}});this.hoverControl=new OpenLayers.Control.Hover({handlerOptions:{delay:500,pixelTolerance:6},onPause:function(c){var e=b._map.getLonLatFromPixel(c.xy);var d=a.getEventBuilder("MyPlaces.MyPlaceHoverEvent")(e,c,b._map.getZoom());a.notifyAll(d)}});this._map.addControl(this.hoverControl)},activate:function(){this.hoverControl.activate()},deactivate:function(){this.hoverControl.deactivate()},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;a.register(this)},stopPlugin:function(a){a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});
Oskari.clazz.define("Oskari.mapframework.myplaces.request.StopDrawingRequest",function(a){this._creator=null;if(a===true){this._propagateFinished=a}},{__name:"MyPlaces.StopDrawingRequest",getName:function(){return this.__name},isPropagate:function(){return(this._propagateFinished===true)}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.myplaces.request.StartDrawingRequest",function(a){this._creator=null;if(a.geometry){this._geometry=a.geometry}else{if(a.continueCurrent){this._continueCurrent=a.continueCurrent}else{if(!this.drawModes[a.drawMode]){throw"Unknown draw mode '"+a.drawMode+"'"}this._drawMode=a.drawMode}}},{__name:"MyPlaces.StartDrawingRequest",getName:function(){return this.__name},isModify:function(){if(this._continueCurrent){return true}return false},drawModes:{point:"point",line:"line",area:"area"},getDrawMode:function(){return this._drawMode},getGeometry:function(){return this._geometry}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.myplaces.request.GetGeometryRequest",function(a){this._creator=null;this._callbackMethod=a},{__name:"MyPlaces.GetGeometryRequest",getName:function(){return this.__name},getCallBack:function(){return this._callbackMethod}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.service.MyPlacesService",function(c){this._config=c;this._categoryList=new Array();this._placesList=new Array();this.wfstStore=Oskari.clazz.create("Oskari.mapframework.service.MyPlacesWFSTStore",c.url,c.user);this.wfstStore.connect();this._sandbox=c.sandbox;this.defaults=c.defaults;var f=this;var e=function(){if(f.getAllCategories().length===0){}else{f._notifyDataChanged()}};var a=false;var b=false;var g=function(){a=true;if(f.getAllCategories().length===0&&c.defaults){var h=Ext.create("Oskari.mapframework.bundle.myplaces.model.MyPlacesCategory",{name:c.defaults.categoryName,lineWidth:c.defaults.lineWidth,lineColor:c.defaults.lineColor,fillColor:c.defaults.fillColor,dotColor:c.defaults.dotColor,dotSize:c.defaults.dotSize,isDefault:true});f.saveCategory(h,e)}else{if(b){f._notifyDataChanged()}}};var d=function(){b=true;if(a){f._notifyDataChanged()}b=true};this.wfstStore.getCategories(this,g);this.wfstStore.getMyPlaces(this,d)},{__qname:"Oskari.mapframework.service.MyPlacesService",getQName:function(){return this.__qname},__name:"MyPlacesService",getName:function(){return this.__name},_addCategory:function(a){this._categoryList.push(a)},_movePlacesToCategory:function(g,c,f){var e=this;var b=this.getPlacesInCategory(g);if(b.length==0){f(true);return}for(var d=0;d<b.length;d++){b[d].set("categoryID",c)}var a=function(i,h){e._notifyDataChanged();f(i,h[0])};this.wfstStore.commitMyPlaces(b,a)},_deletePlacesInCategory:function(f,g){var b=this.getPlacesInCategory(f);var e=[];for(var c=0;c<b.length;c++){e.push(b[c].get("id"))}if(e.length==0){g(true);return}var d=this;var a=function(k,j){if(k){for(var h=0;h<b.length;h++){d._removeMyPlace(j[h])}d._notifyDataChanged()}g(k)};this.wfstStore.deleteMyPlaces(e,a)},parseDate:function(c){if(!c&&c.length<10){return[]}var j=c.substring(0,4);var h=c.substring(5,7);var k=c.substring(8,10);var a=[k+"."+h+"."+j];var b="";if(c.length==29){b=c.substring(11);var i=b.split("+");b=i[0];b=b.split(".")[0];var f=b.split(":");var d=f[0];var e=f[1];var g=f[2];b=d+":"+e+":"+g;a.push(b)}return a},getPlacesInCategory:function(b){var c=[];for(var a=0;a<this._placesList.length;a++){if(this._placesList[a].get("categoryID")===b){c.push(this._placesList[a])}}return c},deleteCategory:function(e,d,f){var c=this;var a=function(h,g){if(h){c._deleteEmptyCategory(e,f)}else{f(h)}};if(d===true){var b=c.getDefaultCategory();c._movePlacesToCategory(e,b.get("id"),a)}else{c._deletePlacesInCategory(e,a)}},_deleteEmptyCategory:function(c,d){var b=this;var a=function(f,e){if(f){b._removeCategory(e[0])}d(f);b._notifyDataChanged()};this.wfstStore.deleteCategories([c],a)},_removeCategory:function(b){for(var a=0;a<this._categoryList.length;a++){if(this._categoryList[a].get("id")==b){this._categoryList.splice(a,1);
break}}},saveCategory:function(d,e){var c=this;var a=!(d.get("id"));var b=function(g,f){if(a&&g){c._addCategory(f[0])}else{}c._notifyDataChanged();e(g,f[0],a)};this.wfstStore.commitCategories([d],b)},getAllCategories:function(){return this._categoryList},getDefaultCategory:function(){var a=this.findBy(this._categoryList,"isDefault",true);if(a!==-1){return this._categoryList[a]}throw"Should not happen"},_addMyPlace:function(a){this._placesList.push(a)},_removeMyPlace:function(b){var a=this.findBy(this._placesList,"id",b);if(a!==-1){this._placesList.splice(a,1)}},_notifyDataChanged:function(){var a=this._sandbox.getEventBuilder("MyPlaces.MyPlacesChangedEvent")();this._sandbox.notifyAll(a)},deleteMyPlace:function(b,d){var c=this;var a=function(f,e){if(f){c._removeMyPlace(e[0]);c._notifyDataChanged()}d(f,e[0])};this.wfstStore.deleteMyPlaces([b],a)},findMyPlaceByLonLat:function(g,f){var c=[];var h=this.getAllMyPlaces();for(var d=0;d<h.length;++d){var e=h[d].get("geometry");var b=false;if("OpenLayers.Geometry.Point"===e.CLASS_NAME){var a=720-(f*f*5);if(f>10){a=5}else{if(f>8){a=20}else{if(f>5){a=50}}}b=e.atPoint(g,a,a)}else{b=e.atPoint(g)}if(b){c.push(h[d])}}return c},findMyPlace:function(b){var a=this.findBy(this._placesList,"id",b);if(a!==-1){return this._placesList[a]}return null},findCategory:function(b){var a=this.findBy(this._categoryList,"id",b);if(a!==-1){return this._categoryList[a]}return null},findBy:function(c,b,d){for(var a=0;a<c.length;a++){if(c[a].get(b)===d){return a}}return -1},saveMyPlace:function(b,e){var d=this;var a=!(b.get("id"));var c=function(h,g){if(a&&h){d._addMyPlace(g[0])}else{var f=d.findMyPlace(g[0].get("id"));if(f){f.set("updateDate",g[0].get("updateDate"))}else{h=false}}d._notifyDataChanged();e(h,g[0],a)};this.wfstStore.commitMyPlaces([b],c)},getAllMyPlaces:function(){return this._placesList}},{protocol:["Oskari.mapframework.service.Service"]});Oskari.clazz.define("Oskari.mapframework.service.MyPlacesWFSTStore",function(a,b){this.uuid=b;this.protocols={};this.url=a},{connect:function(){var a=this.url;this.protocols.categories=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:"EPSG:3067",featureType:"categories",featureNS:"http://www.paikkatietoikkuna.fi",url:a});this.protocols.my_places=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:"EPSG:3067",geometryName:"geometry",featureType:"my_places",featureNS:"http://www.paikkatietoikkuna.fi",url:a})},getCategories:function(b,a){var c=this.uuid;var f=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"uuid",value:c});var e=this.protocols.categories;var d=this;e.read({filter:f,callback:function(g){d._handleCategoriesResponse(g,b,a)}})},_handleCategoriesResponse:function(e,i,d){var a=this.uuid;var g=e.features;if(g==null||g.length==0){if(d){d()}return}for(var c=0;c<g.length;c++){var h=g[c];var l=h.attributes;var b=this._parseNumericId(h.fid);var j=false;if("true"===l["default"]){j=true}var k={id:b,name:l.category_name,isDefault:j,lineWidth:l.stroke_width,lineColor:l.stroke_color,fillColor:l.fill_color,dotColor:l.dot_color,dotSize:l.dot_size,uuid:a};i._addCategory(Ext.create("Oskari.mapframework.bundle.myplaces.model.MyPlacesCategory",k))}if(d){d()}},commitCategories:function(i,k){var a=this.uuid;var b=this.protocols.categories;var j=this;var c=[];for(var f=0;f<i.length;f++){var d=i[f];var g=d.get("id");var e=d.get("isDefault");if(!e){e=false}var n={category_name:d.get("name"),"default":e,stroke_width:d.get("lineWidth"),stroke_color:d.get("lineColor"),fill_color:d.get("fillColor"),dot_color:d.get("dotColor"),dot_size:d.get("dotSize"),uuid:a};var h=new OpenLayers.Feature.Vector(null,n);if(!g){h.toState(OpenLayers.State.INSERT)}else{h.fid=b.featureType+"."+g;h.state=OpenLayers.State.UPDATE}c.push(h)}b.commit(c,{callback:function(l){j._handleCommitCategoriesResponse(l,i,k)}})},_handleCommitCategoriesResponse:function(f,j,d){if(f.success()){var c=f.reqFeatures;var a,l;var e=[];var k=f.insertIds||[];for(var g=0,h=c.length;g<h;++g){l=c[g];a=l.state;if(a){if(a==OpenLayers.State.INSERT){l.fid=k[g];l.attributes.id=l.fid;var b=this._parseNumericId(l.fid);
j[g].set("id",b)}l.state=null}}d(true,j)}else{d(false,j)}},deleteCategories:function(g,i){var b=this.protocols.categories;var a=this.uuid;var c=[];for(var d=0;d<g.length;d++){var e=g[d];if(!e){continue}var j={uuid:a};var f=new OpenLayers.Feature.Vector(null,j);f.fid=b.featureType+"."+e;f.state=OpenLayers.State.DELETE;c.push(f)}var h=this;b.commit(c,{callback:function(k){h._handleDeleteCategoriesResponse(k,g,i)}})},_handleDeleteCategoriesResponse:function(b,c,a){if(b.success()){a(true,c)}else{a(false,c)}},_parseNumericId:function(a){var b=a.split(".")[1];return b},getMyPlaces:function(b,a){var c=this.uuid;var f=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"uuid",value:c});var e=this.protocols.my_places;var d=this;e.read({filter:f,callback:function(g){d._handleMyPlacesResponse(g,b,a)}})},_handleMyPlacesResponse:function(e,i,d){var a=this.uuid;var g=e.features;if(g==null){return}if(g.length==0){return}for(var c=0;c<g.length;c++){var h=g[c];var k=h.attributes;var b=this._parseNumericId(h.fid);var j={id:b,name:k.name,description:k.place_desc,categoryID:k.category_id,createDate:k.created,updateDate:k.updated,uuid:a,geometry:h.geometry};i._addMyPlace(Ext.create("Oskari.mapframework.bundle.myplaces.model.MyPlace",j))}if(d){d()}},getMyPlacesByIdList:function(f,b){var d=this.uuid;var g=this.protocols.my_places;var a=g.featureType+"."+id;var c=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"uuid",value:d}),new OpenLayers.Filter.FeatureId({fids:f})]});var e=this;g.read({filter:c,callback:function(h){e._handleMyPlaceByIdResponse(h,b)}})},_handleMyPlaceByIdResponse:function(g,e){var a=this.uuid;var h=g.features;if(h==null||h.length==0){return}var c=[];for(var d=0;d<h.length;d++){var i=h[d];var k=i.attributes;var b=this._parseNumericId(i.fid);var j={id:b,name:k.name,description:k.place_desc,categoryID:k.category_id,createDate:k.created,updateDate:k.updated,uuid:a,geometry:i.geometry};c.push(Ext.create("Oskari.mapframework.bundle.myplaces.model.MyPlace",j))}if(e){e(c)}},commitMyPlaces:function(h,k){var b=this.protocols.my_places;var a=this.uuid;var c=[];for(var e=0;e<h.length;e++){var d=h[e];var f=d.get("id");var j=d.get("geometry");var n={name:d.get("name"),place_desc:d.get("description"),category_id:d.get("categoryID"),uuid:a};var g=new OpenLayers.Feature.Vector(j,n);if(!f){g.toState(OpenLayers.State.INSERT)}else{g.fid=b.featureType+"."+f;g.state=OpenLayers.State.UPDATE}c.push(g)}var i=this;b.commit(c,{callback:function(l){i._handleCommitMyPlacesResponse(l,h,k)}})},_handleCommitMyPlacesResponse:function(f,k,d){if(f.success()){var c=f.reqFeatures;var a,n;var e=[];var m=f.insertIds||[];var l=[];for(var h=0,j=c.length;h<j;++h){n=c[h];a=n.state;if(a){if(a==OpenLayers.State.INSERT){n.fid=m[h];n.attributes.id=n.fid;var b=this._parseNumericId(n.fid);k[h].set("id",b);l.push(b)}else{l.push(k[h].get("id"))}n.state=null}}var g=function(i){d(true,i)};this.getMyPlacesByIdList(l,g)}else{d(false,k)}},deleteMyPlaces:function(g,i){var b=this.protocols.my_places;var a=this.uuid;var c=[];for(var d=0;d<g.length;d++){var e=g[d];if(!e){continue}var j={uuid:a};var f=new OpenLayers.Feature.Vector(null,j);f.fid=b.featureType+"."+e;f.state=OpenLayers.State.DELETE;c.push(f)}var h=this;b.commit(c,{callback:function(k){h._handleDeleteMyPlacesResponse(k,g,i)}})},_handleDeleteMyPlacesResponse:function(b,c,a){if(b.success()){a(true,c)}else{a(false,c)}},disconnect:function(){}},{protocol:["Oskari.mapframework.myplaces.service.Store"]});Oskari.clazz.define("Oskari.mapframework.ui.module.myplaces.MyPlacesModule",function(a){this._sandbox=null;this.uiItems={};this._config=a;this.myPlacesService=null;this.disableMapEvents=false;this.initialLoad=true;this.selectedMyPlace=null;this.localization={};this.defaults={};this.idPrefix="myplaces";this.defaults.dotColor="993300";this.defaults.lineColor="993300";this.defaults.fillColor="993300";this.defaults.lineWidth="1";this.defaults.dotSize="4";this.defaults.categoryName="Omat paikat"
},{__name:"MyPlacesModule",getName:function(){return this.__name},setDisableMapEvents:function(a){this.disableMapEvents=(a===true)},init:function(g){this._sandbox=g;var j=g;var f=this;j.printDebug("Initializing my places module...");this._populateLanguageSet(j);var d=j.getUser();if(d.isLoggedIn()){f._config.userKey=d.getUuid();this.defaults.categoryName=this.defaults.categoryName+" - "+d.getName()}var i=j.findRegisteredModuleInstance("MainMapModule");var a=Oskari.clazz.create("Oskari.mapframework.myplaces.mapmodule.DrawPlugin");i.registerPlugin(a);i.startPlugin(a);this.drawPlugin=a;var h=Oskari.clazz.create("Oskari.mapframework.myplaces.mapmodule.HoverPlugin");i.registerPlugin(h);i.startPlugin(h);this.hoverPlugin=h;this.myPlacesService=Oskari.clazz.create("Oskari.mapframework.service.MyPlacesService",{sandbox:j,user:f._config.userKey,url:f._config.actionUrl,defaults:f.defaults});for(var b in this.eventHandlers){j.registerForEventByName(this,b)}var e=Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesGridPanel",{id:"myplaces-gridpanel",oskariConfig:{module:f,sandbox:j,service:f.myPlacesService,localizationSet:f.localization}});this.uiItems.gridPanel=e;var c=Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesMainPanel",{id:"myplaces-mainpanel",oskariConfig:{module:f,sandbox:j,localizationSet:f.localization}});this.uiItems.mainPanel=c;this.wizardPanel=Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesWizard",{oskariConfig:{service:f.myPlacesService,sandbox:f._sandbox,localizationSet:f.localization,module:f}});return c},_populateLanguageSet:function(b){var c=b.getLanguage();var a=Oskari.clazz.create("Oskari.mapframework.bundle.myplaces.ui.module.Locale",c);this.localization=a.getCurrentLocale();if("en"===c){this.defaults.categoryName="My places"}else{if("sv"===c){this.defaults.categoryName="Mina platser"}}if(!this.localization){this.localization=a.getLocale("fi")}},saveMyPlaceGeometry:function(){if(!this.selectedMyPlace){return}var b=this;var c=function(d){b.uiItems.mainPanel.setLoading(b.localization.savemask);b.selectedMyPlace.set("geometry",d);var e=function(f){b._saveMyPlaceGeometryCallback(f)};b.myPlacesService.saveMyPlace(b.selectedMyPlace,e)};var a=this._sandbox.getRequestBuilder("MyPlaces.GetGeometryRequest")(c);this._sandbox.request(this.getName(),a)},_saveMyPlaceGeometryCallback:function(d){var c=this;this.uiItems.mainPanel.setLoading(false);if(d){var a=this.getMapLayerId();var b=this._sandbox.getRequestBuilder("MapModulePlugin.MapLayerUpdateRequest")(a,true);this._sandbox.request(this.getName(),b)}else{alert(this.localization.errorSave)}},myPlaceFinished:function(c,d){var b=this;if(c){if(this.wizardPanel){this.wizardPanel.setLoading(this.localization.savemask)}var a=function(g,f,e){b._commitMyPlaceCallback(g,c,e,d)};this.myPlacesService.saveMyPlace(c,a)}else{this.cleanupAfterMyPlaceOperation()}},_commitMyPlaceCallback:function(f,e,a,g){var d=this;if(this.wizardPanel){this.wizardPanel.setLoading(false)}this.uiItems.mainPanel.setLoading(false);if(f){this.cleanupAfterMyPlaceOperation();var b=e.get("categoryID");this.uiItems.gridPanel.showCategory(b);var c=this._sandbox.getRequestBuilder("MapModulePlugin.MapLayerUpdateRequest")(this.getMapLayerId(b),true);this._sandbox.request(this.getName(),c);if(g!==b){var c=this._sandbox.getRequestBuilder("MapModulePlugin.MapLayerUpdateRequest")(this.getMapLayerId(g),true);this._sandbox.request(this.getName(),c)}}else{alert(this.localization.errorSave)}},cleanupAfterMyPlaceOperation:function(){var a=this._sandbox.getEventBuilder("MyPlaces.MyPlaceSelectedEvent")();this._sandbox.notifyAll(a);this.uiItems.mainPanel.sendStopDrawRequest();this.closeWizard()},startWizard:function(){var b=this;if(this.wizardPanel&&this.wizardPanel.isVisible()){this.closeWizard()}this.wizardPanel=Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesWizard",{oskariConfig:{service:b.myPlacesService,sandbox:b._sandbox,localizationSet:b.localization,module:b}});var a=this.uiItems.gridPanel.getSelectedCategory();if(a){this.wizardPanel.setSelectedCategory(a.get("id"))
}this.wizardPanel.show();if(this.selectedMyPlace){this.wizardPanel.setPlace(this.selectedMyPlace)}},closeWizard:function(){if(this.wizardPanel){this.wizardPanel.hide();this.wizardPanel.removeAll(true);this.wizardPanel.destroy();this.wizardPanel=null}},start:function(a){a.printDebug("Starting "+this.getName());Oskari.$("UI.facade").addUIComponent(this.getName()+"_grid",this.uiItems.gridPanel,"S")},stop:function(a){Oskari.$("UI.facade").removeUIComponent(this.getName()+"_grid")},processStartupLinkLayers:function(k){var c=k.getRequestParameter("mapLayers");if(c===null||c===""){return}var g=c.split(",");var d=true;for(var f=0;f<g.length;f++){var j=g[f].split("+");var e=j[0];var h=j[1];if(e!==null&&e.indexOf(this.idPrefix)!==-1){var b=null;var a=null;b=k.getRequestBuilder("AddMapLayerRequest");a=b(e,d);k.request(this.getName(),a);b=k.getRequestBuilder("ChangeMapLayerOpacityRequest");a=b(e,h);k.request(this.getName(),a)}}},getDrawModeFromGeometry:function(b){var a=b.CLASS_NAME;if("OpenLayers.Geometry.Point"===a){return"point"}else{if("OpenLayers.Geometry.LineString"===a){return"line"}else{if("OpenLayers.Geometry.Polygon"===a){return"area"}}}return null},formatMessage:function(d,c){var b=d;for(var a in c){b=b.replace("{"+a+"}",c[a])}return b},deleteMyPlace:function(){var b=this;if(this.selectedMyPlace){this.uiItems.mainPanel.setLoading(this.localization.deletemask);var a=function(c){b._deleteMyPlaceCallback(c)};this.myPlacesService.deleteMyPlace(this.selectedMyPlace.get("id"),a)}},_deleteMyPlaceCallback:function(e){var d=this;var b=this.selectedMyPlace.get("categoryID");var a=this.getMapLayerId();this.uiItems.mainPanel.setLoading(false);if(e){this.cleanupAfterMyPlaceOperation()}else{alert(this.localization.errorDelete)}var c=this._sandbox.getRequestBuilder("MapModulePlugin.MapLayerUpdateRequest")(a,true);this._sandbox.request(this.getName(),c)},handleFinishedDrawingEvent:function(a){if(!a.isModification()){this.startWizard()}},getSelectedPlace:function(){return this.selectedMyPlace},_handlePlacesChanged:function(){if(this.wizardPanel){this.wizardPanel.refreshCategories()}var e=this._sandbox.getService("Oskari.mapframework.service.MapLayerService");var d=this.myPlacesService.getAllCategories();var b=e.getAllLayersByMetaType(this.idPrefix);for(var c=0;c<b.length;++c){var f=b[c];var m=false;for(var g=0;g<d.length;++g){var h=d[g];if(this.getMapLayerId(h.get("id"))===f.getId()){m=true}}if(!m){this._sandbox.requestByName(this.getName(),"RemoveMapLayerRequest",[f.getId()]);e.removeLayer(f.getId());var l=f.getId().substring(this.idPrefix.length+1);this.uiItems.gridPanel.removeCategory(l)}}for(var g=0;g<d.length;++g){var h=d[g];var m=false;for(var c=0;c<b.length;++c){if(this.getMapLayerId(h.get("id"))===b[c].getId()){m=true;if(h.get("name")!==b[c].getName()){var a={name:h.get("name")};e.updateLayer(b[c].getId(),a)}}}if(!m){var k=this.getMapLayerJson(h);var j=e.createMapLayer(k);e.addLayer(j)}this.uiItems.gridPanel.addOrUpdateCategory(h)}if(this.initialLoad){this.processStartupLinkLayers(this._sandbox);this.initialLoad=false;this.uiItems.gridPanel.showCategory()}},handleMyPlaceSelected:function(a){this.selectedMyPlace=a;if(this.wizardPanel&&this.wizardPanel.isVisible()){this.wizardPanel.setPlace(this.selectedMyPlace)}this.uiItems.mainPanel.placeSelected(a)},eventHandlers:{"MyPlaces.FinishedDrawingEvent":function(a){this.handleFinishedDrawingEvent(a)},"MyPlaces.MyPlaceSelectedEvent":function(a){Oskari.$("UI.facade").expandPart("E");this.uiItems.mainPanel.expand(true);this.handleMyPlaceSelected(a.getPlace());if(a.isDblClick()){this.startWizard()}},"MyPlaces.MyPlacesChangedEvent":function(a){this._handlePlacesChanged()},"MyPlaces.MyPlaceHoverEvent":function(a){if(this.disableMapEvents===false){this.uiItems.gridPanel.handleHover(a)}},AfterMapLayerRemoveEvent:function(d){var c=d.getMapLayer();if(c.getMetaType&&c.getMetaType()===this.idPrefix){var a=this._sandbox.getService("Oskari.mapframework.service.MapLayerService");var b=a.getAllLayersByMetaType(this.idPrefix);if(b.length===0){this.hoverPlugin.deactivate()}}},MapClickedEvent:function(a){if(this.disableMapEvents===false){this.uiItems.gridPanel.handleMapClick(a)
}},AfterMapLayerAddEvent:function(c){var b=c.getMapLayer();if(b.getMetaType&&b.getMetaType()===this.idPrefix){Oskari.$("UI.facade").expandPart("E");this.uiItems.mainPanel.expand(true);Oskari.$("UI.facade").showUIComponent(this.getName()+"_grid");var a=b.getId().substring(this.idPrefix.length+1);this.uiItems.gridPanel.showCategory(a);this.hoverPlugin.activate()}}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},addLayerToMap:function(d){var a=this.getMapLayerId(d);var b=this._sandbox.findMapLayerFromSelectedMapLayers(a);if(!b){var c=this._sandbox.getRequestBuilder("AddMapLayerRequest")(a,true);this._sandbox.request(this.getName(),c)}},getMapLayerId:function(b){if(!b){if(this.selectedMyPlace){b=this.selectedMyPlace.get("categoryID")}else{var a=this.myPlacesService.getDefaultCategory();if(a){b=a.get("id")}else{b="-99"}}}return this.idPrefix+"_"+b},getMapLayerJson:function(b){var a=this._getMapLayerJsonBase();a.wmsUrl=this._config.wmsUrl+b.get("id")+"&";a.name=b.get("name");a.id=this.getMapLayerId(b.get("id"));return a},_getMapLayerJsonBase:function(){var a={wmsName:"ows:my_places_categories",descriptionLink:"",orgName:this.localization.title,type:"wmslayer",metaType:this.idPrefix,baseLayerId:-1,legendImage:"",gfi:"disabled",formats:{value:"text/html"},isQueryable:false,minScale:12000000,opacity:75,inspire:this.localization.title,maxScale:1};return a}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.bundle.myplaces.ui.module.Locale",function(a){this.lang=a;this.loc=this.__locale[a]},{__locale:{fi:{title:"Omat paikat <b style='color:#F4A529'>BETA</b>",saveBtn:"Tallenna",deleteConfirmTitle:"Poistetaanko?",loadmask:"Ladataan...",savemask:"Tallennetaan...",deletemask:"Poistetaan...",errorSave:"Virhe tallennuksessa!",errorDelete:"Virhe poistossa!",mainpanel:{myPlacesDesc:"Toiminnolla voit tallentaa kohteita kartalle. Kohteet l철ytyv채t Omat paikat -karttatasoilta. Aloita valitsemalla kohteen tyyppi:",btnPoint:"Lis채채 piste",btnLine:"Lis채채 reitti",btnArea:"Lis채채 alue",drawHelp:{point:"Lis채채 piste klikkaamalla kartalla.",line:'Lis채채 viivan taitepiste klikkaamalla kartalla. Lopeta piirto tuplaklikkauksella tai painamalla "Lopeta piirto".',area:'Lis채채 alueen taitepiste klikkaamalla kartalla. Lopeta piirto tuplaklikkauksella tai painamalla "Lopeta piirto".'},btnCancelDraw:"Keskeyt채 piirto",btnFinishDraw:"Lopeta piirto",selectionHelp:"Kohteen saat valittua muokattavaksi klikkaamalla sit채 kartalla tai taulukossa.",editHelp:{point:"Siirr채 pistett채 raahaamalla sit채 kartalla.",line:"Muokkaa viivaa raahaamalla viivan taitepisteit채 kartalla.",area:"Muokkaa muotoa raahaamalla reunaviivan taitepisteit채 kartalla.",desc:'Muokkaa kohteen tietoja painamalla "Muokkaa" nappia.'},editSaveBtn:{point:"Tallenna sijainti",line:"Tallenna muoto",area:"Tallenna muoto"},btnEdit:"Muokkaa",deleteHelp:'Valitun kohteen saat poistettua painamalla "Poista" nappia.',btnDelete:"Poista",deleteConfirm:"Paikan nimi: "},wizard:{title:"Kohteen tiedot",categoryLabel:"Karttataso"},myplace:{addTip:"Lis채채 uusi karttataso",editTip:"Muokkaa karttatasoa",cancelBtn:"Sulje tallentamatta",placeName:"Nimi",placeDesc:"Kuvaus",placeCreateDate:"Kohde luotu",placeUpdateDate:"Kohde p채ivitetty",errorNoName:"Anna paikalle nimi",errorCategoryNotSelected:"Valitse karttataso tai anna uudelle karttatasolle nimi"},category:{deleteTip:"Poista karttataso",lineColorLabel:"Viivan tai reunaviivan v채ri",fillColorLabel:"Alueen t채ytt철v채ri",lineWidthLabel:"Viivan tai reunaviivan leveys",dotSizeLabel:"Pisteen koko",dotColorLabel:"Pisteen v채ri",backBtn:"Takaisin",errorNoName:"Anna karttatasolle nimi",errorDeleteDefault:"Oletuskarttatasoa ei voi poistaa"},confirm:{deleteConfirm:'Karttataso: "{0}". Sis채lt채채 paikkoja: {1} kpl.',deleteConfirmMoveText:'Haluatko siirt채채 paikat oletuskarttatasolle "{0}"?',btnMove:"Siirr채 paikat ja poista karttataso",btnDelete:"Poista karttataso",btnDeleteAll:"Poista karttataso paikkoineen",btnCancel:"Peruuta"},grid:{title:"Omat paikat <b style='color:#F4A529'>BETA</b>",placeName:"Nimi",placeDesc:"Kuvaus",linkHeader:"Kohdistus",linkValue:"N채yt채 kohde",type:{label:"Tyyppi",point:"Piste",line:"Viiva",area:"Alue"},createDate:"Kohde luotu",updateDate:"Kohde p채ivitetty"}},sv:{title:"Mina platser <b style='color:#F4A529'>BETA</b>",saveBtn:"Spara",deleteConfirmTitle:"Radera?",loadmask:"Laddar...",savemask:"Lagrar...",deletemask:"Raderar...",errorSave:"Fel vid lagring!",errorDelete:"Fel vid radering!",mainpanel:{myPlacesDesc:'Du kan lagra objekt p책 kartan med funktionen "Mina platser". Objekten finns p책 kartlagren Mina platser. B철rja genom att v채lja typen av objekt:',btnPoint:"Tills채tt punkt",btnLine:"Tills채tt rutt",btnArea:"Tills채tt omr책de",drawHelp:{point:"Till채gg en punkt genom att klicka p책 kartan.",line:'Till채gg en brytningspunkt p책 linjen genom att klicka p책 kartan. Sluta rita genom att dubbelklicka, eller klicka p책 knappen "Avsluta ritandet".',area:'Till채gg en brytningspunkt p책 omr책det genom att klicka p책 kartan. Sluta rita genom att dubbelklicka, eller klicka p책 knappen "Avsluta ritandet".'},btnCancelDraw:"Avbryt ritandet",btnFinishDraw:"Avsluta ritandet",selectionHelp:"Du kan bearbeta objektet genom att klicka det p책 kartan eller i tabellen.",editHelp:{point:"Flytta p책 punkten genom att klicka och sl채pa det p책 kartan.",line:"Bearbeta rutten genom att klicka och sl채pa dess brytningspunkt p책 kartan.",area:"Bearbeta figuren genom att klicka och sl채pa kantlinjens brytningspunkter p책 kartan.",desc:'Bearbeta informationen om objektet genom att klicka p책 "Bearbeta".'},editSaveBtn:{point:"Spara l채ge",line:"Spara figur",area:"Spara figur"},btnEdit:"Bearbeta",deleteHelp:'Radera det valda objektet genom att klicka p책 "Radera".',btnDelete:"Radera",deleteConfirm:"Platsens namn: "},wizard:{title:"Information om objektet",categoryLabel:"Kartlager"},myplace:{addTip:"Till채gg ett kartlager",editTip:"Bearbeta kartlagret",cancelBtn:"St채ng utan att lagra",placeName:"Namn",placeDesc:"Beskrivning",placeCreateDate:"Objektet skapades",placeUpdateDate:"Objektet uppdaterades",errorNoName:"Namnge platsen",errorCategoryNotSelected:"V채lj kartlager eller namnge ett nytt kartlager"},category:{deleteTip:"Radera kartlagret",lineColorLabel:"Linjens eller kantlinjens f채rg",fillColorLabel:"Omr책dets ifyllnadsf채rg",lineWidthLabel:"Linjens eller kantlinjens bredd",dotSizeLabel:"Punktens storlek",dotColorLabel:"Punktens f채rg",backBtn:"Tillbaka",errorNoName:"Namnge kartlagret",errorDeleteDefault:"Det f철rvalda kartlagret kan inte raderas"},confirm:{deleteConfirm:'Kartlager: "{0}". Antal platser: {1}',deleteConfirmMoveText:'Vill du flytta platserna till det f철rvalda kartlagret "{0}"?',btnMove:"Flytta platserna och radera kartlagret",btnDelete:"Radera kartlagret",btnDeleteAll:"Radera kartlagret inkl. platserna",btnCancel:"Tillbaka"},grid:{title:"Mina platser <b style='color:#F4A529'>BETA</b>",placeName:"Namn",placeDesc:"Beskrivning",linkHeader:"Fokusering",linkValue:"Vis objekt",type:{label:"Typ",point:"Punkt",line:"Linje",area:"Omr책de"},createDate:"Objektet skapades",updateDate:"Objektet uppdaterades"}},en:{title:"My places <b style='color:#F4A529'>BETA</b>",saveBtn:"Save",deleteConfirmTitle:"Delete?",loadmask:"Loading...",savemask:"Saving...",deletemask:"Deleting...",errorSave:"Error while saving!",errorDelete:"Error while deleting!",mainpanel:{myPlacesDesc:'The function My places allows you to save objects on the map. Saved objects are stored in map layer group "My places". Please start by selecting type of object:',btnPoint:"Add point",btnLine:"Add route",btnArea:"Add area",drawHelp:{point:"Add a point by clicking on the map.",line:'Add a handle on the line by clicking on the map. Stop drawing by double-clicking or by clicking the button "Stop drawing".',area:'Add a handle on the boundary line of the area by clicking on the map. Stop drawing by double-clicking or by clicking the button "Stop drawing".'},btnCancelDraw:"Cancel drawing",btnFinishDraw:"Stop drawing",selectionHelp:"Start editing an object by clicking it on the map or in the table.",editHelp:{point:"Move a point object by clicking and dragging it on the map.",line:"Move and edit a route object by clicking and dragging the line handles on the map.",area:"Move and edit an area object by clicking and dragging the boundary line handles on the map.",desc:'Edit object information by clicking the "Edit"-button.'},editSaveBtn:{point:"Save location",line:"Save shape",area:"Save shape"},btnEdit:"Edit",deleteHelp:'Delete selected object by clicking the "Remove"-button.',btnDelete:"Delete",deleteConfirm:"Object name: "},wizard:{title:"Object information",categoryLabel:"Map layer"},myplace:{addTip:"Add a new map layer",editTip:"Edit map layer",cancelBtn:"Close without saving",placeName:"Name",placeDesc:"Description",placeCreateDate:"Object created",placeUpdateDate:"Object updated",errorNoName:"Type object name",errorCategoryNotSelected:"Select a map layer or type the name of a new map layer"},category:{deleteTip:"Delete map layer",lineColorLabel:"Colour of line or area boundary",fillColorLabel:"Fill colour of area",lineWidthLabel:"Width of line or area boundary",dotSizeLabel:"Point size",dotColorLabel:"Point colour",backBtn:"Back",errorNoName:"Type map layer name",errorDeleteDefault:"The default map layer cannot be deleted"},confirm:{deleteConfirm:'Map layer: "{0}". Number of places: {1}.',deleteConfirmMoveText:'Do you want to move places to the default map layer "{0}"?',btnMove:"Move places and delete map layer",btnDelete:"Delete map layer",btnDeleteAll:"Delete map layer and its places",btnCancel:"Cancel"},grid:{title:"My places <b style='color:#F4A529'>BETA</b>",placeName:"Name",placeDesc:"Description",linkHeader:"Focus",linkValue:"Show object",type:{label:"Type",point:"Point",line:"Line",area:"Area"},createDate:"Object created",updateDate:"Object updated"}}},getCurrentLocale:function(){return this.loc
},getLocale:function(a){return this.__locale[a]},getText:function(a){return this.loc[a]}});Ext.define("Oskari.mapframework.bundle.myplaces.ui.view.CategoryPanel",{extend:"Ext.panel.Panel",layout:"fit",border:false,frame:false,initComponent:function(){var a={};a.uiItems={};a.category=null;a.defaults=this.oskariConfig.defaults;a.loc={};a.loc.deleteTip=this.oskariConfig.localizationSet.category.deleteTip;a.loc.categoryLabel=this.oskariConfig.localizationSet.wizard.categoryLabel;a.loc.lineColorLabel=this.oskariConfig.localizationSet.category.lineColorLabel;a.loc.fillColorLabel=this.oskariConfig.localizationSet.category.fillColorLabel;a.loc.lineWidthLabel=this.oskariConfig.localizationSet.category.lineWidthLabel;a.loc.dotColorLabel=this.oskariConfig.localizationSet.category.dotColorLabel;a.loc.dotSizeLabel=this.oskariConfig.localizationSet.category.dotSizeLabel;a.loc.backBtn=this.oskariConfig.localizationSet.category.backBtn;a.loc.saveBtn=this.oskariConfig.localizationSet.saveBtn;a.loc.deleteConfirmTitle=this.oskariConfig.localizationSet.deleteConfirmTitle;a.loc.deleteConfirm=this.oskariConfig.localizationSet.category.deleteConfirm;a.loc.errorNoName=this.oskariConfig.localizationSet.category.errorNoName;a.loc.errorDeleteDefault=this.oskariConfig.localizationSet.category.errorDeleteDefault;this._buildItems(a);this._buildDockedButtons(a);Ext.apply(this,Ext.apply(this.initialConfig,a));this.callParent(arguments)},setParams:function(f){var d=this;if(f.isNew||f.categoryModel.get("isDefault")){d.uiItems.deleteCategoryButton.disable()}else{d.uiItems.deleteCategoryButton.enable()}d.uiItems.categoryName.setValue(f.categoryModel.get("name"));var a=f.categoryModel.get("lineWidth");if(!a){a=d.defaults.lineWidth}d.uiItems.lineWidthCombo.select(a);var b=f.categoryModel.get("dotSize");if(!b){b=d.defaults.dotSize}d.uiItems.dotSizeCombo.select(b);var g=f.categoryModel.get("fillColor");if(!g){g=d.defaults.fillColor}d.uiItems.fillColorPicker.select(g);var e=f.categoryModel.get("lineColor");if(!e){e=d.defaults.lineColor}d.uiItems.lineColorPicker.select(e);var c=f.categoryModel.get("dotColor");if(!c){c=d.defaults.dotColor}d.uiItems.dotColorPicker.select(c);d.category=f.categoryModel},_buildItems:function(d){var i=Ext.create("Ext.picker.Color",{value:d.defaults.dotColor,fieldLabel:d.loc.dotColorLabel});d.uiItems.dotColorPicker=i;var j=Ext.create("Ext.picker.Color",{value:d.defaults.lineColor,fieldLabel:d.loc.lineColorLabel});d.uiItems.lineColorPicker=j;var l=Ext.create("Ext.picker.Color",{value:d.defaults.fillColor,fieldLabel:d.loc.fillColorLabel});d.uiItems.fillColorPicker=l;var n=Ext.create("Ext.data.Store",{fields:["lineWidth"],data:[{lineWidth:"1"},{lineWidth:"2"},{lineWidth:"4"},{lineWidth:"8"},{lineWidth:"16"}]});var k=Ext.create("Ext.data.Store",{fields:["dotSize"],data:[{dotSize:"1"},{dotSize:"2"},{dotSize:"4"},{dotSize:"8"},{dotSize:"16"}]});var f=Ext.create("Ext.form.ComboBox",{fieldLabel:d.loc.dotSizeLabel,border:true,frame:true,editable:false,forceSelection:true,value:d.defaults.dotSize,store:k,displayField:"dotSize",valueField:"dotSize",queryMode:"local"});d.uiItems.dotSizeCombo=f;var h=Ext.create("Ext.form.ComboBox",{fieldLabel:d.loc.lineWidthLabel,border:true,frame:true,editable:false,forceSelection:true,value:d.defaults.lineWidth,store:n,displayField:"lineWidth",valueField:"lineWidth",queryMode:"local"});d.uiItems.lineWidthCombo=h;var a=Ext.create("Ext.panel.Panel",{bodyPadding:10,layout:"fit",items:[{xtype:"label",forId:"dotColorPicker",text:d.loc.dotColorLabel},i]});var b=Ext.create("Ext.panel.Panel",{bodyPadding:10,layout:"fit",items:[{xtype:"label",forId:"lineColorPicker",text:d.loc.lineColorLabel},j]});var g=Ext.create("Ext.panel.Panel",{bodyPadding:10,layout:"fit",items:[{xtype:"label",forId:"fillColorPicker",text:d.loc.fillColorLabel},l]});var e=Ext.create("Ext.panel.Panel",{border:false,frame:false,bodyPadding:10,layout:"hbox",items:[a,b,g]});var m=Ext.create("Ext.panel.Panel",{border:false,frame:false,bodyPadding:10,layout:"hbox",items:[f,h]});var c=Ext.create("Ext.form.Panel",{border:false,frame:false,bodyPadding:10,items:[e,m]});
d.uiItems.mainPanel=c;d.items=[c]},_cancelCategoryEdit:function(){this.cancelAction()},_commitCategoryEdit:function(){var a=this;var b=a.uiItems.categoryName.getValue().trim();if(!b){alert(a.loc.errorNoName)}else{a.category.set("name",a.uiItems.categoryName.getValue());a.category.set("lineWidth",a.uiItems.lineWidthCombo.getValue());a.category.set("fillColor",a.uiItems.fillColorPicker.getValue());a.category.set("lineColor",a.uiItems.lineColorPicker.getValue());a.category.set("dotSize",a.uiItems.dotSizeCombo.getValue());a.category.set("dotColor",a.uiItems.dotColorPicker.getValue());this.finishedAction(a.category)}},_buildDockedButtons:function(a){var c=this;var e=Ext.create("Ext.form.TextField",{fieldLabel:a.loc.categoryLabel,emptyText:a.loc.errorNoName,flex:1});a.uiItems.categoryName=e;var f=Ext.create("Ext.button.Button",{cls:"x-btn-icon",scale:"small",iconCls:"myplaces_delete_category",tooltip:a.loc.deleteTip,handler:function(){if(c.category.get("isDefault")){alert(c.loc.errorDeleteDefault);return}c.deleteCategoryAction(c.category)}});a.uiItems.deleteCategoryButton=f;var d=Ext.create("Ext.Button",{text:a.loc.saveBtn,handler:function(){c._commitCategoryEdit()}});a.uiItems.saveButton=d;var b=Ext.create("Ext.Button",{text:a.loc.backBtn,handler:function(){c._cancelCategoryEdit()}});a.uiItems.backButton=b;a.dockedItems=[{xtype:"toolbar",dock:"top",items:[e,f]},{xtype:"toolbar",dock:"bottom",items:[{xtype:"tbfill"},b,d]}]}});Ext.define("Oskari.mapframework.bundle.myplaces.ui.view.ConfirmWindow",{extend:"Ext.window.Window",modal:true,width:400,layout:"fit",cls:Ext.baseCSSPrefix+"message-box",initComponent:function(){var a={};a.uiItems={};this._buildItems(a);this._buildDockedButtons(a);Ext.apply(this,Ext.apply(this.initialConfig,a));this.callParent(arguments)},_createButton:function(c){var b=this;var a=Ext.create("Ext.Button",{text:c.text,handler:function(){b.destroy();if(c.handler){c.handler()}}});return a},_buildItems:function(a){var b=this;b.topContainer=Ext.create("Ext.container.Container",{anchor:"100%",style:{padding:"10px",overflow:"hidden"},items:[b.iconComponent=Ext.create("Ext.Component",{cls:"ext-mb-icon "+Ext.Msg.QUESTION,width:50,height:35,style:{"float":"left"}}),b.promptContainer=Ext.create("Ext.container.Container",{layout:{type:"anchor"},items:[b.msg=Ext.create("Ext.Component",{autoEl:{tag:"span"},cls:"ext-mb-text",html:b.message})]})]});a.items=[b.topContainer]},_buildDockedButtons:function(b){var d=this;var e=[];for(var a in this.dialogButtons){var f=this.dialogButtons[a];if(f=="break"){e.push({xtype:"tbfill"})}else{var c=this._createButton(f);e.push(c)}}b.dockedItems=[{xtype:"toolbar",ui:"footer",dock:"bottom",items:e}]}});Ext.define("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacePanel",{extend:"Ext.panel.Panel",layout:"fit",border:false,frame:false,initComponent:function(){var a={};a.uiItems={};a.myPlace=Ext.create("Oskari.mapframework.bundle.myplaces.model.MyPlace",{name:"",description:""});a.loc={};a.loc.categoryLabel=this.oskariConfig.localizationSet.wizard.categoryLabel;a.loc.cancelBtn=this.oskariConfig.localizationSet.myplace.cancelBtn;a.loc.finishBtn=this.oskariConfig.localizationSet.saveBtn;a.loc.placeName=this.oskariConfig.localizationSet.myplace.placeName;a.loc.placeDesc=this.oskariConfig.localizationSet.myplace.placeDesc;a.loc.placeCreateDate=this.oskariConfig.localizationSet.myplace.placeCreateDate;a.loc.placeUpdateDate=this.oskariConfig.localizationSet.myplace.placeUpdateDate;a.loc.errorNoName=this.oskariConfig.localizationSet.myplace.errorNoName;a.loc.errorCategoryNotSelected=this.oskariConfig.localizationSet.myplace.errorCategoryNotSelected;a.loc.addTip=this.oskariConfig.localizationSet.myplace.addTip;a.loc.editTip=this.oskariConfig.localizationSet.myplace.editTip;a.category={};a.items=[this._buildItems(a)];this._buildDockedButtons(a);Ext.apply(this,Ext.apply(this.initialConfig,a));this.callParent(arguments)},_buildItems:function(a){var b=this._createFormFields(a);var c=Ext.create("Ext.form.Panel",{id:"myplace-popup-placepanel",border:false,frame:false,padding:10,hideMode:"offsets",style:"text-align: left;",fieldDefaults:{labelAlign:"top",msgTarget:"top"},defaults:{anchor:"100%"},items:b});
a.uiItems.mainPanel=c;return c},_createFormFields:function(c){var e=this;if(!c.myPlace){c.myPlace=Ext.create("Oskari.mapframework.bundle.myplaces.model.MyPlace",{name:"",description:""})}var d=[];var a=Ext.create("Ext.form.Text",{xtype:"textfield",name:"name",emptyText:c.loc.errorNoName,fieldLabel:c.loc.placeName,value:c.myPlace.get("name"),allowBlank:false});d.push(a);var b=Ext.create("Ext.form.TextArea",{name:"description",grow:false,value:c.myPlace.get("description"),fieldLabel:c.loc.placeDesc});d.push(b);if(c.myPlace.get("createDate")){var f=e._formatDate(c.myPlace.get("createDate"));d.push({xtype:"displayfield",labelAlign:"left",fieldLabel:c.loc.placeCreateDate,name:"createDate",value:f});f=e._formatDate(c.myPlace.get("updateDate"));d.push({xtype:"displayfield",labelAlign:"left",fieldLabel:c.loc.placeUpdateDate,name:"updateDate",value:f})}return d},_formatDate:function(b){var c=this.oskariConfig.service.parseDate(b);var e="";if(c.length==0){return""}else{if(c.length>1){var a=Oskari.$().startup.imageLocation+"/resource/silk-icons/clock.png";e='<img src="'+a+'" /> '+c[1]}}var d=Oskari.$().startup.imageLocation+"/resource/silk-icons/calendar.png";return'<img src="'+d+'" /> '+c[0]+" "+e},setPlace:function(a){if(a){this.myPlace=a;this.setSelectedCategory(a.get("categoryID"))}else{this.myPlace=Ext.create("Oskari.mapframework.bundle.myplaces.model.MyPlace",{name:"",description:""})}},saveValues:function(){var b=this.uiItems.mainPanel.getValues();this.myPlace.set("name",b.name);this.myPlace.set("description",b.description);try{var d=this._getCategorySelectionIndex();var c=this.categoryStore.getAt(d);this.myPlace.set("categoryID",c.get("id"))}catch(a){}},recreatePanel:function(){this.uiItems.mainPanel.removeAll();var a=this._createFormFields(this);this.uiItems.mainPanel.add(a)},_myPlaceFinished:function(){var b=this;try{var d=b.myPlace.get("categoryID");this.saveValues();if(!b.myPlace.get("name")){alert(b.loc.errorNoName);return}var c=this._getCategorySelectionIndex();this.finishedAction(b.myPlace,d)}catch(a){alert(a)}},_myPlaceCanceled:function(){this.finishedAction()},_getCategorySelectionIndex:function(){var b=this;var c=b.uiItems.categoryDropdown.getValue();if(!c){throw b.loc.errorCategoryNotSelected}var a=b.categoryStore.findBy(function(d,e){if(isNaN(c)){return d.get("name")==c}return d.get("id")==c});return a},_handleCategoryControls:function(i){var g=this;var f=-1;try{f=g._getCategorySelectionIndex()}catch(h){if(!i){alert(h);return}}var d=null;var c=(f==-1);var e=(c||i);if(e){var a="";if(c){a=g.uiItems.categoryDropdown.getValue()}d=Ext.create("Oskari.mapframework.bundle.myplaces.model.MyPlacesCategory",{name:a})}else{d=g.categoryStore.getAt(f)}var b={isNew:e,categoryModel:d};g.categoryOperation(b)},setCategories:function(a){var b=this;b.categoryStore.loadData(a)},setSelectedCategory:function(c){var b=this;if(!c){var a=this.oskariConfig.service.getDefaultCategory();c=a.get("id")}b.uiItems.categoryDropdown.setValue(c)},_handleCategoryButtons:function(){var c=this;try{var b=c._getCategorySelectionIndex();if(b==-1){this.uiItems.editCategoryButton.disable()}else{this.uiItems.editCategoryButton.enable()}}catch(a){}},_buildDockedButtons:function(d){var f=this;var a=Ext.create("Ext.form.ComboBox",{fieldLabel:d.loc.categoryLabel,store:f.categoryStore,id:"myplace-category-dropdown",typeAhead:true,typeAheadDelay:1000,flex:1,queryMode:"local",displayField:"name",valueField:"id",listeners:{specialKey:function(i,h){if(h.getKey()==h.ENTER){f._handleCategoryControls(false)}}}});d.uiItems.categoryDropdown=a;a.setValue(f.categoryStore.getAt(0));a.on("change",function(){f._handleCategoryButtons()});var b=Ext.create("Ext.button.Button",{cls:"x-btn-icon",scale:"small",iconCls:"myplaces_add_category",tooltip:d.loc.addTip,handler:function(){f._handleCategoryControls(true)}});d.uiItems.addCategoryButton=b;var e=Ext.create("Ext.button.Button",{cls:"x-btn-icon",scale:"small",iconCls:"myplaces_edit_category",tooltip:d.loc.editTip,handler:function(){f._handleCategoryControls(false)}});d.uiItems.editCategoryButton=e;var c=Ext.create("Ext.Button",{text:d.loc.finishBtn,handler:function(){f._myPlaceFinished()
}});d.uiItems.finishedButton=c;var g=Ext.create("Ext.Button",{text:d.loc.cancelBtn,handler:function(){f._myPlaceCanceled()}});d.uiItems.cancelButton=g;d.dockedItems=[{xtype:"toolbar",dock:"top",items:[a,e,b]},{xtype:"toolbar",dock:"bottom",items:[{xtype:"tbfill"},g,c]}]}});Ext.define("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesBasicControls",{extend:"Ext.panel.Panel",layout:"anchor",border:false,frame:false,initComponent:function(){var a={};a.uiItems={};a.mainPanel=this.oskariConfig.mainPanel;this._buildItems(a);Ext.apply(this,Ext.apply(this.initialConfig,a));this.callParent(arguments)},_buildItems:function(e){var g=this;var b=Ext.create("Ext.form.Label",{text:this.oskariConfig.localizationSet.mainpanel.myPlacesDesc});var a=Ext.create("Ext.Button",{tooltip:this.oskariConfig.localizationSet.mainpanel.btnPoint,cls:"x-btn-icon",scale:"large",flex:1,iconCls:"myplaces_draw_point",handler:function(){g.mainPanel.startNewDrawing({drawMode:"point"})}});var h=Ext.create("Ext.Button",{tooltip:this.oskariConfig.localizationSet.mainpanel.btnLine,cls:"x-btn-icon",scale:"large",flex:1,iconCls:"myplaces_draw_line",handler:function(){g.mainPanel.startNewDrawing({drawMode:"line"})}});var c=Ext.create("Ext.Button",{tooltip:this.oskariConfig.localizationSet.mainpanel.btnArea,cls:"x-btn-icon",scale:"large",flex:1,iconCls:"myplaces_draw_area",handler:function(){g.mainPanel.startNewDrawing({drawMode:"area"})}});e.uiItems.btnPoint=a;e.uiItems.btnLine=h;e.uiItems.btnArea=c;var f=Ext.create("Ext.panel.Panel",{border:false,frame:false,layout:"anchor",bodyPadding:"5 25",items:[a,h,c]});var d=Ext.create("Ext.form.Label",{text:this.oskariConfig.localizationSet.mainpanel.selectionHelp});e.items=[b,f,d]}});Ext.define("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesDrawControls",{extend:"Ext.panel.Panel",layout:"anchor",border:false,frame:false,initComponent:function(){var a={};a.uiItems={};a.category=null;a.module=this.oskariConfig.module;a.mainPanel=this.oskariConfig.mainPanel;this._buildItems(a);Ext.apply(this,Ext.apply(this.initialConfig,a));this.callParent(arguments)},setDrawMode:function(a){this.uiItems.drawHelp.update(this.oskariConfig.localizationSet.mainpanel.drawHelp[a]);if("point"===a){this.uiItems.btnFinishDraw.hide()}else{this.uiItems.btnFinishDraw.show()}},_buildItems:function(c){var e=this;var a=Ext.create("Ext.form.Label");c.uiItems.drawHelp=a;var g=Ext.create("Ext.Button",{text:this.oskariConfig.localizationSet.mainpanel.btnCancelDraw,scale:"medium",iconCls:"myplaces_draw_cancel",handler:function(){e.module.closeWizard();e.mainPanel.sendStopDrawRequest()}});var b=Ext.create("Ext.panel.Panel",{border:false,frame:false,bodyPadding:5,layout:"fit",items:[g]});var f=Ext.create("Ext.Button",{text:this.oskariConfig.localizationSet.mainpanel.btnFinishDraw,scale:"medium",handler:function(){e.mainPanel.sendStopDrawRequest(true)}});c.uiItems.btnFinishDraw=f;var d=Ext.create("Ext.panel.Panel",{border:false,frame:false,bodyPadding:5,layout:"fit",items:[f]});c.items=[a,d,b]}});Ext.define("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesGrid",{extend:"Ext.grid.Panel",layout:"fit",category:null,service:null,places:null,placesHandler:null,module:null,initComponent:function(){if(!Ext.ClassManager.get("MyPlaceGridModel")){var b=["id","name","desc","type","createDate","updateDate"];Ext.define("MyPlaceGridModel",{extend:"Ext.data.Model",fields:b})}var c={};var a=Ext.create("Ext.data.Store",{model:"MyPlaceGridModel"});c.store=a;c.title=this.category.get("name");this._buildItems(c);Ext.apply(this,Ext.apply(this.initialConfig,c));this.callParent(arguments);if(this.places){this.populateGrid(this.places)}},_formatDate:function(a){var b=this.service.parseDate(a);var c="";if(b.length==0){return""}else{if(b.length>1){c=b[1]}}return b[0]+" "+c},updateGrid:function(b,c){var a=this;this.category=b;this.setTitle(b.get("name"));this.populateGrid(c)},populateGrid:function(f){var e=this;var a=[];for(var b=0;b<f.length;++b){var c=e.module.getDrawModeFromGeometry(f[b].get("geometry"));var d=Ext.create("MyPlaceGridModel",{id:f[b].get("id"),name:f[b].get("name"),description:f[b].get("description"),linkText:'<a href="#" onClick="return false;">'+e.localizationSet.grid.linkValue+"</a>",createDate:e._formatDate(f[b].get("createDate")),updateDate:e._formatDate(f[b].get("updateDate")),type:e.localizationSet.grid.type[c]});
a.push(d)}this.getStore().loadData(a)},getCategory:function(){return this.category},selectPlace:function(b){if(b){var a=null;this.getStore().findBy(function(c,e){var d=c.get("id");if(d==b.get("id")){a=c}});if(a){this.getSelectionModel().select([a]);this._placeSelected(a,false)}}},_placeSelected:function(b,a){var c=this.service.findMyPlace(b.get("id"));this.placesHandler.placeSelected(c,a)},_buildItems:function(a){var b=this;var c=[{header:this.localizationSet.grid.placeName,dataIndex:"name"},{header:this.localizationSet.grid.placeDesc,flex:1,dataIndex:"description"},{header:this.localizationSet.grid.type.label,dataIndex:"type"},{header:this.localizationSet.grid.linkHeader,width:120,dataIndex:"linkText"},{header:this.localizationSet.grid.createDate,width:120,dataIndex:"createDate"},{header:this.localizationSet.grid.updateDate,width:120,dataIndex:"updateDate"}];a.listeners={itemdblclick:function(g,d,h,f,i){b._placeSelected(d,true)},itemclick:function(g,d,h,f,i){b._placeSelected(d,false)},cellClick:function(h,e,g,d,f,k,j,i){b._cellClicked(h,e,g,d,f,k,j,i)}};a.columns=c},_cellClicked:function(f,b,j,e,c,h,a,g){var i=f.getGridColumns()[j].dataIndex;if(i==="linkText"){var d=this.service.findMyPlace(e.get("id"));this.placesHandler.moveMapTo(d)}}});Ext.define("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesGridPanel",{extend:"Ext.tab.Panel",layout:"fit",initComponent:function(){var a={};a.uiItems={};a.service=this.oskariConfig.service;a.title=this.oskariConfig.localizationSet.grid.title;Ext.apply(this,Ext.apply(this.initialConfig,a));this.callParent(arguments);this.customTooltip=Ext.create("Ext.tip.ToolTip",{autoHide:true})},placeSelected:function(c,a){var b=this.oskariConfig.sandbox.getEventBuilder("MyPlaces.MyPlaceSelectedEvent")(c,a);this.oskariConfig.sandbox.notifyAll(b)},moveMapTo:function(c){var a=c.get("geometry").getCentroid();var b=this.oskariConfig.sandbox.getRequestBuilder("MapMoveRequest")(a.x,a.y,c.get("geometry").getBounds(),false);this.oskariConfig.sandbox.request(this.oskariConfig.module.getName(),b)},showCategory:function(b){if(!b){this.setActiveTab(0);return this.getActiveTab()}else{var a=this.child("#myplaceCat_"+b);this.setActiveTab(a.tab);a.show();return a}},removeCategory:function(b){var a=this.child("#myplaceCat_"+b);if(a){this.remove(a.tab);a.destroy();a=null}},addOrUpdateCategory:function(d){var c=this;var e=d.get("id");var a=this.child("#myplaceCat_"+e);var f=this.service.getPlacesInCategory(e);if(a){a.updateGrid(d,f)}else{var b=Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesGrid",{category:d,itemId:"myplaceCat_"+e,service:c.service,places:f,localizationSet:c.oskariConfig.localizationSet,placesHandler:c,module:c.oskariConfig.module});this.add(b)}},getSelectedCategory:function(){var a=this.getActiveTab();if(a){return a.getCategory()}return null},handleMapClick:function(d){var c=this.oskariConfig.sandbox.getMap().getZoom();var a=this.service.findMyPlaceByLonLat(d.getLonLat(),c);if(a.length>0){var b=this.showCategory(a[0].get("categoryID"));b.selectPlace(a[0])}},handleHover:function(d){var c=this.oskariConfig.sandbox.getMap().getZoom();var a=this.service.findMyPlaceByLonLat(d.getLonLat(),c);var f="";for(var b=0;b<a.length;++b){if(f){f=f+"<hr/>"}f=f+"<b>"+a[b].get("name")+"</b>";var e=a[b].get("description");if(e&&e.trim().length>0){f=f+"<br/>"+e}}if(f){this.customTooltip.update(f);this.customTooltip.show();this.customTooltip.setPagePosition(d.getHoverEvent().pageX,d.getHoverEvent().pageY)}else{this.customTooltip.hide()}}});Ext.define("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesMainPanel",{extend:"Ext.panel.Panel",layout:"fit",border:false,frame:false,initComponent:function(){var a={};a.uiItems={};a.category=null;a.title=this.oskariConfig.localizationSet.title;a.module=this.oskariConfig.module;this._buildItems(a);Ext.apply(this,Ext.apply(this.initialConfig,a));this.callParent(arguments)},startNewDrawing:function(a){var b=this.oskariConfig.sandbox.getEventBuilder("MyPlaces.MyPlaceSelectedEvent")();this.oskariConfig.sandbox.notifyAll(b);this.sendDrawRequest(a)},sendDrawRequest:function(a){var c=this;
var b=c.oskariConfig.sandbox.getRequestBuilder("MyPlaces.StartDrawingRequest")(a);c.oskariConfig.sandbox.request(c.oskariConfig.module.getName(),b);this.module.setDisableMapEvents(true);c.uiItems.basicControls.hide();if(!a.geometry){c.uiItems.drawControls.setDrawMode(a.drawMode,false);c.uiItems.drawControls.show()}c.oskariConfig.module.addLayerToMap()},sendStopDrawRequest:function(c){var b=this;var a=b.oskariConfig.sandbox.getRequestBuilder("MyPlaces.StopDrawingRequest")(c);b.oskariConfig.sandbox.request(b.oskariConfig.module.getName(),a);if(c!==true){this.module.setDisableMapEvents(false);b.uiItems.basicControls.show();b.uiItems.drawControls.hide()}},placeSelected:function(b){var a=this;a.uiItems.drawControls.hide();if(b){a.uiItems.basicControls.hide();a.uiItems.placeSelectedControls.show();a.uiItems.placeSelectedControls.placeSelected(b)}else{a.uiItems.placeSelectedControls.hide();a.uiItems.basicControls.show()}},_buildItems:function(c){var d=this;var b=Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesBasicControls",{oskariConfig:{localizationSet:d.oskariConfig.localizationSet,mainPanel:d}});c.uiItems.basicControls=b;var a=Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesDrawControls",{oskariConfig:{module:d.oskariConfig.module,localizationSet:d.oskariConfig.localizationSet,mainPanel:d},hidden:true});c.uiItems.drawControls=a;var f=Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesPlaceSelectedControls",{oskariConfig:{module:d.oskariConfig.module,localizationSet:d.oskariConfig.localizationSet,mainPanel:d},hidden:true});c.uiItems.placeSelectedControls=f;var e=Ext.create("Ext.panel.Panel",{border:false,frame:false,autoScroll:true,layout:"anchor",bodyPadding:10,items:[b,a,f]});c.uiItems.mainPanel=e;c.items=[e]}});Ext.define("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesWizard",{extend:"Ext.window.Window",height:400,width:600,layout:"fit",closable:false,id:"myplaces-popup",initComponent:function(){var a={};a.uiItems={};a.uiItems.panels={};a.wizard={};a.service=this.oskariConfig.service;a.title=this.oskariConfig.localizationSet.wizard.title;var b=Ext.create("Ext.data.Store",{model:"Oskari.mapframework.bundle.myplaces.model.MyPlacesCategory",data:a.service.getAllCategories()});a.categoryStore=b;a.place={};this._buildItems(a);a.wizard.currentView=a.uiItems.panels.myPlacePanel;Ext.apply(this,Ext.apply(this.initialConfig,a));this.callParent(arguments)},_buildItems:function(a){var d=this;var c=Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.CategoryPanel",{id:"myplace-popup-categorypanel",categoryStore:a.categoryStore,oskariConfig:{localizationSet:d.oskariConfig.localizationSet,defaults:d.oskariConfig.module.defaults},finishedAction:function(e){d._commitCategory(e)},deleteCategoryAction:function(e){d._confirmDeleteCategory(e)},cancelAction:function(){d._showMyPlaceForm()}});a.uiItems.panels.categoryPanel=c;var b=Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacePanel",{categoryStore:a.categoryStore,oskariConfig:{localizationSet:d.oskariConfig.localizationSet,service:d.oskariConfig.service},finishedAction:function(e,f){d._wizardFinished(e,f)},categoryOperation:function(e){d._showCategoryForm(e)}});a.uiItems.panels.myPlacePanel=b;a.items=[b]},_showCategoryForm:function(b){var a=this;a.uiItems.panels.myPlacePanel.saveValues();a.uiItems.panels.categoryPanel.setParams(b);a.wizard.currentView=a.uiItems.panels.categoryPanel;a._drawPanels()},_showMyPlaceForm:function(){var a=this;a.wizard.currentView=a.uiItems.panels.myPlacePanel;a.uiItems.panels.myPlacePanel.recreatePanel();a._drawPanels()},_confirmDeleteCategory:function(f){var e=this;var b=e.service.getDefaultCategory();var a=e.service.getPlacesInCategory(f.get("id"));var d=[{text:e.oskariConfig.localizationSet.confirm.btnCancel},"break"];var g=e.oskariConfig.localizationSet.confirm.btnDelete;var c=e.oskariConfig.module.formatMessage(e.oskariConfig.localizationSet.confirm.deleteConfirm,[f.get("name"),a.length]);if(a.length>0){c=c+"<br/><br/>"+e.oskariConfig.module.formatMessage(e.oskariConfig.localizationSet.confirm.deleteConfirmMoveText,[b.get("name")]);
d.push({text:e.oskariConfig.localizationSet.confirm.btnMove,handler:function(){e._deleteCategory(f,true)}});g=e.oskariConfig.localizationSet.confirm.btnDeleteAll}d.push({text:g,handler:function(){e._deleteCategory(f,false)}});Ext.create("Oskari.mapframework.bundle.myplaces.ui.view.ConfirmWindow",{title:e.oskariConfig.localizationSet.deleteConfirmTitle,message:c,dialogButtons:d}).show()},_deleteCategory:function(e,b){var d=this;var c=e.get("id");this.setLoading(d.oskariConfig.localizationSet.deletemask);var a=function(f){d._deleteCategoryCallback(f,b,c)};d.service.deleteCategory(c,b,a)},_deleteCategoryCallback:function(g,c,f){var e=this;this.setLoading(false);if(g){this.refreshCategories();if(c){this._showMyPlaceForm()}else{e.oskariConfig.module.cleanupAfterMyPlaceOperation()}if(c){var a=e.service.getDefaultCategory();var b=this.oskariConfig.module.getMapLayerId(a.get("id"));var d=this.oskariConfig.sandbox.getRequestBuilder("MapModulePlugin.MapLayerUpdateRequest")(b,true);this.oskariConfig.sandbox.request(this.oskariConfig.module.getName(),d)}}else{alert(this.oskariConfig.localizationSet.errorDelete)}},refreshCategories:function(){var a=this;a.uiItems.panels.myPlacePanel.setCategories(a.service.getAllCategories());a.uiItems.panels.myPlacePanel.setSelectedCategory()},_commitCategory:function(e){var d=this;this.setLoading(d.oskariConfig.localizationSet.savemask);var c=/\"/g;var b=e.get("name");e.set("name",b.replace(c,"'"));var a=function(h,g,f){d._commitCategoryCallback(h,g,f)};this.service.saveCategory(e,a)},_commitCategoryCallback:function(e,d,a){var c=this;this.setLoading(false);if(e){if(a){c.uiItems.panels.myPlacePanel.setCategories(c.service.getAllCategories());c.oskariConfig.module.addLayerToMap(d.get("id"))}else{var b=c.oskariConfig.sandbox.getRequestBuilder("MapModulePlugin.MapLayerUpdateRequest")(c.oskariConfig.module.getMapLayerId(d.get("id")),true);c.oskariConfig.sandbox.request(c.oskariConfig.module.getName(),b)}c.uiItems.panels.myPlacePanel.setSelectedCategory(d.get("id"));c._showMyPlaceForm()}else{alert(this.oskariConfig.localizationSet.errorSave)}},setPlace:function(a){this.uiItems.panels.myPlacePanel.setPlace(a);this.uiItems.panels.myPlacePanel.recreatePanel()},setSelectedCategory:function(a){this.uiItems.panels.myPlacePanel.setSelectedCategory(a)},_wizardFinished:function(c,e){var b=this;if(c){var d=function(f){c.set("geometry",f);b.oskariConfig.module.myPlaceFinished(c,e)};var a=b.oskariConfig.sandbox.getRequestBuilder("MyPlaces.GetGeometryRequest")(d);b.oskariConfig.sandbox.request(b.oskariConfig.module.getName(),a)}else{this.oskariConfig.module.myPlaceFinished(c)}},_drawPanels:function(){var a=this;a.removeAll(false);for(var b in a.uiItems.panels){a.uiItems.panels[b].hide()}a.add(a.wizard.currentView);a.wizard.currentView.show()}});Ext.define("Oskari.mapframework.bundle.myplaces.ui.view.MyPlacesPlaceSelectedControls",{extend:"Ext.panel.Panel",layout:"anchor",border:false,frame:false,title:"jee",closable:true,closeAction:"hide",initComponent:function(){var a={};a.uiItems={};a.module=this.oskariConfig.module;a.mainPanel=this.oskariConfig.mainPanel;this._buildItems(a);Ext.apply(this,Ext.apply(this.initialConfig,a));this.on("beforeclose",function(){this.module.cleanupAfterMyPlaceOperation()});this.callParent(arguments)},placeSelected:function(d){var b=this;if(d){var a={};a.geometry=d.get("geometry").clone();var c=this.oskariConfig.module.getDrawModeFromGeometry(a.geometry);a.drawMode=this.oskariConfig.module.getDrawModeFromGeometry(a.geometry);this.mainPanel.sendDrawRequest(a);this.setTitle(d.get("name"));this.uiItems.btnSave.setText(this.oskariConfig.localizationSet.mainpanel.editSaveBtn[a.drawMode]);this.uiItems.editHelp.update(this.oskariConfig.localizationSet.mainpanel.editHelp[a.drawMode]);this.uiItems.btnEdit.setTooltip(this.oskariConfig.localizationSet.mainpanel.btnEdit+": "+d.get("name"));this.uiItems.btnDelete.selectedPlace=d;this.uiItems.btnDelete.setTooltip(this.oskariConfig.localizationSet.mainpanel.btnDelete+": "+d.get("name"))}else{this.uiItems.btnDelete.selectedPlace=null}},_buildItems:function(b){var i=this;
var j=Ext.create("Ext.form.Label",{text:this.oskariConfig.localizationSet.mainpanel.editHelp.point});b.uiItems.editHelp=j;var c=Ext.create("Ext.Button",{text:this.oskariConfig.localizationSet.saveBtn,tooltip:this.oskariConfig.localizationSet.saveBtn,scale:"medium",handler:function(){i.oskariConfig.module.saveMyPlaceGeometry()}});var k=Ext.create("Ext.panel.Panel",{border:false,frame:false,bodyPadding:5,layout:"fit",items:[c]});b.uiItems.btnSave=c;var g=Ext.create("Ext.form.Label",{text:this.oskariConfig.localizationSet.mainpanel.editHelp.desc});var f=Ext.create("Ext.Button",{text:this.oskariConfig.localizationSet.mainpanel.btnEdit,tooltip:this.oskariConfig.localizationSet.mainpanel.btnEdit,scale:"medium",iconCls:"myplaces_edit_place",handler:function(){b.module.startWizard()}});var a=Ext.create("Ext.panel.Panel",{border:false,frame:false,bodyPadding:5,layout:"fit",items:[f]});b.uiItems.btnEdit=f;var h=Ext.create("Ext.form.Label",{text:this.oskariConfig.localizationSet.mainpanel.deleteHelp});var e=Ext.create("Ext.Button",{scale:"medium",tooltip:this.oskariConfig.localizationSet.mainpanel.btnDelete,iconCls:"myplaces_delete_place",text:this.oskariConfig.localizationSet.mainpanel.btnDelete,selectedPlace:null,handler:function(){Ext.Msg.show({title:i.oskariConfig.localizationSet.deleteConfirmTitle,modal:true,msg:i.oskariConfig.localizationSet.mainpanel.deleteConfirm+this.selectedPlace.get("name"),buttons:Ext.Msg.OKCANCEL,icon:Ext.MessageBox.QUESTION,fn:function(l){if(l==="ok"){i.oskariConfig.module.deleteMyPlace()}}})}});var d=Ext.create("Ext.panel.Panel",{border:false,frame:false,bodyPadding:5,layout:"fit",items:[e]});b.uiItems.btnDelete=e;b.items=[j,k,g,a,h,d]}});Oskari.clazz.define("Oskari.mapframework.bundle.MyPlacesBundleInstance",function(a){this.name="myplaces";this.mediator=null;this.sandbox=null;this.impl=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");this.impl=Oskari.clazz.create("Oskari.mapframework.ui.module.myplaces.MyPlacesModule",this.conf);var a=this.facade.appendExtensionModule(this.impl,this.name,{},this,"E",{fi:{title:"Omat Paikat"},sv:{title:"?"},en:{title:"My Places"}});this.def=a;this.impl.start(this.facade.getSandbox());this.mediator.setState("started");return this},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.impl.eventHandlers,this,this.def);this.def=null;this.impl=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.MyPlacesBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.wmts.mapmodule.plugin.WmtsLayerPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._supportedFormats={};this._wmtsLayerClazz=Oskari.clazz.create("Oskari.openlayers.Patch.layer.WMTS")},{__name:"WmtsLayerPlugin",getName:function(){return this.pluginName},getMap:function(){return this._map},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){this.getMapModule().setLayerPlugin("WmtsLayer",this)},unregister:function(){this.getMapModule().setLayerPlugin("WmtsLayer",null)},init:function(a){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterMapLayerAddEvent:function(a){this.afterMapLayerAddEvent(a)},AfterMapLayerRemoveEvent:function(a){this.afterMapLayerRemoveEvent(a)},AfterChangeMapLayerOpacityEvent:function(a){this.afterChangeMapLayerOpacityEvent(a)},AfterChangeMapLayerStyleEvent:function(a){this.afterChangeMapLayerStyleEvent(a)}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},preselectLayers:function(e){var b=this._sandbox;for(var d=0;d<e.length;d++){var c=e[d];var a=c.getId();if(!c.isLayerOfType("WMTS")){continue}b.printDebug("preselecting "+a);this.addMapLayerToMap(c,true,c.isBaseLayer())}},afterMapLayerAddEvent:function(a){this.addMapLayerToMap(a.getMapLayer(),a.getKeepLayersOrder(),a.isBasemap())},addMapLayerToMap:function(i,h,d){if(!i.isLayerOfType("WMTS")){return}var m=this;var b=m.getMap();var e=i.getWmtsMatrixSet().matrixIds;var c=i.getWmtsLayerDef();var j=null;if(i.isBaseLayer()){j="basemap_"+i.getId()}else{j="layer_"+i.getId()}var n=this._sandbox;var o=i.getWmtsUrls()[0];var a=i.getWmtsMatrixSet();var k={visibility:true,transparent:true,format:"image/png",url:o,layer:i.getWmtsName(),style:i.getCurrentStyle().getName(),matrixIds:a.matrixIds,matrixSet:a.identifier,isBaseLayer:i.isBaseLayer(),buffer:0,minScale:i.getMinScale(),maxScale:i.getMaxScale()};n.printDebug("[WmtsLayerPlugin] creating WMTS Layer "+a.identifier+" / "+k.id+"/"+k.layer+"/"+k.url);var g=OpenLayers.Util.applyDefaults(k,{url:o,name:j,style:i.getCurrentStyle().getName(),matrixIds:a.matrixIds,layerDef:c});var l=this._wmtsLayerClazz.getPatch();var f=new l(g);f.opacity=i.getOpacity()/100;n.printDebug("[WmtsLayerPlugin] created WMTS layer "+f);b.addLayers([f])},afterMapLayerRemoveEvent:function(b){var a=b.getMapLayer();this.removeMapLayerFromMap(a)},removeMapLayerFromMap:function(d){if(!d.isLayerOfType("WMTS")){return}if(d.isBaseLayer()){var b="";if(d.getSubLayers().length>0){for(var c=0;c<d.getSubLayers().length;c++){var a=this._map.getLayersByName("basemap_"+d.getSubLayers()[c].getId());a[0].destroy()}}else{var a=this._map.getLayersByName("layer_"+d.getId());a[0].destroy()}}else{var a=this._map.getLayersByName("layer_"+d.getId());a[0].destroy()}},getOLMapLayers:function(c){if(!c.isLayerOfType("WMTS")){return null}if(c.isBaseLayer()){var a="";if(c.getSubLayers().length>0){for(var b=0;b<c.getSubLayers().length;b++){return this._map.getLayersByName("basemap_"+c.getSubLayers()[b].getId())}}else{return this._map.getLayersByName("layer_"+c.getId())}}else{return this._map.getLayersByName("layer_"+c.getId())}return null},afterChangeMapLayerOpacityEvent:function(c){var b=c.getMapLayer();if(!b.isLayerOfType("WMTS")){return}if(b.isBaseLayer()){if(b.getSubLayers().length>0){for(var d=0;d<b.getSubLayers().length;d++){var a=this._map.getLayersByName("basemap_"+b.getSubLayers()[d].getId());a[0].setOpacity(b.getOpacity()/100)}}else{var a=this._map.getLayersByName("layer_"+b.getId());if(a[0]!=null){a[0].setOpacity(b.getOpacity()/100)}}}else{this._sandbox.printDebug("Setting Layer Opacity for "+b.getId()+" to "+b.getOpacity());var a=this._map.getLayersByName("layer_"+b.getId());
if(a[0]!=null){a[0].setOpacity(b.getOpacity()/100)}}},afterChangeMapLayerStyleEvent:function(c){var b=c.getMapLayer();if(!b.isLayerOfType("WMTS")){return}if(!b.isBaseLayer()){var a=this._map.getLayersByName("layer_"+b.getId());if(a!=null){a[0].mergeNewParams({styles:b.getCurrentStyle().getName()})}}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.wmts.domain.WmtsLayer",function(){this._id=null;this._name=null;this._WmtsLayerName=null;this._WmtsMatrixSet=null;this._inspireName=null;this._organizationName=null;this._dataUrl=null;this._type=null;this._opacity=null;this._featureInfoEnabled=null;this._subLayers=[];this._styles=[];this._description=null;this._WmtsUrls=[];this._dataUrl=null;this._legendImage=null;this._maxScale=null;this._minScale=null;this._queryable=null;this._currentStyle=null;this._visible=null;this._queryFormat=null;this._orderNumber=null;this._permissions={};this._geometry=[];this._geometryWKT=null},{setGeometryWKT:function(a){this._geometryWKT=a},getGeometryWKT:function(){return this._geometryWKT},setGeometry:function(a){this._geometry=a},getGeometry:function(){return this._geometry},addPermission:function(b,a){this._permissions[b]=a},removePermission:function(a){this._permissions[a]=null},getPermission:function(a){return this._permissions[a]},setId:function(a){this._id=a},getId:function(){return this._id},setQueryFormat:function(a){this._queryFormat=a},getQueryFormat:function(){return this._queryFormat},setName:function(a){this._name=a},getName:function(){return this._name},setWmtsName:function(a){this._WmtsName=a},getWmtsName:function(){return this._WmtsName},setWmtsMatrixSet:function(a){this._WmtsMatrixSet=a},getWmtsMatrixSet:function(){return this._WmtsMatrixSet},setWmtsLayerDef:function(a){this._WmtsLayerDef=a},getWmtsLayerDef:function(){return this._WmtsLayerDef},setType:function(a){this._type=a},getType:function(){return this._type},setOpacity:function(a){this._opacity=a},getOpacity:function(){return this._opacity},setDataUrl:function(a){this._dataUrl=a},getDataUrl:function(){return this._dataUrl},setOrganizationName:function(a){this._organizationName=a},getOrganizationName:function(){return this._organizationName},setInspireName:function(a){this._inspireName=a},getInspireName:function(){return this._inspireName},setFeatureInfoEnabled:function(a){this._featureInfoEnabled=a},isFeatureInfoEnabled:function(){if(this._featureInfoEnabled===true){return true}return false},setDescription:function(a){this._description=a},getDescription:function(){return this._description},addWmtsUrl:function(a){this._WmtsUrls.push(a)},getWmtsUrls:function(){return this._WmtsUrls},addStyle:function(a){this._styles.push(a)},getStyles:function(){return this._styles},addSubLayer:function(a){this._subLayers.push(a)},getSubLayers:function(){return this._subLayers},setLegendImage:function(a){this._legendImage=a},getLegendImage:function(){return this._legendImage},setMaxScale:function(a){this._maxScale=a},getMaxScale:function(){return this._maxScale},setMinScale:function(a){this._minScale=a},getMinScale:function(){return this._minScale},setQueryable:function(a){this._queryable=a},getQueryable:function(){return this._queryable},setAsGroupLayer:function(){this._type="GROUP_LAYER"},setAsBaseLayer:function(){this._type="BASE_LAYER"},setAsNormalLayer:function(){this._type="NORMAL_LAYER"},setOrderNumber:function(a){this._orderNumber=a},getOrderNumber:function(){return this._orderNumber},isBaseLayer:function(){if(this._type=="BASE_LAYER"){return true}else{return false}},selectStyle:function(b){var c=null;if(this._styles.length>0){if(b!==""){for(var a=0;a<this._styles.length;a++){c=this._styles[a];if(c.getName()==b){this._currentStyle=c;return}}}else{if(this._styles.length>1){this._currentStyle=this._styles[0]}else{c=Oskari.clazz.create("Oskari.mapframework.domain.Style");c.setName("");c.setTitle("");c.setLegend("");this._currentStyle=c}return}}else{c=Oskari.clazz.create("Oskari.mapframework.domain.Style");c.setName("");c.setTitle("");c.setLegend("");
this._currentStyle=c;return}c=Oskari.clazz.create("Oskari.mapframework.domain.Style");c.setName("");c.setTitle("");c.setLegend("");this._currentStyle=c},getCurrentStyle:function(){return this._currentStyle},isVisible:function(){return this._visible},setVisible:function(a){this._visible=a},isInScale:function(c){var b=this.isBaseLayer();if(!c){var a=Oskari.$().sandbox;c=a.getMap().getScale()}if(!this.isBaseLayer()){if(c>this.getMaxScale()&&c<this.getMinScale()){b=true}}return b},isLayerOfType:function(a){return a=="WMTS"||a=="wmtslayer"},isGroupLayer:function(){if(this._type=="GROUP_LAYER"){return true}else{return false}}});Oskari.clazz.define("Oskari.mapframework.wmts.service.WMTSLayerService",function(a){this.mapLayerService=a;this.capabilities={};this.capabilitiesClazz=Oskari.clazz.create("Oskari.openlayers.Patch.WMTSCapabilities_v1_0_0")},{setCapabilities:function(a,b){this.capabilities[a]=b},getCapabilities:function(a){return this.capabilities[a]},readWMTSCapabilites:function(a,e,d){var b=this;var c=this.capabilitiesClazz.getPatch();var f=new c();OpenLayers.Request.GET({url:e,params:{SERVICE:"WMTS",VERSION:"1.0.0",REQUEST:"GetCapabilities"},success:function(h){var i=h.responseXML;if(!i||!i.documentElement){i=h.responseText}var g=f.read(i);b.setCapabilities(a,g);b.parseCapabilitiesToLayers(a,g,d)},failure:function(){alert("Trouble getting capabilities doc");OpenLayers.Console.error.apply(OpenLayers.Console,arguments)}})},parseCapabilitiesToLayers:function(b,a,d){var t=this;var e=this.mapLayerService;var r=null;if(a.operationsMetadata.GetTile.dcp.http.getArray){r=a.operationsMetadata.GetTile.dcp.http.getArray}else{r=a.operationsMetadata.GetTile.dcp.http.get}var u=a.contents.layers;var q=a.contents;var d=q.tileMatrixSets[d];for(var k=0;k<u.length;k++){var c=u[k];var g=c.identifier;var s=c.identifier;var l={name:g,minScale:10000000,maxScale:1,opacity:100,wmtsName:g,descriptionLink:"",orgName:"WMTS",type:"wmtslayer",legendImage:"",formats:{value:"text/html"},isQueryable:true,minScale:4*4*4*4*40000,style:"",dataUrl:"",name:g,opacity:100,inspire:"WMTS",maxScale:1};var v=Oskari.clazz.create("Oskari.mapframework.wmts.domain.WmtsLayer");v.setAsNormalLayer();v.setId(g);v.setName(l.name);v.setWmtsName(l.wmtsName);v.setOpacity(l.opacity);v.setMaxScale(l.maxScale);v.setMinScale(l.minScale);v.setDescription(l.info);v.setDataUrl(l.dataUrl);v.setOrganizationName(l.orgName);v.setInspireName(l.inspire);v.setWmtsMatrixSet(d);v.setWmtsLayerDef(c);v.addWmtsUrl(r);var h=Oskari.clazz.builder("Oskari.mapframework.domain.Style");var j;for(var m=0,f=c.styles.length;m<f;++m){j=c.styles[m];var o=h();o.setName(j.identifier);o.setTitle(j.identifier);v.addStyle(o);if(j.isDefault){v.selectStyle(j.identifier);break}}e.addLayer(v,false)}}});Oskari.clazz.define("Oskari.mapframework.wmts.service.WmtsLayerModelBuilder",function(){},{parseLayerData:function(d,e,g){d.setWmtsName(e.wmsName);if(e.wmsUrl){var j=e.wmsUrl.split(",");for(var c=0;c<j.length;c++){d.addWmtsUrl(j[c])}}var f=Oskari.clazz.builder("Oskari.mapframework.domain.Style");var b;for(var c=0,h=e.styles.length;c<h;++c){b=e.styles[c];var a=f();a.setName(b.identifier);a.setTitle(b.identifier);d.addStyle(a);if(b.isDefault){d.selectStyle(b.identifier);break}}d.setFeatureInfoEnabled(true);if(e.tileMatrixSetData){d.setWmtsMatrixSet(e.tileMatrixSetData);d.setWmtsLayerDef(e.tileLayerData)}}});Oskari.clazz.define("Oskari.openlayers.Patch.WMTSCapabilities_v1_0_0",function(){},{getPatch:function(){if(this.patch){return this.patch}return this.buildPatch()},buildPatch:function(){this.patch=OpenLayers.Class(OpenLayers.Format.OWSCommon.v1_1_0,{version:"1.0.0",namespaces:{ows:"http://www.opengis.net/ows/1.1",wmts:"http://www.opengis.net/wmts/1.0",xlink:"http://www.w3.org/1999/xlink"},yx:null,defaultPrefix:"wmts",initialize:function(b){OpenLayers.Format.XML.prototype.initialize.apply(this,[b]);this.options=b;var a=OpenLayers.Util.extend({},OpenLayers.Format.WMTSCapabilities.prototype.yx);this.yx=OpenLayers.Util.extend(a,this.yx)},read:function(b){if(typeof b=="string"){b=OpenLayers.Format.XML.prototype.read.apply(this,[b])
}if(b&&b.nodeType==9){b=b.documentElement}var a={};this.readNode(b,a);a.version=this.version;return a},props:{wmts:{TileMatrixLimits:{MinTileRow:["minTileRow",parseInt],MaxTileRow:["maxTileRow",parseInt],MinTileCol:["minTileCol",parseInt],MaxTileCol:["maxTileCol",parseInt],TileMatrix:["tileMatrix",null]}}},readers:{wmts:{Capabilities:function(a,b){this.readChildNodes(a,b)},Contents:function(a,b){b.contents={};b.contents.layers=[];b.contents.tileMatrixSets={};this.readChildNodes(a,b.contents)},Layer:function(b,c){var a={styles:[],formats:[],tileMatrixSetLinks:[],tileMatrixSetLinksMap:{}};a.layers=[];this.readChildNodes(b,a);c.layers.push(a)},Style:function(b,c){var a={};a.isDefault=(b.getAttribute("isDefault")==="true");this.readChildNodes(b,a);c.styles.push(a)},Format:function(a,b){b.formats.push(this.getChildValue(a))},TileMatrixSetLink:function(b,c){var a={};this.readChildNodes(b,a);c.tileMatrixSetLinks.push(a);c.tileMatrixSetLinksMap[a.tileMatrixSet]=a},TileMatrixSet:function(b,c){if(c.layers){var a={matrixIds:[]};this.readChildNodes(b,a);c.tileMatrixSets[a.identifier]=a}else{c.tileMatrixSet=this.getChildValue(b)}},TileMatrix:function(b,c){var a={supportedCRS:c.supportedCRS};this.readChildNodes(b,a);c.matrixIds.push(a)},ScaleDenominator:function(a,b){b.scaleDenominator=parseFloat(this.getChildValue(a))},TopLeftCorner:function(d,f){var c=this.getChildValue(d);var e=c.split(" ");var a;if(f.supportedCRS){var b=f.supportedCRS.replace(/urn:ogc:def:crs:(\w+):.+:(\w+)$/,"urn:ogc:def:crs:$1::$2");a=!!this.yx[b]}if(a){f.topLeftCorner=new OpenLayers.LonLat(e[1],e[0])}else{f.topLeftCorner=new OpenLayers.LonLat(e[0],e[1])}},TileWidth:function(a,b){b.tileWidth=parseInt(this.getChildValue(a))},TileHeight:function(a,b){b.tileHeight=parseInt(this.getChildValue(a))},MatrixWidth:function(a,b){b.matrixWidth=parseInt(this.getChildValue(a))},MatrixHeight:function(a,b){b.matrixHeight=parseInt(this.getChildValue(a))},ResourceURL:function(a,b){b.resourceUrl=b.resourceUrl||{};b.resourceUrl[a.getAttribute("resourceType")]={format:a.getAttribute("format"),template:a.getAttribute("template")}},WSDL:function(a,b){b.wsdl={};b.wsdl.href=a.getAttribute("xlink:href")},ServiceMetadataURL:function(a,b){b.serviceMetadataUrl={};b.serviceMetadataUrl.href=a.getAttribute("xlink:href")},TileMatrixSetLimits:function(d,e){var b={tileMatrixLimits:[]};e.tileMatrixSetLimits=b;this.readChildNodes(d,b);var c={};for(var f=0;f<b.tileMatrixLimits.length;f++){var a=b.tileMatrixLimits[f];c[a.tileMatrix]=a}e.tileMatrixSetLimitsMap=c},TileMatrixLimits:function(f,h){var b=this.getElementsByTagNameNS(f,this.namespaces.wmts,"*");var j=this.props.wmts.TileMatrixLimits;var c={};for(var d=0;d<b.length;d++){var g=b[d];var e=this.getChildValue(g);var k=g.localName||g.nodeName.split(":").pop();var a=j[k][0];var i=j[k][1];c[a]=i?i(e):e}h.tileMatrixLimits.push(c)}},ows:OpenLayers.Util.applyDefaults({HTTP:function(b,a){a.http={};this.readChildNodes(b,a.http)},Get:function(c,b){var a=this.getAttributeNS(c,this.namespaces.xlink,"href");if(!b.get){b.get=a}if(!b.getArray){b.getArray=[]}b.getArray.push(a)}},OpenLayers.Format.OWSCommon.v1_1_0.prototype.readers.ows)},CLASS_NAME:"OpenLayers.Format.WMTSCapabilities.v1_0_0"});return this.patch}},{protocol:["Oskari.openlayers.Patch"]});Oskari.clazz.define("Oskari.openlayers.Patch.layer.WMTS",function(){},{getPatch:function(){if(this.patch){return this.patch}return this.buildPatch()},buildPatch:function(){this.patch=OpenLayers.Class(OpenLayers.Layer.Grid,{isBaseLayer:true,version:"1.0.0",requestEncoding:"KVP",url:null,layer:null,layerDef:null,matrixSet:null,style:null,format:"image/jpeg",tileOrigin:null,tileFullExtent:null,formatSuffix:null,matrixIds:null,dimensions:null,params:null,zoomOffset:0,formatSuffixMap:{"image/png":"png","image/png8":"png","image/png24":"png","image/png32":"png",png:"png","image/jpeg":"jpg","image/jpg":"jpg",jpeg:"jpg",jpg:"jpg"},matrix:null,initialize:function(c){var f={url:true,layer:true,style:true,matrixSet:true};for(var g in f){if(!(g in c)){throw new Error("Missing property '"+g+"' in layer configuration.")}}c.params=OpenLayers.Util.upperCaseObject(c.params);
var b=[c.name,c.url,c.params,c];OpenLayers.Layer.Grid.prototype.initialize.apply(this,b);if(!this.formatSuffix){this.formatSuffix=this.formatSuffixMap[this.format]||this.format.split("/").pop()}if(this.matrixIds){var a=this.matrixIds.length;if(a&&typeof this.matrixIds[0]==="string"){var e=this.matrixIds;this.matrixIds=new Array(a);for(var d=0;d<a;++d){this.matrixIds[d]={identifier:e[d]}}}}},setMap:function(){OpenLayers.Layer.Grid.prototype.setMap.apply(this,arguments);this.updateMatrixProperties()},updateMatrixProperties:function(){this.matrix=this.getMatrix();if(this.matrix){if(this.matrix.topLeftCorner){this.tileOrigin=this.matrix.topLeftCorner}if(this.matrix.tileWidth&&this.matrix.tileHeight){this.tileSize=new OpenLayers.Size(this.matrix.tileWidth,this.matrix.tileHeight)}if(!this.tileOrigin){this.tileOrigin=new OpenLayers.LonLat(this.maxExtent.left,this.maxExtent.top)}if(!this.tileFullExtent){this.tileFullExtent=this.maxExtent}}},moveTo:function(b,a,c){if(a||!this.matrix){this.updateMatrixProperties()}return OpenLayers.Layer.Grid.prototype.moveTo.apply(this,arguments)},clone:function(a){if(a==null){a=new OpenLayers.Layer.WMTS(this.options)}a=OpenLayers.Layer.Grid.prototype.clone.apply(this,[a]);return a},getMatrix:function(){var b;if(!this.matrixIds||this.matrixIds.length===0){b={identifier:this.map.getZoom()+this.zoomOffset}}else{if("scaleDenominator" in this.matrixIds[0]){var a=OpenLayers.METERS_PER_INCH*OpenLayers.INCHES_PER_UNIT[this.units]*this.map.getResolution()/0.00028;var e=Number.POSITIVE_INFINITY;var f;for(var c=0,d=this.matrixIds.length;c<d;++c){f=Math.abs(1-(this.matrixIds[c].scaleDenominator/a));if(f<e){e=f;b=this.matrixIds[c]}}}else{b=this.matrixIds[this.map.getZoom()+this.zoomOffset]}}return b},getTileInfo:function(f){var b=this.map.getResolution();var d=(f.lon-this.tileOrigin.lon)/(b*this.tileSize.w);var c=(this.tileOrigin.lat-f.lat)/(b*this.tileSize.h);var a=Math.floor(d);var e=Math.floor(c);return{col:a,row:e,i:Math.floor((d-a)*this.tileSize.w),j:Math.floor((c-e)*this.tileSize.h)}},getURL:function(a){a=this.adjustBounds(a);var c="";if(!(!this.tileFullExtent||this.tileFullExtent.intersectsBounds(a))){return c}var b=a.getCenterLonLat();var d=this.getTileInfo(b);var j=this.matrix.identifier;if(this.layerDef&&this.layerDef.tileMatrixSetLinksMap){var k=this.layerDef.tileMatrixSetLinksMap[this.matrixSet];var h=k?k.tileMatrixSetLimitsMap[this.matrix.identifier]:null;var l=h?(d.row>=h.minTileRow&&d.row<=h.maxTileRow):false;var e=h?(d.col>=h.minTileCol&&d.col<=h.maxTileCol):false;if(!(l&&e)){return OpenLayers.Util.getImagesLocation()+"blank.gif"}}if(this.requestEncoding.toUpperCase()==="REST"){var m=this.version+"/"+this.layer+"/"+this.style+"/";if(this.dimensions){for(var g=0;g<this.dimensions.length;g++){if(this.params[this.dimensions[g]]){m=m+this.params[this.dimensions[g]]+"/"}}}m=m+this.matrixSet+"/"+this.matrix.identifier+"/"+d.row+"/"+d.col+"."+this.formatSuffix;if(OpenLayers.Util.isArray(this.url)){c=this.selectUrl(m,this.url)}else{c=this.url}if(!c.match(/\/$/)){c=c+"/"}c=c+m}else{if(this.requestEncoding.toUpperCase()==="KVP"){var f={SERVICE:"WMTS",REQUEST:"GetTile",VERSION:this.version,LAYER:this.layer,STYLE:this.style,TILEMATRIXSET:this.matrixSet,TILEMATRIX:this.matrix.identifier,TILEROW:d.row,TILECOL:d.col,FORMAT:this.format};c=OpenLayers.Layer.Grid.prototype.getFullRequestString.apply(this,[f])}}return c},mergeNewParams:function(a){if(this.requestEncoding.toUpperCase()==="KVP"){return OpenLayers.Layer.Grid.prototype.mergeNewParams.apply(this,[OpenLayers.Util.upperCaseObject(a)])}},CLASS_NAME:"OpenLayers.Layer.WMTS"});return this.patch}},{protocol:["Oskari.openlayers.Patch"]});Oskari.clazz.define("Oskari.mapframework.bundle.MapWmtsBundleInstance",function(a){this.name="MapWmts";this.mediator=null;this.sandbox=null;this.service=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}var c=Oskari.$("sandbox");this.sandbox=c;var b=c.getService("Oskari.mapframework.service.MapLayerService");b.registerLayerModel("wmtslayer","Oskari.mapframework.wmts.domain.WmtsLayer");var d=Oskari.clazz.create("Oskari.mapframework.wmts.service.WmtsLayerModelBuilder");
b.registerLayerModelBuilder("wmtslayer",d);var a=Oskari.clazz.create("Oskari.mapframework.wmts.service.WMTSLayerService",b);this.service=a;this.mediator.setState("started");return this},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.MapWmtsBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Ext.define("MapPanel",{extend:"Ext.Panel",alias:"widget.nlsfimappanel",initComponent:function(a){Ext.applyIf(this,a);this.callParent()},afterRender:function(){var a=this.ownerCt.getSize();Ext.applyIf(this,a);this.callParent();var b=this.body.dom;this.getMap().render(b)},afterComponentLayout:function(a,b){if(typeof this.getMap()=="object"){this.getMap().updateSize()}this.callParent(arguments)},setSize:function(c,a,b){if(typeof this.getMap()=="object"){this.getMap().updateSize()}this.callParent(arguments)},getMap:function(){return this.olmap},getCenter:function(){return this.getMap().getCenter()},getCenterLatLng:function(){var a=this.getCenter();return{lat:a.lat(),lng:a.lng()}}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.statehandler.StateHandlerBundleInstance",function(){this._localization=null;this._pluginInstances={};this._startupState=null;this._historyPollingInterval=1500;this._historyTimer=null;this._historyPrevious=[];this._historyEnabled=true;this._historyNext=[];this._currentViewId=1},{__name:"StateHandler",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},start:function(){var c=this;if(c.started){return}c.started=true;var a=Oskari.$("sandbox");c.sandbox=a;a.register(c);for(p in c.eventHandlers){a.registerForEventByName(c,p)}var b="/web/fi/kartta?p_p_id=Portti2Map_WAR_portti2mapportlet&p_p_lifecycle=1&p_p_state=exclusive&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&_Portti2Map_WAR_portti2mapportlet_fi.mml.baseportlet.CMD=ajax.jsp&";var d=Oskari.clazz.create("Oskari.mapframework.bundle.statehandler.plugin.SaveViewPlugin",b);this.registerPlugin(d);this.startPlugin(d);a.addRequestHandler("StateHandler.SetStateRequest",this.requestHandlers.setStateHandler);a.addRequestHandler("StateHandler.SaveStateRequest",this.requestHandlers.saveStateHandler)},update:function(){},stop:function(){var a=this.sandbox();a.removeRequestHandler("StateHandler.SetStateRequest",this.requestHandlers.setStateHandler);a.removeRequestHandler("StateHandler.SaveStateRequest",this.requestHandlers.saveStateHandler);var b=a.getRequestBuilder("MapControls.ToolButtonRequest");if(b){a.request(this,b(this.toolbar.config,"remove"))}for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}this.sandbox.unregister(this);this.started=false},init:function(){var b=this;this.toolbar={config:{group:this.getName(),toolId:"statehandler.reset",iconCls:"statehandler_reset_tool",tooltip:this.getLocalization("reset"),callback:function(){b.resetState()}}};var a=Oskari.$("sandbox");this.requestHandlers={setStateHandler:Oskari.clazz.create("Oskari.mapframework.bundle.statehandler.request.SetStateRequestHandler",a,this),saveStateHandler:Oskari.clazz.create("Oskari.mapframework.bundle.statehandler.request.SaveStateRequestHandler",a,this)};return null},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization(this.getName())}if(a){return this._localization[a]}return this._localization},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{AfterMapMoveEvent:function(b){var a=this;if(this._historyEnabled===true){if(this._historyTimer){clearTimeout(this._historyTimer);this._historyTimer=null}this._historyTimer=setTimeout(function(){var d=a.sandbox.getStatefulComponents()["mapfull"];if(d){var c=d.getState();a._historyPrevious.push(c)}},this._historyPollingInterval)}}},historyMoveNext:function(){if(this._historyNext.length>0){var a=this._historyNext.pop();this._historyPrevious.push(a);var b=this.sandbox.getStatefulComponents()["mapfull"];if(b){this._historyEnabled=false;b.setState(a);this._historyEnabled=true}}},historyMovePrevious:function(){if(this._historyPrevious.length>0){var a=this._historyPrevious.pop();this._historyNext.push(a);var b=this.sandbox.getStatefulComponents()["mapfull"];if(b){this._historyEnabled=false;b.setState(a);this._historyEnabled=true}}},registerPlugin:function(a){a.setHandler(this);var b=a.getName();this.sandbox.printDebug("["+this.getName()+"] Registering "+b);this._pluginInstances[b]=a},unregisterPlugin:function(a){var b=a.getName();this.sandbox.printDebug("["+this.getName()+"] Unregistering "+b);this._pluginInstances[b]=undefined;a.setHandler(null)},startPlugin:function(a){var b=a.getName();this.sandbox.printDebug("["+this.getName()+"] Starting "+b);a.startPlugin(this.sandbox)},stopPlugin:function(a){var b=a.getName();this.sandbox.printDebug("["+this.getName()+"] Starting "+b);a.stopPlugin(this.sandbox)},setCurrentViewId:function(a){this._currentViewId=a},getCurrentViewId:function(){return this._currentViewId}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.enhancement.mapfull.StartMapWithLinkEnhancement",function(){},{enhance:function(v){v.printDebug("Checking if map is started with link...");
var o=v.getRequestParameter("coord");var n=v.getRequestParameter("zoomLevel");var h=v.getRequestParameter("mapLayers");var f=v.getRequestParameter("showMarker");var k=v.getRequestParameter("keepLayersOrder");if(k===null){k=true}v.getMap().setMarkerVisible(f=="true");if(o===null||n===null){return}var q;if(o.indexOf("_")>=0){q=o.split("_")}else{q=o.split("%20")}var j=q[0];var m=q[1];if(j===null||m===null){v.printDebug("Could not parse link location. Skipping.");return}v.getMap().moveTo(j,m,n);v.printDebug("This is startup by link, moving map...");if(h!==null&&h!==""){v.printDebug("Continuing by adding layers...");var a=h.split(",");for(var t=0;t<a.length;t++){var g=a[t].split("+");var e=g[0];var b=g[1];var u=g[2];if((e.indexOf("_")!=-1)&&(e.indexOf("base_")==-1)&&(e.indexOf("BASE_")==-1)){var w=e.split("_");e=null;var c=null;for(var d in w){if(d){c=v.findBaselayerBySublayerIdFromAllAvailable(w[d]);if(c){e=c.getId();break}}}}if(e!==null){var s=null;var l=null;s=v.getRequestBuilder("AddMapLayerRequest");l=s(e,k);v.processRequest(l);s=v.getRequestBuilder("ChangeMapLayerOpacityRequest");l=s(e,b);v.processRequest(l);s=v.getRequestBuilder("ChangeMapLayerStyleRequest");l=s(e,u);v.processRequest(l)}else{v.printWarn("[StartMapWithLinkEnhancement] Could not find baselayer for "+e)}}}}},{protocol:["Oskari.mapframework.enhancement.Enhancement"]});Oskari.clazz.define("Oskari.mapframework.bundle.mappublished.BaseMapPlugin",function(a){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._conf=a;this._layers=[]},{__name:"mappublished.BaseMapPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}this._buildLayersList(this._conf);this._createUI()},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null;jQuery("#baseMapSelection").unbind("change");jQuery("#basemap-div").remove()},start:function(a){},stop:function(a){},eventHandlers:{},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},_buildLayersList:function(c){if(!c||!c.baseMaps){return}var a=this._sandbox.getService("Oskari.mapframework.service.MapLayerService");var e=c.baseMaps;for(var b=0;b<e.length;b++){var d=a.findMapLayer(e[b]);if(d){this._layers.push(d)}}},_createUI:function(){if(this._layers.length<2||!this._conf.toolsContainer){return}var a=this._sandbox;jQuery("<div id='basemap-div'><select id='baseMapSelection'></select></div>").appendTo("#"+this._conf.toolsContainer);var c="";for(var b=0;b<this._layers.length;b++){var e=this._layers[b].getId();jQuery("<option id='BasemapButton-"+e+"' value='"+e+"' class='basemapButton'>"+this._layers[b].getName()+"</option>").appendTo("#baseMapSelection");if(c==""){c=e}}var d=this;jQuery("#baseMapSelection").change(function(){d._changeBaseLayer(jQuery(this).val())})},_changeBaseLayer:function(c){var b=this._sandbox;for(var e=0;e<this._layers.length;e++){try{var a=b.findMapLayerFromSelectedMapLayers(this._layers[e].getId());if(a){var g=b.getRequestBuilder("RemoveMapLayerRequest");var f=g(a.getId());b.request(this.getName(),f)}}catch(d){}}var g=b.getRequestBuilder("AddMapLayerRequest");var f=g(c,false,true);b.request(this.getName(),f)}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mappublished.SearchPlugin",function(a){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._conf=a},{__name:"mappublished.SearchPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){return"<div id='basemapButtonsDiv' class='search-div-with-basemap-buttons'></div>"
},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}this._createUI()},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null;jQuery("#search-div").remove()},start:function(a){},stop:function(a){},eventHandlers:{},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},_createUI:function(){var a=this._sandbox;var d=this;this._searchBoxMessage=a.getText("rightpanel_search_find_places_textbox_value");var c=a.getText("rightpanel_search_find_places_button_value");var e=a.getText("rightpanel-searchresults-close_button_value");var b='<div id="search-div"><div id="search-textarea-and-button"><input id="search-string" value="'+this._searchBoxMessage+'" type="text" name="search-string" /><input id="search-button" type="button" value="'+c+'" name="search-button" /></div><div id="search-container" class="hidden"><img id="close-search-button" src="'+startup.imageLocation+'/resource/icons/poisto.png" alt="'+e+'" title="'+e+'"/><div id="search-results-header">&nbsp;</div><div id="search-results"></div></div></div>';jQuery(b).appendTo("#"+this._conf.toolsContainer);var d=this;jQuery("#search-string").focus(function(){a.request(d.getName(),a.getRequestBuilder("DisableMapKeyboardMovementRequest")());d._checkForKeywordClear()});jQuery("#search-string").blur(function(){a.request(d.getName(),a.getRequestBuilder("EnableMapKeyboardMovementRequest")());d._checkForKeywordInsert()});jQuery("#search-string").keypress(function(f){d._checkForEnter(f)});jQuery("#search-button").click(function(f){d._doSearch()});jQuery("#close-search-button").click(function(f){d._hideSearch()})},_checkForEnter:function(b){var a;if(window.event){a=window.event.keyCode}else{if(b){a=b.which}}if(b.keyCode==13){this._doSearch()}},_doSearch:function(){if(this._searchInProgess==true){return}var d=this;this._hideSearch();this._searchInProgess=true;jQuery("#search-string").addClass("search-loading");var e=jQuery("#search-string").val();var c=function(f){d._showResults(f)};var b=function(){d._enableSearch()};var a=this._sandbox.getRequestBuilder("SearchRequest")(encodeURIComponent(e),c,b);this._sandbox.request(this.getName(),a)},_showResults:function(c){var f=c.error;var k=this;if(f!=null){jQuery("#search-results").html("<div>"+f+"</div>");jQuery("#search-container").removeClass("hidden");return}var l=c.totalCount;if(l==0){jQuery("#search-results").html(this._sandbox.getText("search_published_map_no_results"));jQuery("#search-container").removeClass("hidden")}else{if(l==1){var b=c.locations[0].lon;var j=c.locations[0].lat;var m=c.locations[0].zoomLevel;this._sandbox.request(this.getName(),this._sandbox.getRequestBuilder("MapMoveRequest")(b,j,m,true))}else{var d="<table id='search-result-table'><thead><tr class='search-result-header-row'><th>"+this._sandbox.getText("searchservice_search_result_column_name")+"</th><th>"+this._sandbox.getText("searchservice_search_result_column_village")+"</th><th>"+this._sandbox.getText("searchservice_search_result_column_type")+"</th></tr></thead><tbody>";for(var e=0;e<l;e++){if(e>=100){d+="<tr><td class='search-result-too-many' colspan='3'>"+this._sandbox.getText("search_published_map_too_many_results")+"</td></tr>";break}var a=c.locations[e].name;var g=c.locations[e].village;var h=c.locations[e].type;var b=c.locations[e].lon;var j=c.locations[e].lat;var m=c.locations[e].zoomLevel;var o="class='search-result-white-row'";if(e%2==1){o="class='search-result-dark-row'"}var n="<tr "+o+" data-href='"+b+"---"+j+"---"+m+"'><td nowrap='nowrap'>"+a+"</td><td nowrap='nowrap'>"+g+"</td><td nowrap='nowrap'>"+h+"</td></tr>";d+=n}d+="</tbody></table>";jQuery("#search-results").html(d);jQuery("#search-container").removeClass("hidden");jQuery("#search-result-table tbody tr[data-href]").addClass("clickable").click(function(){k._resultClicked(jQuery(this).attr("data-href"))}).find("a").hover(function(){jQuery(this).parents("tr").unbind("click")
},function(){jQuery(this).parents("tr").click(function(){k._resultClicked(jQuery(this).attr("data-href"))})})}}},_resultClicked:function(c){var a=c.split("---");var e=a[0];var d=a[1];var b=a[2];this._sandbox.request(this.getName(),this._sandbox.getRequestBuilder("MapMoveRequest")(e,d,b,true))},_enableSearch:function(){this._searchInProgess=false;jQuery("#search-string").removeClass("search-loading")},_hideSearch:function(){jQuery("#search-container").addClass("hidden");this._sandbox.request(this.getName(),this._sandbox.getRequestBuilder("HideMapMarkerRequest")())},_checkForKeywordClear:function(){if(jQuery("#search-string").val()==this._searchBoxMessage){jQuery("#search-string").val("")}},_checkForKeywordInsert:function(){if(jQuery("#search-string").val()==""){jQuery("#search-string").val(this._searchBoxMessage)}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mappublished.MapInfoPlugin",function(a){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._conf=a},{__name:"mappublished.MapInfoPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}this._createUI()},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null;jQuery("#finnish-geoportal-logo").unbind("click");jQuery("#logo-image").remove()},start:function(a){},stop:function(a){},eventHandlers:{},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},_createUI:function(){var a=this._sandbox;var b="<div id='logo-image'><img id='finnish-geoportal-logo' style='cursor: pointer;' src='"+startup.imageLocation+"/resource/images/logo_pieni.png'/></div>";jQuery(b).appendTo("#"+this._conf.parentContainer);jQuery("#finnish-geoportal-logo").click(function(){var d=a.generatePublishedMapLinkToFinnishGeoportalPage();window.open(d,"_blank")});var c="<span id='terms-of-use-link' class='link-no-hover-gray'><a href='"+this._conf.termsUrl+"'  target='_blank'>"+a.getText("published_map_terms_of_use")+"</a></span>";jQuery(c).appendTo("#logo-image")}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mappublished.GetFeatureInfoPlugin",function(a){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._conf=a;this._gfiLayers=[];this._toolTipVisible=false},{__name:"mappublished.GetFeatureInfoPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();this._activateGFI()},stopPlugin:function(a){this._deactivateGFI()},start:function(a){},stop:function(a){},eventHandlers:{AfterGetFeatureInfoEvent:function(a){this._afterGetFeatureInfoEvent(a)},AfterAppendFeatureInfoEvent:function(a){this._afterAppendFeatureInfoEvent(a)},MapClickedEvent:function(a){this._handleMapClick(a.getMouseX(),a.getMouseY(),a.getLonLat())}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},_activateGFI:function(){if(!this._conf||!this._conf.gfiLayer||!this._conf.gfiLayer.id||this._conf.gfiLayer.id.length===0){return}var a=this._sandbox;a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}for(var d=0;d<this._conf.gfiLayer.id.length;d++){var c=a.findMapLayerFromAllAvailable(this._conf.gfiLayer.id[d]);if(c){this._gfiLayers.push(c)}}this._initializeFeatureInfoPopup(a);var b=a.getRequestParameter("showGetFeatureInfo");
if(b=="true"){var h=a.getMap().getX();var g=a.getMap().getY();var f=new OpenLayers.LonLat(h,g);var e=this._map.getPixelFromLonLat(f);this._handleMapClick(e.x,e.y,f)}},_deactivateGFI:function(){if(!this._conf&&!this._conf.gfiLayer){return}var a=this._sandbox;this._gfiLayers=[];for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},_afterGetFeatureInfoEvent:function(a){},_afterAppendFeatureInfoEvent:function(c){var b=jQuery("div.qtip-content");var a=b.html();if(a!=""){a+="<hr/>"}var d=c.getMessage();if(d.startsWith("{parsed: {")){var e=jQuery.parseJSON(d);if(e&&e.parsed){d=this._formatJsonGFI(e.parsed)}}d='<div style="padding: 5px; font: 11px Tahoma, Arial, Helvetica, sans-serif;">'+d+"</div>";a+="<h3>"+c.getHeader()+"</h3>"+d;jQuery("div.qtip-content").html(a)},_formatJsonGFI:function(b){var a="<br/><table>";var d=false;for(attr in b){var c=b[attr];if(c.startsWith("http://")){c='<a href="'+c+'" target="_blank">'+c+"</a>"}a=a+'<tr style="padding: 5px;';if(!d){a=a+" background-color: #EEEEEE"}d=!d;a=a+'"><td style="padding: 2px">'+attr+'</td><td style="padding: 2px">'+c+"</td></tr>"}return a+"</table>"},_handleMapClick:function(d,c,b){var a="#"+this._conf.parentContainer;var e=jQuery(a).qtip("api");if(this._toolTipVisible===true){e.hide();this._toolTipVisible=false}else{jQuery("div.qtip-content").html("");var f=this._sandbox.getRequestBuilder("GetFeatureInfoRequest");r=f(this._gfiLayers,b.lon,b.lat,d,c);this._sandbox.request(this.getName(),r);e.show();this._toolTipVisible=true;this.mapModule.centerMapByPixels(d+100,c-100,true)}},_initializeFeatureInfoPopup:function(b){var a="#"+this._conf.parentContainer;jQuery(a).qtip({content:"",show:{when:false},hide:{when:false},position:{corner:{target:"center",tooltip:"bottomLeft"},adjust:{x:-100,y:100}},style:{width:200,height:200,padding:5,background:"#FFFFFF",color:"black",textAlign:"center","overflow-y":"auto","overflow-x":"auto",border:{width:1,radius:4,color:"#F5AF3C"},tip:"bottomLeft",name:"dark"}});var c=this}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.enhancement.mapfull.StartMapWithLinkEnhancement",function(){},{enhance:function(u){u.printDebug("Checking if map is started with link...");var o=u.getRequestParameter("coord");var n=u.getRequestParameter("zoomLevel");var h=u.getRequestParameter("mapLayers");var f=u.getRequestParameter("showMarker");var k=u.getRequestParameter("keepLayersOrder");if(k===null){k=true}u.getMap().setMarkerVisible(f=="true");if(o===null||n===null){return}var p;if(o.indexOf("_")>=0){p=o.split("_")}else{p=o.split("%20")}var j=p[0];var m=p[1];if(j===null||m===null){u.printDebug("Could not parse link location. Skipping.");return}u.getMap().moveTo(j,m,n);u.printDebug("This is startup by link, moving map...");if(h!==null&&h!==""){u.printDebug("Continuing by adding layers...");var a=h.split(",");for(var s=0;s<a.length;s++){var g=a[s].split("+");var e=g[0];var b=g[1];var t=g[2];if((e.indexOf("_")!=-1)&&(e.indexOf("base_")==-1)&&(e.indexOf("BASE_")==-1)){var v=e.split("_");e=null;var c=null;for(var d in v){if(d){c=u.findBaselayerBySublayerIdFromAllAvailable(v[d]);if(c){e=c.getId();break}}}}if(e!==null){var q=null;var l=null;q=u.getRequestBuilder("AddMapLayerRequest");l=q(e,k);u.processRequest(l);q=u.getRequestBuilder("ChangeMapLayerOpacityRequest");l=q(e,b);u.processRequest(l);q=u.getRequestBuilder("ChangeMapLayerStyleRequest");l=q(e,t);u.processRequest(l)}else{u.printWarn("[StartMapWithLinkEnhancement] Could not find baselayer for "+e)}}}}},{protocol:["Oskari.mapframework.enhancement.Enhancement"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapprint.PrintBundleInstance",function(){this.map=null},{createModulesAndUi:function(a){var g=false;var e=false;var f=true;var c=true;var b=Oskari.clazz.create("Oskari.mapframework.ui.module.common.MapModule","Print",g,e,f,c);var d=a.register(b);d.render("map-div");this.map=d},start:function(){var j=this;var g=startup;Oskari.$("startup",g);var d=g.userInterfaceLanguage;var a=j;var c=Oskari.clazz.create("Oskari.mapframework.core.Core");this.core=c;var m=[];m.push(Oskari.clazz.create("Oskari.mapframework.enhancement.mapfull.StartMapWithLinkEnhancement"));var k=[];k.push(Oskari.clazz.create("Oskari.mapframework.service.LanguageService",d));var f=Oskari.clazz.create("Oskari.mapframework.service.MapLayerService",null,c.getSandbox());k.push(f);f.registerLayerModel("wmtslayer","Oskari.mapframework.wmts.domain.WmtsLayer");var h=Oskari.clazz.create("Oskari.mapframework.wmts.service.WmtsLayerModelBuilder");f.registerLayerModelBuilder("wmtslayer",h);k.push(Oskari.clazz.create("Oskari.mapframework.service.OgcSearchService",g.ogcSearchServiceEndpoint,c));c.init(a,k,m,g.layers,d,null,false);if(g.printBundles){for(var e=0;e<g.printBundles.length;e++){var l=g.printBundles[e];var b=Oskari.clazz.create(l.type,l.config);c.getSandbox().register(b);b.start(c.getSandbox())}}this._initMapPlugins(c.getSandbox())},_initMapPlugins:function(c){var a=c.findRegisteredModuleInstance("PrintMapModule");var b=[];b.push("Oskari.mapframework.mapmodule.WmsLayerPlugin");b.push("Oskari.mapframework.mapmodule.MarkersPlugin");b.push("Oskari.mapframework.mapmodule.TilesGridPlugin");b.push("Oskari.mapframework.mapmodule.ControlsPlugin");b.push("Oskari.mapframework.mapmodule.WfsLayerPlugin");b.push("Oskari.mapframework.wmts.mapmodule.plugin.WmtsLayerPlugin");for(var d=0;d<b.length;d++){var e=Oskari.clazz.create(b[d]);a.registerPlugin(e);a.startPlugin(e)}c.syncMapState(true,a)},update:function(){},stop:function(){alert("Stopped!")}},{protocol:["Oskari.bundle.BundleInstance"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.ui.module.mapfull.MapPositionModule",function(){this._multipleActionsRunningText=null;this._tooltip=null;this._sandbox=null;this._items=null},{__name:"MapPositionModule",getName:function(){return this.__name},init:function(b){this._sandbox=b;var f=this;b.printDebug("Initializing map position module...");for(p in this.eventHandlers){b.registerForEventByName(this,p)}var h=function(i){f.showMeasurement(i)};this.showMeasurementHandler=Oskari.clazz.create("Oskari.mapframework.mapposition.request.ShowMapMeasurementRequestHandler",b,h);b.addRequestHandler("ShowMapMeasurementRequest",this.showMeasurementHandler);var g=Ext.create("Ext.button.Button",{text:Oskari.$().startup.instructionsText,iconCls:"map-insctrunctions-image",handler:function(){f.openHelp()}});var d=Ext.create("Ext.form.Label",{width:128});var e=Ext.create("Ext.form.Label",{width:128,flex:1});var c=Ext.create("Ext.form.Label",{flex:3});var a=Ext.create("Ext.ux.StatusBar",{defaultText:"",id:"right-statusbar",statusAlign:"right",items:[g,"-",d,e,c]});this._items={mapMousePosition:d,mapMeasure:e,mapStatusText:c};this._multipleActionsRunningText=b.getText("status_multiple_tasks_running");this._tooltipHeaderText=b.getText("status_tooltip_header");return a},start:function(a){a.printDebug("Starting "+this.getName())},stop:function(a){},showMeasurement:function(a){this._items.mapMeasure.setText(a)},openHelp:function(){var a=Oskari.$().startup.instructionsUrl;var b=this._sandbox.getRequestBuilder("ShowOverlayPopupRequest")(a);this._sandbox.request(this.getName(),b)},handleAfterMapMoveEvent:function(b){var c=b.getCenterX();var d=b.getCenterY();var a="N: "+Math.round(parseInt(d))+" E: "+Math.round(parseInt(c));this._items.mapMousePosition.setText(a)},handleMouseHoverEvent:function(b){var c=b.getLon();var d=b.getLat();var a="N: "+Math.round(parseInt(d))+" E: "+Math.round(parseInt(c));this._items.mapMousePosition.setText(a)},handleActionStatusesChangedEvent:function(f){var b="";var e=f.getCurrentlyRunningActionsDescriptions();if(e.length==0){this._items.mapStatusText.setText("");var d=Ext.getCmp("status-tooltip");if(d!=null){d.destroy()}return}for(var a=0;a<e.length;a++){b+="<p>"+e[a]+"</p>"}if(this._tooltip!=null){this._tooltip.destroy()}this._tooltip=Ext.create("Ext.tip.ToolTip",{id:"status-tooltip",target:"status-text",title:this._tooltipHeaderText,width:300,trackMouse:true,html:b,showDelay:0,hideDelay:0,elements:"body"});text=e[0];var c=e.length;if(c>1){text=c+" "+this._multipleActionsRunningText}this._items.mapStatusText.setText(text)},eventHandlers:{ToolSelectedEvent:function(b){var a=b.getToolName();this._items.mapMeasure.setText("")},AfterMapMoveEvent:function(a){this.handleAfterMapMoveEvent(a)},ActionStatusesChangedEvent:function(a){this.handleActionStatusesChangedEvent(a)},MouseHoverEvent:function(a){this.handleMouseHoverEvent(a)}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.mapposition.request.ShowMapMeasurementRequestHandler",function(a,b){this.sandbox=a;this._callBack=b},{handleRequest:function(a,b){var c=b.getValue();this.sandbox.printDebug("[ShowMapMeasurementRequestHandler] got measurement: "+c);if(this._callBack){this._callBack(c)}}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.DefaultMapPositionBundleInstance",function(a){this.name="mapposition";this.mediator=null;this.sandbox=null;this.impl=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");this.impl=Oskari.clazz.create("Oskari.mapframework.ui.module.mapfull.MapPositionModule");var a=this.facade.appendExtensionModule(this.impl,this.name,this.eventHandlers,this,"StatusRegion",{fi:{title:""},sv:{title:""},en:{title:""}});this.def=a;this.impl.start(this.facade.getSandbox());this.mediator.setState("started");return this},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)
},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.eventHandlers,this,this.def);this.def=null;this.impl=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.DefaultMapPositionBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.ui.module.common.OverlayPopupModule",function(){this._sandbox;this._overlayPopup=null},{__name:"OverlayPopupModule",getName:function(){return this.__name},init:function(a){a.printDebug("Initializing "+this.getName()+" module...");this._sandbox=a;this.showOverlayPopupRequestHandler=Oskari.clazz.create("Oskari.mapframework.mapoverlaypopup.request.ShowOverlayPopupRequestHandler",a,this);return null},closePopup:function(){if(this._overlayPopup!=null){this._overlayPopup.destroy();this._overlayPopup=null}},_getButtonCallbackWrapper:function(b){var a=this;return function(){if(b){b()}a.closePopup()}},showPopup:function(a,f){var e=this;var d=[];if(f&&f.length>0){for(var c=0;c<f.length;++c){var g=f[c];var b=Ext.create("Ext.button.Button",{text:g.text,handler:e._getButtonCallbackWrapper(g.callback)});d.push(b)}}Ext.Function.defer(function(){e.showWebContent(a,d)},100)},showWebContent:function(f,c){this.closePopup();var b=this._sandbox.getBrowserWindowSize();var a=b.height-200;var e=Ext.create("Ext.Window",{autoScroll:true,bodyCssClass:"overlay-popup-module-content",closable:true,animate:false,width:800,height:a,frame:true,header:false,draggable:false,maximizable:false,resizable:false,modal:true,layout:"fit",html:'<iframe src="'+f+'" style="width:100%;height:100%;border:0;">',listeners:{}});if(c&&c.length>0){var d={xtype:"toolbar",dock:"bottom",items:c};e.addDocked(d)}this._overlayPopup=e;e.show()},start:function(a){a.printDebug("Starting "+this.getName());a.addRequestHandler("ShowOverlayPopupRequest",this.showOverlayPopupRequestHandler)},stop:function(a){a.removeRequestHandler("ShowOverlayPopupRequest",this.showOverlayPopupRequestHandler)},onEvent:function(a){}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.mapoverlaypopup.request.ShowOverlayPopupRequest",function(a,b){this._creator=null;this._autoLoadUrl=a;this._buttonsConf=b},{__name:"ShowOverlayPopupRequest",getName:function(){return this.__name},getAutoLoadUrl:function(){return this._autoLoadUrl},getButtonsConf:function(){return this._buttonsConf}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapoverlaypopup.request.ShowOverlayPopupRequestHandler",function(a,b){this.sandbox=a;this.plugin=b},{handleRequest:function(a,c){var b=c.getAutoLoadUrl();this.sandbox.printDebug("[Oskari.mapframework.mapoverlaypopup.request.ShowOverlayPopupRequestHandler] got dataurl "+b);this.plugin.showPopup(b,c.getButtonsConf())}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.DefaultOverlayPopupBundleInstance",function(a){this.name="mapoverlaypopup";this.mediator=null;this.sandbox=null;this.impl=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");this.impl=Oskari.clazz.create("Oskari.mapframework.ui.module.common.OverlayPopupModule");var a=this.facade.appendExtensionModule(this.impl,this.name,this.eventHandlers,this,"StatusRegion",{fi:{title:""},sv:{title:"?"},en:{title:""}});this.def=a;this.impl.start(this.facade.getSandbox());this.mediator.setState("started");return this},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.eventHandlers,this,this.def);this.def=null;this.impl=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.DefaultOverlayPopupBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.ui.module.common.MapModule",function(a){this._id=a;this._controls={};this._layerPlugins={};this._projectionCode="EPSG:3067";this._supportedFormats={};this._map=null;this._mapScales=[];this._mapResolutions=[2000,1000,500,200,100,50,20,10,4,2,1,0.5,0.25];this._navigationHistoryTool=null;this._sandbox=null;this._stealth=false;this._pluginInstances={};this._navigationHistoryTool=new OpenLayers.Control.NavigationHistory();this._navigationHistoryTool.id="navigationhistory";this._localization=null},{getControls:function(){return this._controls},addMapControl:function(b,a){this._controls[b]=a;this._map.addControl(a)},getMapControl:function(a){return this._controls[a]},removeMapControl:function(a){this._map.removeControl(this._controls[a]);this._controls[a]=null;delete this._controls[a]},setLayerPlugin:function(b,a){this._layerPlugins[b]=a},getLayerPlugin:function(a){return this._layerPlugins[a]},getLayerPlugins:function(){return this._layerPlugins},clearNavigationHistory:function(){this._navigationHistoryTool.clear()},attachLoadingStatusToLayer:function(b,c){var a=this._sandbox;var e=this;var d=this.getLocalization("status_update_map")+" '"+c.getName()+"'...";b.events.register("loadstart",b,function(){a.request(e,a.getRequestBuilder("ActionStartRequest")(b.id,d,true))});b.events.register("loadend",b,function(){a.request(e,a.getRequestBuilder("ActionReadyRequest")(b.id,true))});b.events.register("loadcancel",b,function(){a.request(e,a.getRequestBuilder("ActionReadyRequest")(b.id,true))})},getName:function(){return this._id+"MapModule"},getSandbox:function(){return this._sandbox},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization("MapModule")}if(a){return this._localization[a]}return this._localization},init:function(a){a.printDebug("Initializing map module...#############################################");this._sandbox=a;for(p in this.eventHandlers){a.registerForEventByName(this,p)}this.requestHandlers={mapLayerUpdateHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule-plugin.request.MapLayerUpdateRequestHandler",a,this),mapMoveRequestHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule-plugin.request.MapMoveRequestHandler",a,this),clearHistoryHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule-plugin.controls.ClearHistoryHandler",a,this)};a.addRequestHandler("MapModulePlugin.MapLayerUpdateRequest",this.requestHandlers.mapLayerUpdateHandler);a.addRequestHandler("MapMoveRequest",this.requestHandlers.mapMoveRequestHandler);a.addRequestHandler("ClearHistoryRequest",this.requestHandlers.clearHistoryHandler);this.createMap();for(var c=0;c<this._mapResolutions.length;++c){var b=OpenLayers.Util.getScaleFromResolution(this._mapResolutions[c],"m");b=b*10000;b=Math.round(b);b=b/10000;this._mapScales.push(b)}this.createBaseLayer();this.addMapControl("navigationHistoryTool",this._navigationHistoryTool);this.getMapControl("navigationHistoryTool").activate();return this._map},getPluginInstances:function(){return this._pluginInstances},isPluginActivated:function(b){var a=this._pluginInstances[this.getName()+b];if(a){return true}return false},registerPlugin:function(b){var a=this._sandbox;b.setMapModule(this);var c=b.getName();a.printDebug("["+this.getName()+"] Registering "+c);b.register();this._pluginInstances[c]=b},unregisterPlugin:function(b){var a=this._sandbox;var c=b.getName();a.printDebug("["+this.getName()+"] Unregistering "+c);b.unregister();this._pluginInstances[c]=undefined;b.setMapModule(null)},startPlugin:function(b){var a=this._sandbox;var c=b.getName();a.printDebug("["+this.getName()+"] Starting "+c);b.startPlugin(a)},stopPlugin:function(b){var a=this._sandbox;var c=b.getName();a.printDebug("["+this.getName()+"] Starting "+c);b.stopPlugin(a)},startPlugins:function(a){for(var b in this._pluginInstances){a.printDebug("["+this.getName()+"] Starting "+b);this._pluginInstances[b].startPlugin(a)}},stopPlugins:function(a){for(var b in this._pluginInstances){a.printDebug("["+this.getName()+"] Starting "+b);this._pluginInstances[b].stopPlugin(a)
}},getStealth:function(){return this._stealth},setStealth:function(a){this._stealth=a},notifyAll:function(a,b){if(this._stealth){return}this._sandbox.notifyAll(a,b)},getMap:function(){return this._map},getMapImpl:function(){return this._panel},createMap:function(){var a=this._sandbox;var b=new OpenLayers.LonLat(0,0);this._map=new OpenLayers.Map({controls:[],units:"m",maxExtent:new OpenLayers.Bounds(0,0,10000000,10000000),resolutions:this._mapResolutions,projection:this._projectionCode,isBaseLayer:true,center:b,theme:null,zoom:0});return this._map},createBaseLayer:function(){var a=new OpenLayers.Layer("BaseLayer",{layerId:0,isBaseLayer:true,displayInLayerSwitcher:false});this._map.addLayer(a)},notifyStartMove:function(){if(this.getStealth()){return}this._sandbox.getMap().setMoving(true);var c=this._map.getCenter().lon;var b=this._map.getCenter().lat;var a=this._sandbox.getEventBuilder("MapMoveStartEvent")(c,b);this._sandbox.notifyAll(a)},moveMapToLanLot:function(b,d,c){if(d){this.adjustZoomLevel(d,true)}var a=(c===true);this._map.setCenter(b,this._map.getZoom(),a);this._updateDomain()},zoomIn:function(){this.adjustZoomLevel(1)},zoomOut:function(){this.adjustZoomLevel(-1)},zoomTo:function(a){this.setZoomLevel(a,false)},panMapEast:function(){var a=this._map.getSize();this.panMapByPixels(0.75*a.w,0)},panMapWest:function(){var a=this._map.getSize();this.panMapByPixels(-0.75*a.w,0)},panMapNorth:function(){var a=this._map.getSize();this.panMapByPixels(0,-0.75*a.h)},panMapSouth:function(){var a=this._map.getSize();this.panMapByPixels(0,0.75*a.h)},panMapByPixels:function(e,d,g,c){var f=this._map.getViewPortPxFromLonLat(this._map.getCenter());var a=new OpenLayers.Pixel(f.x+e,f.y+d);var b=this._map.getLonLatFromViewPortPx(a);if(!this.isValidLonLat(b.lon,b.lat)){return}this._map.pan(e,d);this._updateDomain();if(g!==true){this.notifyStartMove()}if(c!==true){this.notifyMoveEnd()}},moveMapByPixels:function(c,b,d,a){this._map.moveByPx(c,b);this._updateDomain();if(d!==true){this.notifyStartMove()}if(a!==true){this.notifyMoveEnd()}},centerMapByPixels:function(e,d,f,c){var a=new OpenLayers.Pixel(e,d);var b=this._map.getLonLatFromViewPortPx(a);if(!this.isValidLonLat(b.lon,b.lat)){return}this.moveMapToLanLot(b);if(f!==true){this.notifyStartMove()}if(c!==true){this.notifyMoveEnd()}},isValidLonLat:function(c,b){var a=true;if(b<6250000||b>8200000){a=false;return a}if(c<0||c>1350000){a=false}return a},zoomToExtent:function(c,b,a){this._map.zoomToExtent(c);this._updateDomain();if(b!==true){this.notifyStartMove()}if(a!==true){this.notifyMoveEnd()}},adjustZoomLevel:function(c,b){var a=this._getNewZoomLevel(c);this._map.zoomTo(a);this._updateDomain();if(b!==true){this.notifyMoveEnd()}},setZoomLevel:function(b,a){if(b<0||b>this._map.getNumZoomLevels){b=this._map.getZoom()}this._map.zoomTo(b);this._updateDomain();if(a!==true){this.notifyMoveEnd()}},_getNewZoomLevel:function(b){var a=this._map.getZoom()+b;if(a>=0&&a<=this._map.getNumZoomLevels()){return a}return this._map.getZoom()},notifyMoveEnd:function(){if(this.getStealth()){return}var a=this._sandbox;a.getMap().setMoving(false);var c=this._map.getCenter();this._updateDomain();var b=a.getEventBuilder("AfterMapMoveEvent")(c.lon,c.lat,this._map.getZoom(),false,this._map.getScale());a.notifyAll(b);a.doSniffing()},_updateDomain:function(){if(this.getStealth()){return}var a=this._sandbox;var d=a.getMap();var c=this._map.getCenter();d.moveTo(c.lon,c.lat,this._map.getZoom());d.setScale(this._map.getScale());var b=this._map.getCurrentSize();d.setWidth(b.w);d.setHeight(b.h);d.setResolution(this._map.getResolution());d.setExtent(this._map.getExtent());d.setMaxExtent(this._map.getMaxExtent());d.setBbox(this._map.calculateBounds());d.setMarkerVisible(this._hasMarkers())},calculateLayerScales:function(d,b){var c=new Array();if(b&&d){this.layerScales=[];for(var a=0;a<this._mapScales.length;a++){if(b>=this._mapScales[a]&&d<=this._mapScales[a]){c.push(this._mapScales[a])}}}return c},getClosestZoomLevel:function(e,d){var c=this._map.getZoom();if(!d||!e){return c}var b=this._map.getScale();if(b<d){for(var a=c;a>0;a--){if(this._mapScales[a]>=d){return a
}}}else{if(b>e){for(var a=c;a<this._mapScales.length;a++){if(this._mapScales[a]<=e){return a}}}}return c},start:function(a){if(this.started){return}a.printDebug("Starting "+this.getName());this.startPlugins(a);this.updateCurrentState();this.started=true},stop:function(a){if(!this.started){return}this.stopPlugins(a);this.started=false},_drawMarker:function(){this._removeMarkers();var e=this._map.getCenter();var b=new OpenLayers.Layer.Markers("Markers");this._map.addLayer(b);var c=new OpenLayers.Size(32,32);var f=new OpenLayers.Pixel(0,-c.h);var d=new OpenLayers.Icon(Oskari.$().startup.imageLocation+"/resource/icons/paikkamerkinta.png",c,f);var a=new OpenLayers.Marker(e,d);b.addMarker(a)},_removeMarkers:function(){var a=this._map.getLayersByName("Markers");if(a){for(var b=0;b<a.length;b++){if(a[b]){this._map.removeLayer(a[b],false)}}}},_hasMarkers:function(){var a=this._map.getLayersByName("Markers");if(a){for(var b=0;b<a.length;b++){if(a[b]&&a[b].markers&&a[b].markers.length>0){return true}}}return false},eventHandlers:{AfterMapMoveEvent:function(a){},SearchClearedEvent:function(a){this._removeMarkers()}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},getOLMapLayers:function(b){var f=this;var a=f._sandbox;var c=a.findMapLayerFromSelectedMapLayers(b);if(!c){return null}var e=this.getLayerPlugins();for(p in e){var d=e[p];var g=d.getOLMapLayers(c);if(g){return g}}return null},updateCurrentState:function(){var d=this;var a=d._sandbox;var e=a.findAllSelectedMapLayers();var c=this.getLayerPlugins();for(p in c){var b=c[p];a.printDebug("preselecting "+p);b.preselectLayers(e)}}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.ui.module.common.mapmodule.Plugin",function(){throw"Oskari.mapframework.ui.module.common.mapmodule.Plugin should not be instantiated"},{getName:function(){throw"Implement your own"},setMapModule:function(a){throw"Implement your own"},register:function(){throw"Implement your own"},unregister:function(){throw"Implement your own"},startPlugin:function(a){throw"Implement your own"},stopPlugin:function(a){throw"Implement your own"},eventHandlers:{},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])}});Oskari.clazz.define("Oskari.mapframework.mapmodule.ControlsPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"ControlsPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){},unregister:function(){},init:function(a){var b=this;this.requestHandlers={toolSelectionHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule.ToolSelectionHandler",a,b)}},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);a.addRequestHandler("ToolSelectionRequest",this.requestHandlers.toolSelectionHandler);for(var b in this.eventHandlers){a.registerForEventByName(this,b)}this.addMapControls()},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterDisableMapKeyboardMovementEvent:function(a){this._keyboardControls.deactivate()},AfterEnableMapKeyboardMovementEvent:function(a){this._keyboardControls.activate()},ToolSelectedEvent:function(b){var a=this.requestHandlers.toolSelectionHandler.getName();this._sandbox.printDebug("[ControlsPlugin] Get ToolSelectedEvent from '"+b.getOrigin()+"':");this._sandbox.printDebug("                 "+b.getToolId());if(b.getOrigin()!=a){this._zoomBoxTool.deactivate();this._measureControls.line.deactivate();this._measureControls.area.deactivate()}}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},addMapControls:function(a){var f=this;OpenLayers.Control.ZoomBox.prototype.draw=function(){this.handler=new OpenLayers.Handler.Box(this,{done:function(h){this.zoomBox(h);f.getMapModule().notifyMoveEnd()
}},{keyMask:this.keyMask})};this._zoomBoxTool=new OpenLayers.Control.ZoomBox({alwaysZoom:true});this.getMapModule().addMapControl("zoomBoxTool",this._zoomBoxTool);this._zoomBoxTool.deactivate();this._keyboardControls=new OpenLayers.Control.PorttiKeyboard({core:this._sandbox._core,mapmodule:this.getMapModule()});this.getMapModule().addMapControl("keyboardControls",this._keyboardControls);this.getMapModule().getMapControl("keyboardControls").activate();var b={handlerOptions:{persist:true},immediate:true};var e={handlerOptions:{persist:true},immediate:true};this._measureControls={line:(new OpenLayers.Control.Measure(OpenLayers.Handler.Path,b)),area:(new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon,e))};var f=this;function d(m,n){var i=f._sandbox;var j=m.units;var h=m.order;var l=m.measure;var k=l.toFixed(3)+" "+j;i.printDebug(k+" "+(n?"FINISHED":"CONTINUES"));i.request(f,i.getRequestBuilder("ShowMapMeasurementRequest")(k))}for(var c in this._measureControls){var g=this._measureControls[c];g.events.on({measure:function(h){d(h,true)},measurepartial:function(h){d(h,false)}})}this.getMapModule().addMapControl("measureControls_line",this._measureControls.line);this._measureControls.line.deactivate();this.getMapModule().addMapControl("measureControls_area",this._measureControls.area);this._measureControls.area.deactivate();this._mouseControls=new OpenLayers.Control.PorttiMouse({sandbox:this._sandbox,mapmodule:this.getMapModule()});this.getMapModule().addMapControl("mouseControls",this._mouseControls)}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});OpenLayers.Control.PorttiKeyboard=OpenLayers.Class(OpenLayers.Control,{autoActivate:true,slideFactor:50,core:null,constructor:function(a){this.core=a.core;this.mapmodule=a.mapmodule},draw:function(){this.handler=new OpenLayers.Handler.Keyboard(this,{keydown:this.defaultKeyDown,keyup:this.defaultKeyUp})},defaultKeyDown:function(a){switch(a.keyCode){case OpenLayers.Event.KEY_LEFT:this.mapmodule.panMapByPixels(-this.slideFactor,0,false,true);break;case OpenLayers.Event.KEY_RIGHT:this.mapmodule.panMapByPixels(this.slideFactor,0,false,true);break;case OpenLayers.Event.KEY_UP:this.mapmodule.panMapByPixels(0,-this.slideFactor,false,true);break;case OpenLayers.Event.KEY_DOWN:this.mapmodule.panMapByPixels(0,this.slideFactor,false,true);break;case 17:this.core.processRequest(this.core.getRequestBuilder("CtrlKeyDownRequest")());break;case 27:this.core.dispatch(this.core.getEventBuilder("EscPressedEvent")());break;case 33:this.mapmodule.notifyStartMove();this.mapmodule.panMapNorth();break;case 34:this.mapmodule.notifyStartMove();this.mapmodule.panMapSouth();break;case 35:this.mapmodule.notifyStartMove();this.mapmodule.panMapEast();break;case 36:this.mapmodule.notifyStartMove();this.mapmodule.panMapWest();break;case 43:case 61:case 187:case 107:this.mapmodule.zoomIn();break;case 45:case 109:case 189:case 95:this.mapmodule.zoomOut();break}},defaultKeyUp:function(a){switch(a.keyCode){case 17:this.core.processRequest(this.core.getRequestBuilder("CtrlKeyUpRequest")());break;case 37:case 38:case 39:case 40:case 33:case 34:case 35:case 36:case 43:case 61:case 187:case 107:case 45:case 109:case 189:case 95:this.mapmodule.notifyMoveEnd();break}},CLASS_NAME:"OpenLayers.Control.PorttiKeyboard"});OpenLayers.Control.PorttiZoomBar=OpenLayers.Class(OpenLayers.Control.PanZoom,{zoomStopWidth:18,zoomStopHeight:11,slider:null,sliderEvents:null,zoombarDiv:null,divEvents:null,zoomWorldIcon:false,panIcons:false,forceFixedZoomLevel:false,mouseDragStart:null,deltaY:null,zoomStart:null,constructor:function(a){this.sandbox=a.sandbox;this.mapModule=a.mapModule},destroy:function(){this._removeZoomBar();this.map.events.un({changebaselayer:this.redraw,scope:this});OpenLayers.Control.PanZoom.prototype.destroy.apply(this,arguments);delete this.mouseDragStart;delete this.zoomStart},setMap:function(a){OpenLayers.Control.PanZoom.prototype.setMap.apply(this,arguments);this.map.events.register("changebaselayer",this,this.redraw)},redraw:function(){if(this.div!=null){this.removeButtons();
this._removeZoomBar()}this.draw()},draw:function(b){OpenLayers.Control.prototype.draw.apply(this,arguments);b=this.position.clone();this.buttons=[];var d=new OpenLayers.Size(18,18);if(this.panIcons){var a=new OpenLayers.Pixel(b.x+d.w/2,b.y);var c=d.w;if(this.zoomWorldIcon){a=new OpenLayers.Pixel(b.x+d.w,b.y)}this._addButton("panup","north-mini.png",a,d);b.y=a.y+d.h;this._addButton("panleft","west-mini.png",b,d);if(this.zoomWorldIcon){this._addButton("zoomworld","zoom-world-mini.png",b.add(d.w,0),d);c*=2}this._addButton("panright","east-mini.png",b.add(c,0),d);this._addButton("pandown","south-mini.png",a.add(0,d.h*2),d);this._addButton("zoomin","zoom-plus-mini.png",a.add(0,d.h*3+5),d);a=this._addZoomBar(a.add(0,d.h*4+5));this._addButton("zoomout","zoom-minus-mini.png",a,d)}else{this._addButton("zoomin","zoom-plus-mini.png",b,d);a=this._addZoomBar(b.add(0,d.h));this._addButton("zoomout","zoom-minus-mini.png",a,d);if(this.zoomWorldIcon){a=a.add(0,d.h+3);this._addButton("zoomworld","zoom-world-mini.png",a,d)}}return this.div},buttonDown:function(a){if(!OpenLayers.Event.isLeftClick(a)){return}switch(this.action){case"zoomin":Oskari.$().sandbox.findRegisteredModuleInstance("MainMapModule").zoomIn();break;case"zoomout":Oskari.$().sandbox.findRegisteredModuleInstance("MainMapModule").zoomOut();break}},_addZoomBar:function(a){var e=OpenLayers.Util.getImagesLocation();var g=this.id+"_"+this.map.id;var b=this.map.getNumZoomLevels()-1-this.map.getZoom();var c=OpenLayers.Util.createAlphaImageDiv(g,a.add(-1,b*this.zoomStopHeight),new OpenLayers.Size(20,9),e+"slider.png","absolute");c.style.cursor="move";this.slider=c;this.sliderEvents=new OpenLayers.Events(this,c,null,true,{includeXY:true});this.sliderEvents.on({touchstart:this.zoomBarDown,touchmove:this.zoomBarDrag,touchend:this.zoomBarUp,mousedown:this.zoomBarDown,mousemove:this.zoomBarDrag,mouseup:this.zoomBarUp,dblclick:this.doubleClick,click:this.doubleClick});var d=new OpenLayers.Size();d.h=this.zoomStopHeight*this.map.getNumZoomLevels();d.w=this.zoomStopWidth;var f=null;if(OpenLayers.Util.alphaHack()){var g=this.id+"_"+this.map.id;f=OpenLayers.Util.createAlphaImageDiv(g,a,new OpenLayers.Size(d.w,this.zoomStopHeight),e+"zoombar.png","absolute",null,"crop");f.style.height=d.h+"px"}else{f=OpenLayers.Util.createDiv("OpenLayers_Control_PanZoomBar_Zoombar"+this.map.id,a,d,e+"zoombar.png")}f.style.cursor="pointer";this.zoombarDiv=f;this.divEvents=new OpenLayers.Events(this,f,null,true,{includeXY:true});this.divEvents.on({touchmove:this.passEventToSlider,mousedown:this.divClick,mousemove:this.passEventToSlider,dblclick:this.doubleClick,click:this.doubleClick});this.div.appendChild(f);this.startTop=parseInt(f.style.top);this.div.appendChild(c);this.map.events.register("zoomend",this,this.moveZoomBar);a=a.add(0,this.zoomStopHeight*this.map.getNumZoomLevels());return a},_removeZoomBar:function(){this.sliderEvents.un({touchmove:this.zoomBarDrag,mousedown:this.zoomBarDown,mousemove:this.zoomBarDrag,mouseup:this.zoomBarUp,dblclick:this.doubleClick,click:this.doubleClick});this.sliderEvents.destroy();this.divEvents.un({touchmove:this.passEventToSlider,mousedown:this.divClick,mousemove:this.passEventToSlider,dblclick:this.doubleClick,click:this.doubleClick});this.divEvents.destroy();this.div.removeChild(this.zoombarDiv);this.zoombarDiv=null;this.div.removeChild(this.slider);this.slider=null;this.map.events.unregister("zoomend",this,this.moveZoomBar)},passEventToSlider:function(a){this.sliderEvents.handleBrowserEvent(a)},divClick:function(a){if(!OpenLayers.Event.isLeftClick(a)){return}var c=a.xy.y/this.zoomStopHeight;if(this.forceFixedZoomLevel||!this.map.fractionalZoom){c=Math.floor(c)}var b=(this.map.getNumZoomLevels()-1)-c;b=Math.min(Math.max(b,0),this.map.getNumZoomLevels()-1);this.mapModule.zoomTo(b);OpenLayers.Event.stop(a)},zoomBarDown:function(a){if(!OpenLayers.Event.isLeftClick(a)&&!OpenLayers.Event.isSingleTouch(a)){return}this.map.events.on({touchmove:this.passEventToSlider,mousemove:this.passEventToSlider,mouseup:this.passEventToSlider,scope:this});this.mouseDragStart=a.xy.clone();this.zoomStart=a.xy.clone();
this.div.style.cursor="move";this.zoombarDiv.offsets=null;OpenLayers.Event.stop(a)},zoomBarDrag:function(b){if(this.mouseDragStart!=null){var a=this.mouseDragStart.y-b.xy.y;var d=OpenLayers.Util.pagePosition(this.zoombarDiv);if((b.clientY-d[1])>0&&(b.clientY-d[1])<parseInt(this.zoombarDiv.style.height)-2){var c=parseInt(this.slider.style.top)-a;this.slider.style.top=c+"px";this.mouseDragStart=b.xy.clone()}this.deltaY=this.zoomStart.y-b.xy.y;OpenLayers.Event.stop(b)}},zoomBarUp:function(a){if(!OpenLayers.Event.isLeftClick(a)&&a.type!=="touchend"){return}if(this.mouseDragStart){this.div.style.cursor="";this.map.events.un({touchmove:this.passEventToSlider,mouseup:this.passEventToSlider,mousemove:this.passEventToSlider,scope:this});var b=this.map.zoom;if(!this.forceFixedZoomLevel&&this.map.fractionalZoom){b+=this.deltaY/this.zoomStopHeight;b=Math.min(Math.max(b,0),this.map.getNumZoomLevels()-1)}else{b+=this.deltaY/this.zoomStopHeight;b=Math.max(Math.round(b),0)}this.mapModule.zoomTo(b);this.mouseDragStart=null;this.zoomStart=null;this.deltaY=0;OpenLayers.Event.stop(a)}},moveZoomBar:function(){var a=((this.map.getNumZoomLevels()-1)-this.map.getZoom())*this.zoomStopHeight+this.startTop+1;this.slider.style.top=a+"px"},CLASS_NAME:"OpenLayers.Control.PorttiZoomBar"});OpenLayers.Control.PorttiDragPan=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,panned:false,interval:1,documentDrag:false,kinetic:null,enableKinetic:false,kineticInterval:10,draw:function(){if(this.enableKinetic){var a={interval:this.kineticInterval};if(typeof this.enableKinetic==="object"){a=OpenLayers.Util.extend(a,this.enableKinetic)}this.kinetic=new OpenLayers.Kinetic(a)}this.handler=new OpenLayers.Handler.PorttiDrag(this,{move:this.panMap,done:this.panMapDone,down:this.panMapStart},{interval:this.interval,documentDrag:this.documentDrag})},panMapStart:function(){if(this.kinetic){this.kinetic.begin()}},panMap:function(a){if(this.kinetic){this.kinetic.update(a)}this.panned=true;this.map.pan(this.handler.last.x-a.x,this.handler.last.y-a.y,{dragging:true,animate:false})},panMapDone:function(c){if(this.panned){var b=null;if(this.kinetic){b=this.kinetic.end(c)}this.map.pan(this.handler.last.x-c.x,this.handler.last.y-c.y,{dragging:!!b,animate:false});if(b){var a=this;this.kinetic.move(b,function(d,f,e){a.map.pan(d,f,{dragging:!e,animate:false})})}this.panned=false}},CLASS_NAME:"OpenLayers.Control.PorttiDragPan"});OpenLayers.Handler.PorttiDrag=OpenLayers.Class(OpenLayers.Handler,{started:false,stopDown:true,dragging:false,touch:false,last:null,start:null,lastMoveEvt:null,oldOnselectstart:null,interval:0,timeoutId:null,documentDrag:false,documentEvents:null,initialize:function(d,c,a){OpenLayers.Handler.prototype.initialize.apply(this,arguments);if(this.documentDrag===true){var b=this;this._docMove=function(e){b.mousemove({xy:{x:e.clientX,y:e.clientY},element:document})};this._docUp=function(e){b.mouseup({xy:{x:e.clientX,y:e.clientY}})}}},dragstart:function(b){var a=true;this.dragging=false;if(this.checkModifiers(b)&&(OpenLayers.Event.isLeftClick(b)||OpenLayers.Event.isSingleTouch(b))){this.started=true;this.start=b.xy;this.last=b.xy;OpenLayers.Element.addClass(this.map.viewPortDiv,"olDragDown");this.down(b);this.callback("down",[b.xy]);if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart?document.onselectstart:OpenLayers.Function.True}document.onselectstart=OpenLayers.Function.False;a=!this.stopDown}else{this.started=false;this.start=null;this.last=null}return a},dragmove:function(a){this.lastMoveEvt=a;if(this.started&&!this.timeoutId&&(a.xy.x!=this.last.x||a.xy.y!=this.last.y)){if(this.documentDrag===true&&this.documentEvents){if(a.element===document){this.adjustXY(a);this.setEvent(a)}else{this.removeDocumentEvents()}}if(this.interval>0){this.timeoutId=setTimeout(OpenLayers.Function.bind(this.removeTimeout,this),this.interval)}this.dragging=true;this.move(a);this.callback("move",[a.xy]);if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart;document.onselectstart=OpenLayers.Function.False}this.last=a.xy}return true
},dragend:function(b){if(this.started){if(this.documentDrag===true&&this.documentEvents){this.adjustXY(b);this.removeDocumentEvents()}var a=(this.start!=this.last);this.started=false;this.dragging=false;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown");this.up(b);this.callback("up",[b.xy]);if(a){this.callback("done",[b.xy])}document.onselectstart=this.oldOnselectstart}return true},down:function(a){},move:function(a){},up:function(a){},out:function(a){},mousedown:function(a){return this.dragstart(a)},touchstart:function(a){if(!this.touch){this.touch=true;this.map.events.un({mousedown:this.mousedown,mouseup:this.mouseup,mousemove:this.mousemove,click:this.click,scope:this})}return this.dragstart(a)},mousemove:function(a){return this.dragmove(a)},touchmove:function(a){return this.dragmove(a)},removeTimeout:function(){this.timeoutId=null;if(this.dragging){this.mousemove(this.lastMoveEvt)}},mouseup:function(a){return this.dragend(a)},touchend:function(a){a.xy=this.last;return this.dragend(a)},mouseout:function(b){if(this.started&&OpenLayers.Util.mouseLeft(b,this.map.eventsDiv)){if(this.documentDrag===true){this.addDocumentEvents()}else{var a=(this.start!=this.last);this.started=false;this.dragging=false;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown");this.out(b);this.callback("out",[]);if(a){this.callback("done",[b.xy])}if(document.onselectstart){document.onselectstart=this.oldOnselectstart}}}return true},click:function(a){return(this.start==this.last)},activate:function(){var a=false;if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.dragging=false;a=true}return a},deactivate:function(){var a=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.touch=false;this.started=false;this.dragging=false;this.start=null;this.last=null;a=true;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown")}return a},adjustXY:function(a){var b=OpenLayers.Util.pagePosition(this.map.viewPortDiv);a.xy.x-=b[0];a.xy.y-=b[1]},addDocumentEvents:function(){OpenLayers.Element.addClass(document.body,"olDragDown");this.documentEvents=true;OpenLayers.Event.observe(document,"mousemove",this._docMove);OpenLayers.Event.observe(document,"mouseup",this._docUp)},removeDocumentEvents:function(){OpenLayers.Element.removeClass(document.body,"olDragDown");this.documentEvents=false;OpenLayers.Event.stopObserving(document,"mousemove",this._docMove);OpenLayers.Event.stopObserving(document,"mouseup",this._docUp)},CLASS_NAME:"OpenLayers.Handler.PorttiDrag"});OpenLayers.Control.PorttiMouse=OpenLayers.Class(OpenLayers.Control,{performedDrag:false,wheelObserver:null,_hoverEvent:null,name:"PorttiMouse",events:new OpenLayers.Events(),constructor:function(a){this.sandbox=a.sandbox;this.mapmodule=a.mapmodule},isReallyLeftClick:function(b){var a=OpenLayers.Event.isLeftClick(b);if(a===false){return false}if(a===true){return true}if(a!=0){return false}return true},initialize:function(){OpenLayers.Control.prototype.initialize.apply(this,arguments)},destroy:function(){if(this.handler){this.handler.destroy()}this.handler=null;this.map.events.un({click:this.defaultClick,dblclick:this.defaultDblClick,mousedown:this.defaultMouseDown,mouseup:this.defaultMouseUp,mousemove:this.defaultMouseMove,mouseout:this.defaultMouseOut,scope:this});OpenLayers.Event.stopObserving(window,"DOMMouseScroll",this.wheelObserver);OpenLayers.Event.stopObserving(window,"mousewheel",this.wheelObserver);OpenLayers.Event.stopObserving(document,"mousewheel",this.wheelObserver);this.wheelObserver=null;OpenLayers.Control.prototype.destroy.apply(this,arguments)},draw:function(){this.map.events.on({click:this.defaultClick,dblclick:this.defaultDblClick,mousedown:this.defaultMouseDown,mouseup:this.defaultMouseUp,mousemove:this.defaultMouseMove,mouseout:this.defaultMouseOut,scope:this});this.registerWheelEvents()},registerWheelEvents:function(){this.wheelObserver=OpenLayers.Function.bindAsEventListener(this.onWheelEvent,this);OpenLayers.Event.observe(window,"DOMMouseScroll",this.wheelObserver);OpenLayers.Event.observe(window,"mousewheel",this.wheelObserver);
OpenLayers.Event.observe(document,"mousewheel",this.wheelObserver)},defaultClick:function(b){if(!this.isReallyLeftClick(b)){return}var a=!this.performedDrag;this.performedDrag=false;if(a){}return a},defaultDblClick:function(a){this.mapmodule.centerMapByPixels(a.xy.x,a.xy.y,true,true);this.mapmodule.zoomIn();return false},defaultMouseDown:function(a){if(!this.isReallyLeftClick(a)){return}this.mouseDragStart=a.xy.clone();this.performedDrag=false;if(a.shiftKey){this.map.div.style.cursor="crosshair";this.zoomBox=OpenLayers.Util.createDiv("zoomBox",this.mouseDragStart,null,null,"absolute","2px solid red");this.zoomBox.style.backgroundColor="white";this.zoomBox.style.filter="alpha(opacity=50)";this.zoomBox.style.opacity="0.50";this.zoomBox.style.fontSize="1px";this.zoomBox.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;this.map.eventsDiv.appendChild(this.zoomBox)}document.onselectstart=OpenLayers.Function.False},defaultMouseMove:function(c){this.mousePosition=c.xy.clone();if(this.mouseDragStart!=null){if(this.zoomBox){var b=Math.abs(this.mouseDragStart.x-c.xy.x);var a=Math.abs(this.mouseDragStart.y-c.xy.y);this.zoomBox.style.width=Math.max(1,b)+"px";this.zoomBox.style.height=Math.max(1,a)+"px";if(c.xy.x<this.mouseDragStart.x){this.zoomBox.style.left=c.xy.x+"px"}if(c.xy.y<this.mouseDragStart.y){this.zoomBox.style.top=c.xy.y+"px"}}else{if(this.performedDrag===false){this.mapmodule.notifyStartMove()}var b=this.mouseDragStart.x-c.xy.x;var a=this.mouseDragStart.y-c.xy.y;this.mapmodule.moveMapByPixels(b,a,true,true);this.mouseDragStart=c.xy.clone();this.map.div.style.cursor="move"}this.performedDrag=true}else{this.notifyHover(c)}},defaultMouseUp:function(a){if(!this.isReallyLeftClick(a)){return}if(this.zoomBox){this.zoomBoxEnd(a)}else{if(this.performedDrag){var c=this.mapmodule._navigationHistoryTool;var e=c.getState();c.previousStack.unshift(e);if(c.previousStack.length>1){c.onPreviousChange(c.previousStack[1],c.previousStack.length-1)}if(c.previousStack.length>(c.limit+1)){c.previousStack.pop()}if(c.nextStack.length>0){c.nextStack=[];c.onNextChange(null,0)}this.mapmodule.notifyMoveEnd()}else{var d=this.map.getLonLatFromViewPortPx(a.xy);var b=this.sandbox.getEventBuilder("MapClickedEvent");var a=b(d,a.xy.x,a.xy.y);this.sandbox.notifyAll(a,true)}}document.onselectstart=null;this.mouseDragStart=null;this.map.div.style.cursor=""},defaultMouseOut:function(a){if(this.mouseDragStart!=null&&OpenLayers.Util.mouseLeft(a,this.map.eventsDiv)){if(this.zoomBox){this.removeZoomBox()}this.mapmodule.notifyMoveEnd();this.mouseDragStart=null;this.map.div.style.cursor=""}},defaultWheelUp:function(a){this.mapmodule.centerMapByPixels(a.xy.x,a.xy.y,true,true);this.mapmodule.zoomIn()},defaultWheelDown:function(a){this.mapmodule.centerMapByPixels(a.xy.x,a.xy.y,true,true);this.mapmodule.zoomOut()},zoomBoxEnd:function(b){if(this.mouseDragStart!=null){if(Math.abs(this.mouseDragStart.x-b.xy.x)>5||Math.abs(this.mouseDragStart.y-b.xy.y)>5){var h=this.map.getLonLatFromViewPortPx(this.mouseDragStart);var a=this.map.getLonLatFromViewPortPx(b.xy);var g=Math.max(h.lat,a.lat);var c=Math.min(h.lat,a.lat);var f=Math.min(h.lon,a.lon);var d=Math.max(h.lon,a.lon);var e=new OpenLayers.Bounds(f,c,d,g);this.mapmodule.zoomToExtent(e,true)}else{this.mapmodule.centerMapByPixels(b.xy.x,b.xy.y,true,true);this.mapmodule.zoomIn()}this.removeZoomBox()}},removeZoomBox:function(){this.map.eventsDiv.removeChild(this.zoomBox);this.zoomBox=null},notifyHover:function(a){if(this.mapmodule.getStealth()){return}if(!this._hoverEvent){this._hoverEvent=this.sandbox.getEventBuilder("MouseHoverEvent")()}var b=this.map.getLonLatFromViewPortPx(a.xy);this._hoverEvent.set(b.lon,b.lat);this.sandbox.notifyAll(this._hoverEvent,true)},onWheelEvent:function(c){var b=false;var a=OpenLayers.Event.element(c);while(a!=null){if(this.map&&a==this.map.div){b=true;break}if(a.className=="olPopup"){b=false;break}a=a.parentNode}if(b){var d=0;if(!c){c=window.event}if(c.wheelDelta){d=c.wheelDelta/120;if(window.opera&&window.opera.version()<9.2){d=-d}}else{if(c.detail){d=-c.detail/3}}if(d){c.xy=this.mousePosition;if(d<0){this.defaultWheelDown(c)
}else{this.defaultWheelUp(c)}}OpenLayers.Event.stop(c)}},CLASS_NAME:"OpenLayers.Control.PorttiMouse"});Oskari.clazz.define("Oskari.mapframework.request.common.ShowMapMeasurementRequest",function(a){this._creator=null;this._value=a},{__name:"ShowMapMeasurementRequest",getName:function(){return this.__name},getValue:function(){return this._value}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.$("OpenLayers.Control.GetInfoAdapter",OpenLayers.Class(OpenLayers.Control,{hover:false,drillDown:false,maxFeatures:10,clickCallback:"click",handlerOptions:null,handler:null,EVENT_TYPES:["beforegetfeatureinfo","nogetfeatureinfo","getfeatureinfo"],initialize:function(a){this.EVENT_TYPES=OpenLayers.Control.prototype.EVENT_TYPES;a=a||{};this.callback=a.callback;this.hoverCallback=a.hoverCallback;a.handlerOptions=a.handlerOptions||{};OpenLayers.Control.prototype.initialize.apply(this,[a]);if(this.drillDown===true){this.hover=false}if(this.hover){this.handler=new OpenLayers.Handler.Hover(this,{move:this.cancelHover,pause:this.getInfoForHover},OpenLayers.Util.extend(this.handlerOptions.hover||{},{delay:250}))}else{var b={};b[this.clickCallback]=this.getInfoForClick;this.handler=new OpenLayers.Handler.Click(this,b,this.handlerOptions.click||{})}},activate:function(){if(!this.active){this.handler.activate()}return OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},getInfoForClick:function(a){this.events.triggerEvent("beforegetfeatureinfo",{xy:a.xy});OpenLayers.Element.addClass(this.map.viewPortDiv,"olCursorWait");this.request(a.xy,{})},getInfoForHover:function(a){this.events.triggerEvent("beforegetfeatureinfo",{xy:a.xy});this.request(a.xy,{hover:true})},cancelHover:function(){},request:function(b,a){OpenLayers.Element.removeClass(this.map.viewPortDiv,"olCursorWait");var c=this.map.getLonLatFromViewPortPx(b);if(a.hover&&this.hoverCallback){this.hoverCallback(c,b,a)}else{if(this.callback){this.callback(c,b,a)}}},CLASS_NAME:"OpenLayers.Control.GetInfoAdapter"}));Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.getinfo.GetFeatureInfoHandler",function(a,b){this.getInfoPlugin=b;this.sandbox=a},{__name:"GetFeatureInfoHandler",getName:function(){return this.__name},init:function(a){},_getWmsReqParams:function(d,b){var e=this.sandbox.getMap();var c=d.getMapWidth();if(!c){c=e.getWidth()}var a=d.getMapHeight();if(!a){a=e.getHeight()}return;"REQUEST=GetFeatureInfo&EXCEPTIONS=application/vnd.ogc.se_xml&SRS="+this._getSRS(d)+"&VERSION=1.1.1&BBOX="+this._getBBString(d)+"&X="+d.getX()+"&Y="+d.getY()+"&INFO_FORMAT="+b.getQueryFormat()+"&QUERY_LAYERS="+b.getWmsName()+"&WIDTH="+c+"&HEIGHT="+a+"&FEATURE_COUNT=1&FORMAT=image/png&SERVICE=WMS&STYLES="+b.getCurrentStyle().getName()+"&LAYERS="+b.getWmsName()},_getWmtsReqParams:function(d,c){var b=this.getInfoPlugin._map.getLayersByName("layer_"+c.getId());var e=new OpenLayers.LonLat(d.getLon(),d.getLat());var a=b[0].getTileInfo(e);var f=b[0].url+"?service=WMTS&request=GetFeatureInfo&version="+b[0].version+"&layer="+b[0].layer+"&style="+b[0].style+"&format=text/xml&TileMatrixSet="+b[0].matrixSet+"&TileMatrix="+b[0].getMatrix().identifier+"&TileCol="+a.col+"&TileRow="+a.row+"&I="+a.i+"&J="+a.j+"&InfoFormat=text/xml";return f},_getBBString:function(b){var a=b.getBoundingBox();if(!a){a=this.getInfoPlugin.getMapModule().getMap().getExtent()}return a.left+","+a.bottom+","+a.right+","+a.top},_getSRS:function(b){var a=b.getSRS();if(!a){a="EPSG:3067"}return a},_notifyNotSupported:function(a,c){var g="rightpanel_wms_getfeatureinfo_not_supported_txt";var f=this.sandbox.getText(g)+": "+a+".";var b=this.sandbox.getEventBuilder("AfterAppendFeatureInfoEvent");var d=b(a,f);this.sandbox.copyObjectCreatorToFrom(d,c);this.sandbox.notifyAll(d)},handleRequest:function(r,b){var n=b.getMapLayers();var c=n.length;var j=(c>0)&&n[0].isLayerOfType("WFS");var a=!j&&(c>0);var m=this.sandbox.getEventBuilder("AfterGetFeatureInfoEvent");var s=m(a,j);this.sandbox.copyObjectCreatorToFrom(s,b);this.sandbox.notifyAll(s,true);if(!a){return
}var u=this;var d=function(e,i){this.name=e;this.format=i;this.success=function(x){var A="";if(this.format==="application/vnd.ogc.gml"||this.format==="application/gnd_ogc.se_xml"||this.format==="application/vnd.ogc.wms_xml"||this.format==="text/xml"){A=x.responseText.replace(/</g,"&lt;").replace(/>/g,"&gt;")}else{if(x.responseText===""){A=u.sandbox.getText("mapcontrolsservice_not_found_wms_feature_info")}else{A=x.responseText}}var y=u.sandbox.getEventBuilder("AfterAppendFeatureInfoEvent");var z=y(e,A);u.sandbox.copyObjectCreatorToFrom(z,b);u.sandbox.notifyAll(z,true)};this.failure=function(x){var y=u.sandbox.getEventBuilder("AfterAppendFeatureInfoEvent");var z=y(e,x.responseText);u.sandbox.copyObjectCreatorToFrom(z,b);u.sandbox.notifyAll(z,true)}};var t=this.sandbox.getMap();for(var o=0;o<c;o++){this.sandbox._core.actionInProgressGetFeatureInfo();var v=b.getMapLayers()[o];var w=v.getName();var q=v.getQueryFormat();var h=((q!==null)&&(q!==""));if(!v.getQueryable()||v.isLayerOfType("WFS")||!h){this._notifyNotSupported(w,b);continue}var f="";if(f.indexOf("?")<0){f=f+"?"}if(v.isLayerOfType("WMTS")){f=this._getWmtsReqParams(b,v)}else{if(v.isLayerOfType("WMS")){var l=b.getMapWidth();if(!l){l=t.getWidth()}var k=b.getMapHeight();if(!k){k=t.getHeight()}f=startup.globalMapAjaxUrl+"&action_route=GetFeatureInfoWMS&REQUEST=GetFeatureInfo&layerId="+v.getId()+"&EXCEPTIONS=application/vnd.ogc.se_xml&SRS="+this._getSRS(b)+"&VERSION=1.1.1&BBOX="+t.getExtent()+"&X="+b.getX()+"&Y="+b.getY()+"&INFO_FORMAT="+v.getQueryFormat()+"&QUERY_LAYERS="+v.getWmsName()+"&WIDTH="+l+"&HEIGHT="+k+"&FEATURE_COUNT=1&FORMAT=image/png&SERVICE=WMS&STYLES="+v.getCurrentStyle().getName()+"&LAYERS="+v.getWmsName()}}var g=new d(w,q);this.sandbox.ajax(f,function(e){g.success(e)},function(e){g.failure(e)})}}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.GetInfoPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"GetInfoPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){},unregister:function(){},init:function(a){a.printDebug("[GetInfoPlugin] init");var c=this;var b="Oskari.mapframework.mapmodule-plugin.getinfo.GetFeatureInfoHandler";this.requestHandlers={getFeatureInfoHandler:Oskari.clazz.create(b,a,c)};this._sandbox.addRequestHandler("GetFeatureInfoRequest",this.requestHandlers.getFeatureInfoHandler)},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();var b=this;this._getinfoTool=new (Oskari.$("OpenLayers.Control.GetInfoAdapter"))({callback:function(e,d,c){b.handleGetInfo(e,d,c)},hoverCallback:function(e,d,c){b.handleGetInfoHover(e,d,c)}});this.getMapModule().addMapControl("getinfo",this._getinfoTool);a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{ToolSelectedEvent:function(a){if(a.getToolName=="map_control_select_tool"){this._getinfoTool.activate()}else{this._getinfoTool.deactivate()}},AfterDeactivateAllOpenlayersMapControlsButNotMeasureToolsEvent:function(a){this.afterDeactivateAllOpenlayersMapControlsButNotMeasureToolsEvent()},AfterDeactivateAllOpenlayersMapControlsEvent:function(a){this.afterDeactivateAllOpenlayersMapControlsEvent(a)},MapClickedEvent:function(a){var d=a.getLonLat();var c=a.getMouseX();var b=a.getMouseY();if(this._activated){this.buildWMSQueryOrWFSFeatureInfoRequest(d,c,b)}},AfterHighlightMapLayerEvent:function(a){this._handleHighlightLayer(a)},AfterDimMapLayerEvent:function(a){this._handleDimLayer()}},_handleHighlightLayer:function(a){this._activated=true},_handleDimLayer:function(){this._activated=false},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},handleGetInfo:function(c,b,a){this._sandbox.printDebug("GETINFO "+c.lat+","+c.lon);
this.buildWMSQueryOrWFSFeatureInfoRequest(c,b.x,b.y)},handleGetInfoHover:function(c,b,a){this._sandbox.printDebug("GETINFO HOVER "+c.lat+","+c.lon)},arrayToCSV:function(c){var b="";for(var a=0;a<c.length;a++){b+=c[a];if(a<c.length-1){b+=","}}return b},buildWMSQueryOrWFSFeatureInfoRequest:function(g,c,b){var k=this._sandbox;var e=k.findAllHighlightedLayers();this._projectionCode="EPSG:3067";if(e[0]&&e[0]!=null&&(e[0].isLayerOfType("WMS")||e[0].isLayerOfType("WMTS"))){var f=k.getMap().getWidth();var j=k.getMap().getHeight();var l=k.getMap().getBbox();var a=k.findAllHighlightedLayers();k.request(this,k.getRequestBuilder("GetFeatureInfoRequest")(a,g.lon,g.lat,c,b,f,j,l,this._projectionCode))}else{if(e[0]&&e[0]!=null&&e[0].isLayerOfType("VECTOR")){this.getMapModule().notifyAll(k.getEventBuilder("FeaturesGetInfoEvent")(e[0],null,g.lon,g.lat,this._map.getProjection,"GetFeatureInfo"))}else{if(e[0]&&e[0]!=null&&e[0].isLayerOfType("WFS")){var i=e[0];if(i!=null&&i.getId()!=null){this._selectedCoordinatesLon=[];this._selectedCoordinatesLat=[];this._selectedCoordinatesLon.push(g.lon);this._selectedCoordinatesLat.push(g.lat);var h=this._map.getExtent();var d="&flow_pm_wfsLayerId="+i.getId()+"&flow_pm_point_x="+this.arrayToCSV(this._selectedCoordinatesLon)+"&flow_pm_point_y="+this.arrayToCSV(this._selectedCoordinatesLat)+"&flow_pm_bbox_min_x="+h.left+"&flow_pm_bbox_min_y="+h.bottom+"&flow_pm_bbox_max_x="+h.right+"&flow_pm_bbox_max_y="+h.top+"&flow_pm_zoom_level="+this._map.getZoom();k.request(this,k.getRequestBuilder("HighlightWFSFeatureRequestByGeoPoint")(d))}}}}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.SketchLayerPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{getName:function(){return this.pluginName},__name:"SketchLayerPlugin",setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},getMapModule:function(){return this.mapModule},register:function(){},unregister:function(){},init:function(a){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();this.createMapSketchLayer();this.createMapVectorLayer();var c={graphicOpacity:"1",fillOpacity:"0.95",strokeColor:"#000000",fillColor:"#ff00ff",strokeOpacity:"1",strokeWidth:1,pointRadius:1,cursor:"pointer"};var b=OpenLayers.Util.applyDefaults(c,OpenLayers.Feature.Vector.style["default"]);this._drawArea=new OpenLayers.Control.DrawFeature(this._polygonLayer,OpenLayers.Handler.RegularPolygon,{handlerOptions:{sides:4,irregular:true,style:b}});this._drawArea.id="drawarea";this.getMapModule().addMapControl("drawarea",this._drawArea);this._vectorSelector=new OpenLayers.Control.SelectFeature(this._vectorLayer,{clickout:false,toggle:false,multiple:false,hover:false,box:false});this._vectorSelector.id="vectorselector";this.getMapModule().addMapControl("vectorselector",this._vectorSelector);a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterDrawPolygonEvent:function(a){this.afterDrawPolygonEvent(a)},AfterDrawSelectedPolygonEvent:function(a){this.afterDrawSelectedPolygonEvent(a)},AfterErasePolygonEvent:function(a){this.afterErasePolygonEvent(a)},AfterSelectPolygonEvent:function(a){this.afterSelectPolygonEvent(a)},AfterRemovePolygonEvent:function(a){this.afterRemovePolygonEvent(a)},ToolSelectedEvent:function(a){if(a.getToolName()=="map_control_draw_area_tool"){this._drawArea.activate()}else{this._drawArea.deactivate();if(a.getToolName()=="map_control_select_tool"){this.clearBbox()}}}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},createMapVectorLayer:function(){var b=this.getName();var d=this;var c=new function(e){this.handle=function(f){d.setSelectMetadata(f.feature.id,f.feature.attributes.groupId)}}(b);var a=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]);
a.fillOpacity=0.2;a.graphicOpacity=1;a.strokeColor="blue";a.fillColor="blue";this._vectorLayer=new OpenLayers.Layer.Vector("Vector Layer",{style:a});this._vectorLayer.events.on({featureselected:c.handle});this._map.addLayer(this._vectorLayer)},createMapSketchLayer:function(){var a=this.getName();var c=this;var e=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]);e.fillOpacity=0.95;e.graphicOpacity=1;e.strokeColor="#000000";e.fillColor="#ff00ff";this._polygonLayer=new OpenLayers.Layer.Vector("Polygon Layer",{style:e});var b=new function(f){this.handle=function(g){c.clearBbox()}}(a);var d=new function(f){this.handle=function(g){c.setBbox()}}(a);this._polygonLayer.events.on({sketchstarted:b.handle,featureadded:d.handle});this.getMapModule()._map.addLayer(this._polygonLayer)},clearBbox:function(){var a=this._map.getLayersByName("Polygon Layer");if(a[0]!=null){a[0].destroyFeatures()}},setBbox:function(){var b=this._map.getLayersByName("Polygon Layer");var a=Oskari.clazz.create("Oskari.mapframework.domain.Polygon");if(b[0]!=undefined){a.setTop(b[0].getDataExtent().top);a.setLeft(b[0].getDataExtent().left);a.setBottom(b[0].getDataExtent().bottom);a.setRight(b[0].getDataExtent().right);a.setDescription("Valittu alue");a.setColor("#ff00ff");a.setId(-1)}else{a.setId(-2)}this._sandbox.request(this,this._sandbox.getRequestBuilder("UpdateHiddenValueRequest")(a))},setSelectMetadata:function(b,a){this._sandbox.request(this,this._sandbox.getRequestBuilder("SelectPolygonRequest")(b,a))},afterDrawPolygonEvent:function(d){var b=[];var g=""+d.getPolygon().getTop()+"";g=g.replace(".","-");var m=""+d.getPolygon().getLeft()+"";m=m.replace(".","-");var h=""+d.getPolygon().getBottom()+"";h=h.replace(".","-");var n=""+d.getPolygon().getRight()+"";n=n.replace(".","-");var a=new OpenLayers.Bounds(d.getPolygon().getLeft(),d.getPolygon().getBottom(),d.getPolygon().getRight(),d.getPolygon().getTop());var i=new OpenLayers.Projection("EPSG:4326");var k=new OpenLayers.Projection("EPSG:3067");var f=a.transform(i,k);var e=new OpenLayers.Geometry.Point(m,g);b.push(e);e=new OpenLayers.Geometry.Point(m,h);b.push(e);e=new OpenLayers.Geometry.Point(n,h);b.push(e);e=new OpenLayers.Geometry.Point(n,g);b.push(e);b.push(b[0]);var l=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]);l.fillOpacity=0.2;l.graphicOpacity=1;l.display=d.getPolygon().getDisplay();l.strokeColor=d.getPolygon().getColor();l.fillColor=d.getPolygon().getColor();var j=f.toGeometry();var c=new OpenLayers.Feature.Vector(j,{id:d.getPolygon().getId(),groupId:g+"_"+m+"_"+h+"_"+n});c.id=d.getPolygon().getId();c.style=l;this._vectorLayer.addFeatures(c);this._vectorSelector.activate();if(d.getPolygon().getZoomToExtent()){this._map.zoomToExtent(f,true)}},afterDrawSelectedPolygonEvent:function(c){var e=""+c.getPolygon().getTop()+"";e=e.replace(".","-");var k=""+c.getPolygon().getLeft()+"";k=k.replace(".","-");var f=""+c.getPolygon().getBottom()+"";f=f.replace(".","-");var l=""+c.getPolygon().getRight()+"";l=l.replace(".","-");var a=new OpenLayers.Bounds(c.getPolygon().getLeft(),c.getPolygon().getBottom(),c.getPolygon().getRight(),c.getPolygon().getTop());var g=new OpenLayers.Projection("EPSG:4326");var i=new OpenLayers.Projection("EPSG:3067");var d=a.transform(g,i);var j=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]);j.fillOpacity=0.95;j.graphicOpacity=1;j.display=c.getPolygon().getDisplay();j.strokeColor=c.getPolygon().getColor();j.fillColor=c.getPolygon().getColor();var h=d.toGeometry();var b=new OpenLayers.Feature.Vector(h,{id:c.getPolygon().getId(),groupId:e+"_"+k+"_"+f+"_"+l});b.id=c.getPolygon().getId();b.style=j;this._polygonLayer.addFeatures(b)},afterErasePolygonEvent:function(b){var c=this._vectorLayer.getFeatureById(b.getId());this._vectorLayer.removeFeatures(c);var a=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]);a.fillOpacity=0.3;a.graphicOpacity=1;a.strokeColor="blue";a.fillColor="blue";if(c.style.display!="undefined"&&c.style.display!="none"){a.display="none"}else{a.display=""}c.style=a;this._vectorLayer.addFeatures(c);
this._vectorLayer.redraw()},afterSelectPolygonEvent:function(c){var a=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]);a.strokeColor="blue";a.fillColor="blue";a.fillOpacity=0.3;a.graphicOpacity=1;var b=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]);b.strokeColor="#CC2388";b.fillColor="#CC2388";b.fillOpacity=0.2;b.graphicOpacity=1;this._vectorLayer.redraw();var d=this._vectorLayer.getFeatureById(c.getId());this._vectorLayer.drawFeature(d,b)},afterRemovePolygonEvent:function(c){var b=c.getShowPol();if(b){var d=this._vectorLayer.getFeatureById(c.getId());var a=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]);a.strokeColor="blue";a.fillColor="blue";a.fillOpacity=0.2;a.graphicOpacity=1;this._vectorLayer.redraw();this._vectorLayer.drawFeature(d,a)}else{var d=this._vectorLayer.getFeatureById(c.getId());var a=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]);this._vectorLayer.removeFeatures(d);a.fillOpacity=0.2;a.graphicOpacity=1;a.strokeColor="blue";a.fillColor="blue";a.display="none";d.style=a;this._vectorLayer.addFeatures(d);this._vectorLayer.redraw()}}},{protocol:["Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.gridcalc.QueuedTilesGrid",function(a){this.grid=[];this.map=null;this.tileSize=null;this.maxExtent=null;this.buffer=0;this.numLoadingTiles=0;for(p in a){this[p]=a[p]}},{destroy:function(){this.clearGrid();this.grid=null;this.tileSize=null},clearGrid:function(){if(this.grid){for(var f=0,b=this.grid.length;f<b;f++){var e=this.grid[f];for(var c=0,a=e.length;c<a;c++){var d=e[c];d.destroy()}}this.grid=[]}},moveTo:function(d,a){d=d||this.map.getExtent();if(d!=null){var c=!this.grid.length||a;var b=this.getTilesBounds();if(c||!b.containsBounds(d,true)){this.initGriddedTiles(d)}else{this.moveGriddedTiles(d)}}},setTileSize:function(a){},getTilesBounds:function(){var e=null;if(this.grid.length){var a=this.grid.length-1;var d=this.grid[a][0];var b=this.grid[0].length-1;var c=this.grid[0][b];e=new OpenLayers.Bounds(d.bounds.left,d.bounds.bottom,c.bounds.right,c.bounds.top)}return e},calculateGridLayout:function(a,o,e){var k=e*this.tileSize.w;var c=e*this.tileSize.h;var i=a.left-o.left;var l=Math.floor(i/k)-this.buffer;var j=i/k-l;var f=-j*this.tileSize.w;var m=o.left+l*k;var b=a.top-(o.bottom+c);var h=Math.ceil(b/c)+this.buffer;var n=h-b/c;var d=-n*this.tileSize.h;var g=o.bottom+h*c;return{tilelon:k,tilelat:c,tileoffsetlon:m,tileoffsetlat:g,tileoffsetx:f,tileoffsety:d}},initGriddedTiles:function(i){var g=this.map.getSize();var w=Math.ceil(g.h/this.tileSize.h)+Math.max(1,2*this.buffer);var A=Math.ceil(g.w/this.tileSize.w)+Math.max(1,2*this.buffer);var o=this.maxExtent;var s=this.map.getResolution();var r=this.calculateGridLayout(i,o,s);var f=Math.round(r.tileoffsetx);var c=Math.round(r.tileoffsety);var k=r.tileoffsetlon;var n=r.tileoffsetlat;var e=r.tilelon;var j=r.tilelat;this.origin=new OpenLayers.Pixel(f,c);var v=f;var z=k;var u=0;var a=parseInt(this.map.layerContainerDiv.style.left);var t=parseInt(this.map.layerContainerDiv.style.top);do{var h=this.grid[u++];if(!h){h=[];this.grid.push(h)}k=z;f=v;var d=0;do{var b=new OpenLayers.Bounds(k,n,k+e,n+j);var m=f;m-=a;var l=c;l-=t;var q=new OpenLayers.Pixel(m,l);var B=h[d++];if(!B){B=this.addTile(b,q);h.push(B)}else{B.moveTo(b,q,false)}k+=e;f+=this.tileSize.w}while((k<=i.right+e*this.buffer)||d<A);n-=j;c+=this.tileSize.h}while((n>=i.bottom-j*this.buffer)||u<w);this.removeExcessTiles(u,d)},addTile:function(b,a){return new OpenLayers.Tile(this.layer,b,a,"",this.tileSize)},moveGriddedTiles:function(c){var b=this.buffer||1;while(true){var a=this.grid[0][0].position;var d=this.map.getViewPortPxFromLayerPx(a);if(d.x>-this.tileSize.w*(b-1)){this.shiftColumn(true)}else{if(d.x<-this.tileSize.w*b){this.shiftColumn(false)}else{if(d.y>-this.tileSize.h*(b-1)){this.shiftRow(true)}else{if(d.y<-this.tileSize.h*b){this.shiftRow(false)}else{break}}}}}},shiftRow:function(n){var c=(n)?0:(this.grid.length-1);var b=this.grid;var f=b[c];var e=this.map.getResolution();var h=(n)?-this.tileSize.h:this.tileSize.h;
var g=e*-h;var m=(n)?b.pop():b.shift();for(var j=0,l=f.length;j<l;j++){var d=f[j];var a=d.bounds.clone();var k=d.position.clone();a.bottom=a.bottom+g;a.top=a.top+g;k.y=k.y+h;m[j].moveTo(a,k)}if(n){b.unshift(m)}else{b.push(m)}},shiftColumn:function(m){var d=(m)?-this.tileSize.w:this.tileSize.w;var c=this.map.getResolution();var k=c*d;for(var e=0,g=this.grid.length;e<g;e++){var l=this.grid[e];var j=(m)?0:(l.length-1);var b=l[j];var a=b.bounds.clone();var f=b.position.clone();a.left=a.left+k;a.right=a.right+k;f.x=f.x+d;var h=m?this.grid[e].pop():this.grid[e].shift();h.moveTo(a,f);if(m){l.unshift(h)}else{l.push(h)}}},removeExcessTiles:function(e,c){while(this.grid.length>e){var f=this.grid.pop();for(var b=0,a=f.length;b<a;b++){var d=f[b];d.destroy()}}while(this.grid[0].length>c){for(var b=0,a=this.grid.length;b<a;b++){var f=this.grid[b];var d=f.pop();d.destroy()}}},onMapResize:function(){},CLASS_NAME:"NLSFI.OpenLayers.Strategy.QueuedTilesGrid"});Oskari.clazz.define("Oskari.mapframework.gridcalc.QueuedTilesStrategy",function(a){this.debugGridFeatures=true;this.options=a;this.tileQueue=a.tileQueue;this.autoActivate=true;this.autoDestroy=false;this.grid=null;this.bounds=null;for(p in a){this[p]=a[p]}this.active=false},{setLayer:function(a){this.layer=a},flushTileQueue:function(){var b=this.tileQueue.queue;var a=[];for(var c=0;c<b.length;c++){if(b[c].tileFeature!=null){a.push(b[c].tileFeature);b[c].tileFeature=null}}if(a.length>0){this.layer.destroyFeatures(a)}this.tileQueue.flushQueue()},unloadOutOfViewFeatures:function(){},ratio:1,activate:function(){if(this.active){return false}this.active=true;this.grid=Oskari.clazz.create("Oskari.mapframework.gridcalc.QueuedTilesGrid",{map:this.layer.map,layer:this.layer,maxExtent:this.layer.map.getMaxExtent(),tileSize:this.layer.map.getTileSize()});this.layer.events.on({refresh:this.updateRefresh,scope:this});return true},deactivate:function(){if(!this.active){return false}this.layer.events.un({refresh:this.update,scope:this});this.grid.destroy();this.grid=null;return true},updateRefresh:function(a){this.update()},updateMoveEnd:function(a){this.update()},update:function(b){var a=this.layer.map.getExtent();this.grid.moveTo(a,true);this.flushTileQueue();var c=this.layer.map.getZoom();if(c<this.minZoom){return}this.triggerRead()},invalidBounds:function(a){if(!a){a=this.layer.map.getExtent()}return !this.bounds||!this.bounds.containsBounds(a)},triggerUnload:function(a){this.layer.destroyFeatures()},triggerRead:function(){var b=this.grid.grid;var f=[];var e=this.debugGridFeatures;for(var a=0;a<b.length;a++){for(var h=0;h<b[a].length;h++){var n=b[a][h].bounds.clone();var i={left:n.left,top:n.top,right:n.right,bottom:n.bottom};var d=null;if(e){var m=new OpenLayers.Geometry.Point(n.left,n.bottom);var l=new OpenLayers.Geometry.Point(n.right,n.top);var k=new OpenLayers.Geometry.Point(n.left,n.top);var j=new OpenLayers.Geometry.Point(n.right,n.bottom);var g=new OpenLayers.Geometry.LineString([m,j,l,k,m]);var d=new OpenLayers.Feature.Vector(g,{featureClassName:this.CLASS_NAME,description:""});d.renderIntent="tile";f.push(d)}var o=Oskari.clazz.create("Oskari.mapframework.gridcalc.QueuedTile",{bounds:i,tileFeature:d});this.tileQueue.pushJob(o)}}if(e){this.layer.addFeatures(f)}},merge:function(b){var a=b.features;if(a&&a.length>0){this.layer.addFeatures(a)}},CLASS_NAME:"NLSFI.OpenLayers.Strategy.QueuedTilesStrategy"});Oskari.clazz.define("Oskari.mapframework.mapmodule.TilesGridPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"TilesGridPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();this.createTilesGrid();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}this.afterMapMoveEvent()},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)
}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},createTilesGrid:function(){var d=this;var a=d._sandbox;var b=Oskari.clazz.create("Oskari.mapframework.gridcalc.TileQueue");a.getMap().setTileQueue(b);var e=Oskari.clazz.create("Oskari.mapframework.gridcalc.QueuedTilesStrategy",{tileQueue:b});e.debugGridFeatures=false;this.tileQueue=b;this.tileStrategy=e;var c=new OpenLayers.StyleMap({"default":new OpenLayers.Style({pointRadius:3,strokeColor:"red",strokeWidth:2,fillColor:"#800000"}),tile:new OpenLayers.Style({strokeColor:"#008080",strokeWidth:5,fillColor:"#ffcc66",fillOpacity:0.5}),select:new OpenLayers.Style({fillColor:"#66ccff",strokeColor:"#3399ff"})});this._tilesLayer=new OpenLayers.Layer.Vector("Tiles Layer",{strategies:[e],styleMap:c,visibility:true});this._map.addLayer(this._tilesLayer);this._tilesLayer.setOpacity(0.3)},getTileQueue:function(){return this.tileQueue},afterMapMoveEvent:function(a){this.tileStrategy.update();this._tilesLayer.redraw()},eventHandlers:{AfterMapMoveEvent:function(a){this.afterMapMoveEvent(a)}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.MarkersPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"MarkersPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();this.createMapMarkersLayer();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterHideMapMarkerEvent:function(a){this.afterHideMapMarkerEvent(a)}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},createMapMarkersLayer:function(){var b=this._sandbox;var a=new OpenLayers.Layer.Markers("Markers");this._map.addLayer(a)},afterHideMapMarkerEvent:function(b){var a=this._map.getLayersByName("Markers");if(a!=null&&a[0]!=null){a[0].setVisibility(false)}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.plugin.SearchPlugin",function(a){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._conf=a;this.container=null},{__name:"SearchPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){var e="Etsi...";var b="Hae";var d="Sulje";this.template=jQuery('<div class="mapplugin search-div"><div class="search-textarea-and-button"><input placeholder="'+e+'" type="text" /><input type="button" value="'+b+'" name="search" /></div><div class="results"><div class="header"><div class="close" title="'+d+'"></div></div><div class="content">&nbsp;</div></div></div>');this.templateResultsTable=jQuery("<table><thead><tr><th>Nimi</th><th>Kunta</th><th>Tyyppi</th></tr></thead><tbody></tbody></table>");this.templateResultsRow=jQuery("<tr><td nowrap='nowrap'></td><td nowrap='nowrap'></td><td nowrap='nowrap'></td></tr>");var c=null;if(this.conf&&this.conf.url){c=this.conf.url}else{c=a.getAjaxUrl()+"action_route=GetSearchResult"}this.service=Oskari.clazz.create("Oskari.mapframework.bundle.search.service.SearchService",c)},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}this._createUI()},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)
}a.unregister(this);this._map=null;this._sandbox=null;this.container.remove()},start:function(a){},stop:function(a){},eventHandlers:{},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},_createUI:function(){var b=this._sandbox;var d=this;var e=jQuery(this._map.div);var c=this.template.clone();this.container=c;var d=this;var a=c.find("input[type=text]");a.focus(function(){b.request(d.getName(),b.getRequestBuilder("DisableMapKeyboardMovementRequest")())});a.blur(function(){b.request(d.getName(),b.getRequestBuilder("EnableMapKeyboardMovementRequest")())});a.keypress(function(f){d._checkForEnter(f)});c.find("input[type=button]").click(function(f){d._doSearch()});c.find("div.close").click(function(f){d._hideSearch()});c.find("div.results").hide();e.append(c);if(this._conf&&this._conf.location){if(this._conf.location.top){c.css("top",this._conf.location.top)}if(this._conf.location.left){c.css("left",this._conf.location.left)}if(this._conf.location.right){c.css("right",this._conf.location.right)}if(this._conf.location.bottom){c.css("bottom",this._conf.location.bottom)}}},_checkForEnter:function(b){var a;if(window.event){a=window.event.keyCode}else{if(b){a=b.which}}if(b.keyCode==13){this._doSearch()}},_doSearch:function(){if(this._searchInProgess==true){return}var d=this;this._hideSearch();this._searchInProgess=true;var a=this.container.find("input[type=text]");a.addClass("search-loading");var e=a.val();var c=function(f){d._showResults(f);d._enableSearch()};var b=function(){d._enableSearch()};this.service.doSearch(e,c,b)},_showResults:function(g){var b=g.error;var s=this;var c=this.container.find("div.results");var m=c.find("div.header");var l=c.find("div.content");if(b!=null){l.html(b);c.show();return}var o=g.totalCount;if(o==0){l.html("search_published_map_no_results");c.show()}else{if(o==1){var f=g.locations[0].lon;var h=g.locations[0].lat;var a=g.locations[0].zoomLevel;this._sandbox.request(this.getName(),this._sandbox.getRequestBuilder("MapMoveRequest")(f,h,a,true))}else{var q=this.templateResultsTable.clone();var k=q.find("tbody");for(var n=0;n<o;n++){if(n>=100){k.append("<tr><td class='search-result-too-many' colspan='3'>search_published_map_too_many_results</td></tr>");break}var f=g.locations[n].lon;var h=g.locations[n].lat;var a=g.locations[n].zoomLevel;var j=this.templateResultsRow.clone();j.attr("data-location",f+"---"+h+"---"+a);var t=g.locations[n].name;var r=g.locations[n].village;var e=g.locations[n].type;var d=j.find("td");jQuery(d[0]).append(t);jQuery(d[1]).append(r);jQuery(d[2]).append(e);k.append(j)}l.html(q);c.show();k.find("tr[data-location]").addClass("clickable").click(function(){s._resultClicked(jQuery(this).attr("data-location"))}).find("a").hover(function(){jQuery(this).parents("tr").unbind("click")},function(){jQuery(this).parents("tr").click(function(){s._resultClicked(jQuery(this).attr("data-location"))})})}}},_resultClicked:function(c){var a=c.split("---");var e=a[0];var d=a[1];var b=a[2];this._sandbox.request(this.getName(),this._sandbox.getRequestBuilder("MapMoveRequest")(e,d,b,true))},_enableSearch:function(){this._searchInProgess=false;jQuery("#search-string").removeClass("search-loading")},_hideSearch:function(){this.container.find("div.results").hide();this._sandbox.request(this.getName(),this._sandbox.getRequestBuilder("HideMapMarkerRequest")())}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.plugin.IndexMapPlugin",function(a){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._conf=a;this._indexMap=null;this._indexMapUrl="/Oskari/resources/framework/bundle/mapmodule-plugin/plugin/indexmap/images/suomi25m_tm35fin.png"},{__name:"IndexMapPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){var c=new OpenLayers.Layer.Image("Overview map image",this._indexMapUrl,new OpenLayers.Bounds(26783,6608595,852783,7787250),new OpenLayers.Size(120,173));
var b={mapOptions:{maxExtent:new OpenLayers.Bounds(26783,6608595,852783,7787250),units:"m",projection:this._map.getProjection(),numZoomLevels:1},layers:[c],size:new OpenLayers.Size(120,173),autoPan:false};this._indexMap=new OpenLayers.Control.OverviewMap(b)},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}this.getMapModule().addMapControl("overviewMap",this._indexMap)},stopPlugin:function(a){this.getMapModule().removeMapControl("overviewMap");for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterMapMoveEvent:function(a){if(this._indexMap){this._indexMap.update()}}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.plugin.ScaleBarPlugin",function(a){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._conf=a;this._scalebar=null},{__name:"ScaleBarPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){this._scalebar=new OpenLayers.Control.ScaleLine()},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}this.getMapModule().addMapControl("scaleBar",this._scalebar)},stopPlugin:function(a){this.getMapModule().removeMapControl("scaleBar");for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterMapMoveEvent:function(a){if(this._scalebar){this._scalebar.update()}}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.plugin.LayersPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._supportedFormats={};this._visibilityPollingInterval=1500;this._visibilityCheckOrder=0;this._previousTimer=null},{__name:"LayersPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},getMap:function(){return this._map},register:function(){},unregister:function(){},init:function(a){this.requestHandlers={layerVisibilityHandler:Oskari.clazz.create("Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequestHandler",a,this),layerContentHandler:Oskari.clazz.create("Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequestHandler",a,this)}},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}a.addRequestHandler("MapModulePlugin.MapLayerVisibilityRequest",this.requestHandlers.layerVisibilityHandler);a.addRequestHandler("MapModulePlugin.MapMoveByLayerContentRequest",this.requestHandlers.layerContentHandler)},stopPlugin:function(a){a.removeRequestHandler("MapModulePlugin.MapLayerVisibilityRequest",this.requestHandlers.layerVisibilityHandler);a.removeRequestHandler("MapModulePlugin.MapMoveByLayerContentRequest",this.requestHandlers.layerContentHandler);for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterRearrangeSelectedMapLayerEvent:function(a){this._afterRearrangeSelectedMapLayerEvent(a)},MapMoveStartEvent:function(){this._visibilityCheckOrder++;if(this._previousTimer){clearTimeout(this._previousTimer);
this._previousTimer=null}},AfterMapMoveEvent:function(){var a=this;if(this._previousTimer){clearTimeout(this._previousTimer);this._previousTimer=null}this._visibilityCheckOrder++;this._previousTimer=setTimeout(function(){a._checkLayersVisibility(a._visibilityCheckOrder)},this._visibilityPollingInterval)},AfterMapLayerAddEvent:function(a){this._parseGeometryForLayer(a.getMapLayer())}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},preselectLayers:function(a){},_parseGeometryForLayer:function(c){if(c.getGeometry().length==0){var a=c.getGeometryWKT();if(!a){return}var f=new OpenLayers.Format.WKT();var e=f.read(a);if(e){if(e.constructor!=Array){e=[e]}var d=[];for(var b=0;b<e.length;++b){d.push(e[b].geometry)}c.setGeometry(d)}else{}}},_checkLayersVisibility:function(a){if(a!=this._visibilityCheckOrder){return}var d=this._sandbox.findAllSelectedMapLayers();for(var c=0;c<d.length;++c){var b=d[c];if(!b.isVisible()){continue}this.notifyLayerVisibilityChanged(b)}this._visibilityCheckScheduled=false},_isInScale:function(a){var b=this._sandbox.getMap().getScale();return a.isInScale(b)},isInGeometry:function(b){var c=b.getGeometry();var d=null;for(var a=0;a<c.length;++a){if(!d){d=c[a].getBounds()}else{d.extend(c[a].getBounds())}}if(d){return this.getMap().getExtent().intersectsBounds(d)}return true},notifyLayerVisibilityChanged:function(b){var f=b.isVisible();var d=b.isVisible();if(b.isVisible()){f=this._isInScale(b);d=this.isInGeometry(b)}var e=this.getMap();if(f&&d&&b.isVisible()){var a=e.getLayersByName("layer_"+b.getId());if(a&&a.setVisibility){a.setVisibility(true);a.display(true)}}else{var a=e.getLayersByName("layer_"+b.getId());if(a&&a.setVisibility){a.setVisibility(false);a.display(false)}}var c=this._sandbox.getEventBuilder("MapLayerVisibilityChangedEvent")(b,f,d);this._sandbox.notifyAll(c)},_afterRearrangeSelectedMapLayerEvent:function(b){var g=this._sandbox.findAllSelectedMapLayers();var j=0;var a=this._map.layers.length;var e=this._map.getLayersByName("Markers");if(e.length>0){this._map.setLayerIndex(e[0],a);a--}for(var h=0;h<g.length;h++){if(g[h].isBaseLayer()){for(var d=0;d<g[h].getSubLayers().length;d++){var e=this._map.getLayersByName("basemap_"+g[h].getSubLayers()[d].getId());this._map.setLayerIndex(e[0],j);j++}}else{if(g[h].isLayerOfType("WFS")){var l=new RegExp("wfs_layer_"+g[h].getId()+"_WFS_LAYER_IMAGE*","i");var c=this._map.getLayersByName(l);for(var f=0;f<c.length;f++){this._map.setLayerIndex(c[f],j);j++}var l=new RegExp("wfs_layer_"+g[h].getId()+"_HIGHLIGHTED_FEATURE*","i");var e=this._map.getLayersByName(l);if(e.length>0){this._map.setLayerIndex(e[0],j);j++}}else{var e=this._map.getLayersByName("layer_"+g[h].getId());this._map.setLayerIndex(e[0],j);j++}}}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequest",function(a,b){this._creator=null;this._mapLayerId=a;this._visible=b},{__name:"MapModulePlugin.MapLayerVisibilityRequest",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId},getVisible:function(){return this._visible}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequestHandler",function(a,b){this.sandbox=a;this.layersPlugin=b},{handleRequest:function(b,e){var a=e.getMapLayerId();var d=this.sandbox.findMapLayerFromSelectedMapLayers(a);if(!d){return}d.setVisible(e.getVisible());var f=this.layersPlugin.getMap();if(d.isBaseLayer()){for(var g=0;g<d.getSubLayers().length;g++){var c=f.getLayersByName("basemap_"+d.getSubLayers()[g].getId());c[0].setVisibility(d.isVisible());c[0].display(d.isVisible())}}else{var c=f.getLayersByName("layer_"+d.getId());c[0].setVisibility(d.isVisible());c[0].display(d.isVisible())}this.layersPlugin.notifyLayerVisibilityChanged(d)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequest",function(a){this._creator=null;
this._mapLayerId=a},{__name:"MapModulePlugin.MapMoveByLayerContentRequest",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequestHandler",function(a,b){this.sandbox=a;this.layersPlugin=b},{handleRequest:function(c,f){var b=f.getMapLayerId();var e=this.sandbox.findMapLayerFromSelectedMapLayers(b);if(!e){return}var d=this.layersPlugin.getMapModule().getClosestZoomLevel(e.getMinScale(),e.getMaxScale());this.layersPlugin.getMapModule().setZoomLevel(d,true);if(e.getGeometry().length>0){var g=this.layersPlugin.isInGeometry(e);if(!g){var a=e.getGeometry()[0].getCentroid();this.layersPlugin.getMapModule().moveMapToLanLot(new OpenLayers.LonLat(a.x,a.y))}}this.layersPlugin.getMapModule().notifyMoveEnd();this.layersPlugin._checkLayersVisibility(this.layersPlugin._visibilityCheckOrder)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.event.MapLayerVisibilityChangedEvent",function(a,b,c){this._mapLayer=a;this._inScale=(b==true);this._geomMatch=(c!=false)},{__name:"MapLayerVisibilityChangedEvent",getName:function(){return this.__name},getMapLayer:function(){return this._mapLayer},isInScale:function(){return this._inScale},isGeometryMatch:function(){return this._geomMatch}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.WmsLayerPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._supportedFormats={}},{__name:"WmsLayerPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){this.getMapModule().setLayerPlugin("wmslayer",this)},unregister:function(){this.getMapModule().setLayerPlugin("wmslayer",null)},init:function(a){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterMapLayerAddEvent:function(a){this.afterMapLayerAddEvent(a)},AfterMapLayerRemoveEvent:function(a){this.afterMapLayerRemoveEvent(a)},AfterChangeMapLayerOpacityEvent:function(a){this.afterChangeMapLayerOpacityEvent(a)},AfterChangeMapLayerStyleEvent:function(a){this.afterChangeMapLayerStyleEvent(a)}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},preselectLayers:function(e){var b=this._sandbox;for(var d=0;d<e.length;d++){var c=e[d];var a=c.getId();if(!c.isLayerOfType("WMS")){continue}b.printDebug("preselecting "+a);this.addMapLayerToMap(c,true,c.isBaseLayer())}},afterMapLayerAddEvent:function(a){this.addMapLayerToMap(a.getMapLayer(),a.getKeepLayersOrder(),a.isBasemap())},addMapLayerToMap:function(h,f,a){if(!h.isLayerOfType("WMS")){return}this._sandbox.printDebug(" [SnappyWMSLayer]  Creating "+h.getId()+" KEEP ON TOP ? "+f+" BASE? "+a);var l=this._map.getLayersByName("Markers");if(l){for(var c=0;c<l.length;c++){if(l[c]){this._map.removeLayer(l[c],false)}}}if(h.isGroupLayer()||h.isBaseLayer()||a==true){if(h.getSubLayers().length>0){for(var e=0;e<h.getSubLayers().length;e++){var b="";for(var d=0;d<h.getSubLayers()[e].getWmsUrls().length;d++){b+=h.getSubLayers()[e].getWmsUrls()[d]}var k=this.getMapModule().calculateLayerScales(h.getSubLayers()[e].getMaxScale(),h.getSubLayers()[e].getMinScale());var g=Oskari.$("SnappyWMSLayer");var m=new g("basemap_"+h.getSubLayers()[e].getId(),h.getSubLayers()[e].getWmsUrls(),{layers:h.getSubLayers()[e].getWmsName(),transparent:true,id:h.getSubLayers()[e].getId(),styles:h.getSubLayers()[e].getCurrentStyle().getName(),format:"image/png"},{layerId:h.getSubLayers()[e].getWmsName(),scales:k,isBaseLayer:false,displayInLayerSwitcher:true,visibility:true,buffer:0});
m.opacity=h.getOpacity()/100;this.attachLoadingStatusToLayer(m,true,h);this._map.addLayer(m);this._sandbox.printDebug(" [SnappyWMSLayer]  Created SnappyGrid for WMS WITH SUBLAYERS for "+h.getId());if(!f){this._map.setLayerIndex(m,0)}}}else{var k=this.getMapModule().calculateLayerScales(h.getMaxScale(),h.getMinScale());var g=Oskari.$("SnappyWMSLayer");var m=new g("layer_"+h.getId(),h.getWmsUrls(),{layers:h.getWmsName(),transparent:true,id:h.getId(),styles:h.getCurrentStyle().getName(),format:"image/png"},{layerId:h.getWmsName(),scales:k,isBaseLayer:false,displayInLayerSwitcher:true,visibility:true,buffer:0});m.opacity=h.getOpacity()/100;this.attachLoadingStatusToLayer(m,true,h);this._map.addLayer(m);this._sandbox.printDebug(" [SnappyWMSLayer]  Created SnappyGrid for WMS WITH SUBLAYERS for "+h.getId());if(f){this._map.setLayerIndex(m,this._map.layers.length)}else{this._map.setLayerIndex(m,0)}}}else{var k=this.getMapModule().calculateLayerScales(h.getMaxScale(),h.getMinScale());var g=Oskari.$("SnappyWMSLayer");var m=new g("layer_"+h.getId(),h.getWmsUrls(),{layers:h.getWmsName(),transparent:true,id:h.getId(),styles:h.getCurrentStyle().getName(),format:"image/png"},{layerId:h.getWmsName(),scales:k,isBaseLayer:false,displayInLayerSwitcher:true,visibility:true,buffer:0});this.attachLoadingStatusToLayer(m,true,h);m.opacity=h.getOpacity()/100;this._map.addLayer(m);this._sandbox.printDebug("#!#! CREATED OPENLAYER.LAYER.WMS for "+h.getId());if(f){this._map.setLayerIndex(m,this._map.layers.length)}else{this._map.setLayerIndex(m,0)}}if(l){for(var c=0;c<l.length;c++){if(l[c]){this._map.addLayer(l[c])}}}},afterMapLayerRemoveEvent:function(b){var a=b.getMapLayer();this.removeMapLayerFromMap(a)},removeMapLayerFromMap:function(d){if(!d.isLayerOfType("WMS")){return}if(d.isBaseLayer()){var b="";if(d.getSubLayers().length>0){for(var c=0;c<d.getSubLayers().length;c++){var a=this._map.getLayersByName("basemap_"+d.getSubLayers()[c].getId());a[0].destroy()}}else{var a=this._map.getLayersByName("layer_"+d.getId());a[0].destroy()}}else{var a=this._map.getLayersByName("layer_"+d.getId());a[0].destroy()}},getOLMapLayers:function(c){if(!c.isLayerOfType("WMS")){return null}if(c.isBaseLayer()){var a="";if(c.getSubLayers().length>0){for(var b=0;b<c.getSubLayers().length;b++){return this._map.getLayersByName("basemap_"+c.getSubLayers()[b].getId())}}else{return this._map.getLayersByName("layer_"+c.getId())}}else{return this._map.getLayersByName("layer_"+c.getId())}return null},afterChangeMapLayerOpacityEvent:function(c){var b=c.getMapLayer();if(!b.isLayerOfType("WMS")){return}if(b.isBaseLayer()||b.isGroupLayer()){if(b.getSubLayers().length>0){for(var d=0;d<b.getSubLayers().length;d++){var a=this._map.getLayersByName("basemap_"+b.getSubLayers()[d].getId());a[0].setOpacity(b.getOpacity()/100)}}else{var a=this._map.getLayersByName("layer_"+b.getId());if(a[0]!=null){a[0].setOpacity(b.getOpacity()/100)}}}else{this._sandbox.printDebug("Setting Layer Opacity for "+b.getId()+" to "+b.getOpacity());var a=this._map.getLayersByName("layer_"+b.getId());if(a[0]!=null){a[0].setOpacity(b.getOpacity()/100)}}},afterChangeMapLayerStyleEvent:function(c){var b=c.getMapLayer();if(!b.isBaseLayer()){var a=this._map.getLayersByName("layer_"+b.getId());if(a!=null){a[0].mergeNewParams({styles:b.getCurrentStyle().getName()})}}},attachLoadingStatusToLayer:function(b,e,c){var a=this._sandbox;var d=this;var f=this.getMapModule().getLocalization("status_update_map")+" '"+c.getName()+"'...";b.events.register("loadstart",b,function(){a.request(d,a.getRequestBuilder("ActionStartRequest")(b.id,f,true))});b.events.register("loadend",b,function(){a.request(d,a.getRequestBuilder("ActionReadyRequest")(b.id,true))});b.events.register("loadcancel",b,function(){a.request(d,a.getRequestBuilder("ActionReadyRequest")(b.id,true))})}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.$("SnappyGrid",OpenLayers.Class(OpenLayers.Layer.HTTPRequest,{tileSize:null,grid:null,singleTile:false,ratio:1.5,buffer:2,numLoadingTiles:0,initialize:function(c,b,d,a){OpenLayers.Layer.HTTPRequest.prototype.initialize.apply(this,arguments);
this.events.addEventType("tileloaded");this.grid=[]},destroy:function(){this.clearGrid();this.grid=null;this.tileSize=null;OpenLayers.Layer.HTTPRequest.prototype.destroy.apply(this,arguments)},clearGrid:function(){if(this.grid){for(var f=0,b=this.grid.length;f<b;f++){var e=this.grid[f];for(var c=0,a=e.length;c<a;c++){var d=e[c];this.removeTileMonitoringHooks(d);d.destroy()}}this.grid=[]}},clone:function(a){if(a==null){a=new OpenLayers.Layer.Grid(this.name,this.url,this.params,this.getOptions())}a=OpenLayers.Layer.HTTPRequest.prototype.clone.apply(this,[a]);if(this.tileSize!=null){a.tileSize=this.tileSize.clone()}a.grid=[];return a},moveTo:function(d,a,e){OpenLayers.Layer.HTTPRequest.prototype.moveTo.apply(this,arguments);d=d||this.map.getExtent();if(d!=null){var c=!this.grid.length||a;var b=this.getTilesBounds();if(this.singleTile){if(c||(!e&&!b.containsBounds(d))){this.initSingleTile(d)}}else{if(c||!b.containsBounds(d,true)){this.initGriddedTiles(d)}else{this.moveGriddedTiles(d)}}}},setTileSize:function(a){if(this.singleTile){a=this.map.getSize();a.h=parseInt(a.h*this.ratio);a.w=parseInt(a.w*this.ratio)}OpenLayers.Layer.HTTPRequest.prototype.setTileSize.apply(this,[a])},getGridBounds:function(){var a="The getGridBounds() function is deprecated. It will be removed in 3.0. Please use getTilesBounds() instead.";OpenLayers.Console.warn(a);return this.getTilesBounds()},getTilesBounds:function(){var e=null;if(this.grid.length){var a=this.grid.length-1;var d=this.grid[a][0];var b=this.grid[0].length-1;var c=this.grid[0][b];e=new OpenLayers.Bounds(d.bounds.left,d.bounds.bottom,c.bounds.right,c.bounds.top)}return e},initSingleTile:function(f){var a=f.getCenterLonLat();var h=f.getWidth()*this.ratio;var b=f.getHeight()*this.ratio;var g=new OpenLayers.Bounds(a.lon-(h/2),a.lat-(b/2),a.lon+(h/2),a.lat+(b/2));var d=new OpenLayers.LonLat(g.left,g.top);var c=this.map.getLayerPxFromLonLat(d);if(!this.grid.length){this.grid[0]=[]}var e=this.grid[0][0];if(!e){e=this.addTile(g,c);this.addTileMonitoringHooks(e);e.draw();this.grid[0][0]=e}else{e.moveTo(g,c)}this.removeExcessTiles(1,1)},calculateGridLayout:function(a,o,e){var k=e*this.tileSize.w;var c=e*this.tileSize.h;var i=a.left-o.left;var l=Math.floor(i/k)-this.buffer;var j=i/k-l;var f=-j*this.tileSize.w;var m=o.left+l*k;var b=a.top-(o.bottom+c);var h=Math.ceil(b/c)+this.buffer;var n=h-b/c;var d=-n*this.tileSize.h;var g=o.bottom+h*c;return{tilelon:k,tilelat:c,tileoffsetlon:m,tileoffsetlat:g,tileoffsetx:f,tileoffsety:d}},initGriddedTiles:function(i){var g=this.map.getSize();var w=Math.ceil(g.h/this.tileSize.h)+Math.max(1,2*this.buffer);var A=Math.ceil(g.w/this.tileSize.w)+Math.max(1,2*this.buffer);var o=this.getMaxExtent();var s=this.map.getResolution();var r=this.calculateGridLayout(i,o,s);var f=Math.round(r.tileoffsetx);var c=Math.round(r.tileoffsety);var k=r.tileoffsetlon;var n=r.tileoffsetlat;var e=r.tilelon;var j=r.tilelat;this.origin=new OpenLayers.Pixel(f,c);var v=f;var z=k;var u=0;var a=parseInt(this.map.layerContainerDiv.style.left);var t=parseInt(this.map.layerContainerDiv.style.top);do{var h=this.grid[u++];if(!h){h=[];this.grid.push(h)}k=z;f=v;var d=0;do{var b=new OpenLayers.Bounds(k,n,k+e,n+j);var m=f;m-=a;var l=c;l-=t;var q=new OpenLayers.Pixel(m,l);var B=h[d++];if(!B){B=this.addTile(b,q);this.addTileMonitoringHooks(B);h.push(B)}else{B.moveTo(b,q,false)}k+=e;f+=this.tileSize.w}while((k<=i.right+e*this.buffer)||d<A);n-=j;c+=this.tileSize.h}while((n>=i.bottom-j*this.buffer)||u<w);this.removeExcessTiles(u,d);this.spiralTileLoad()},getMaxExtent:function(){return this.maxExtent},spiralTileLoad:function(){var b=[];var h=["right","down","left","up"];var g=0;var a=-1;var k=OpenLayers.Util.indexOf(h,"right");var l=0;while(l<h.length){var j=g;var c=a;switch(h[k]){case"right":c++;break;case"down":j++;break;case"left":c--;break;case"up":j--;break}var f=null;if((j<this.grid.length)&&(j>=0)&&(c<this.grid[0].length)&&(c>=0)){f=this.grid[j][c]}if((f!=null)&&(!f.queued)){b.unshift(f);f.queued=true;l=0;g=j;a=c}else{k=(k+1)%4;l++}}for(var d=0,e=b.length;d<e;d++){var f=b[d];f.draw();f.queued=false}},addTile:function(b,a){},addTileMonitoringHooks:function(a){a.onLoadStart=function(){if(this.numLoadingTiles==0){this.events.triggerEvent("loadstart")
}this.numLoadingTiles++};a.events.register("loadstart",this,a.onLoadStart);a.onLoadEnd=function(){this.numLoadingTiles--;this.events.triggerEvent("tileloaded");if(this.numLoadingTiles==0){this.events.triggerEvent("loadend")}};a.events.register("loadend",this,a.onLoadEnd);a.events.register("unload",this,a.onLoadEnd)},removeTileMonitoringHooks:function(a){a.unload();a.events.un({loadstart:a.onLoadStart,loadend:a.onLoadEnd,unload:a.onLoadEnd,scope:this})},moveGriddedTiles:function(c){var b=this.buffer||1;while(true){var a=this.grid[0][0].position;var d=this.map.getViewPortPxFromLayerPx(a);if(d.x>-this.tileSize.w*(b-1)){this.shiftColumn(true)}else{if(d.x<-this.tileSize.w*b){this.shiftColumn(false)}else{if(d.y>-this.tileSize.h*(b-1)){this.shiftRow(true)}else{if(d.y<-this.tileSize.h*b){this.shiftRow(false)}else{break}}}}}},shiftRow:function(n){var c=(n)?0:(this.grid.length-1);var b=this.grid;var f=b[c];var e=this.map.getResolution();var h=(n)?-this.tileSize.h:this.tileSize.h;var g=e*-h;var m=(n)?b.pop():b.shift();for(var j=0,l=f.length;j<l;j++){var d=f[j];var a=d.bounds.clone();var k=d.position.clone();a.bottom=a.bottom+g;a.top=a.top+g;k.y=k.y+h;m[j].moveTo(a,k)}if(n){b.unshift(m)}else{b.push(m)}},shiftColumn:function(m){var d=(m)?-this.tileSize.w:this.tileSize.w;var c=this.map.getResolution();var k=c*d;for(var e=0,g=this.grid.length;e<g;e++){var l=this.grid[e];var j=(m)?0:(l.length-1);var b=l[j];var a=b.bounds.clone();var f=b.position.clone();a.left=a.left+k;a.right=a.right+k;f.x=f.x+d;var h=m?this.grid[e].pop():this.grid[e].shift();h.moveTo(a,f);if(m){l.unshift(h)}else{l.push(h)}}},removeExcessTiles:function(e,c){while(this.grid.length>e){var f=this.grid.pop();for(var b=0,a=f.length;b<a;b++){var d=f[b];this.removeTileMonitoringHooks(d);d.destroy()}}while(this.grid[0].length>c){for(var b=0,a=this.grid.length;b<a;b++){var f=this.grid[b];var d=f.pop();this.removeTileMonitoringHooks(d);d.destroy()}}},onMapResize:function(){if(this.singleTile){this.clearGrid();this.setTileSize()}},getTileBounds:function(d){var c=this.maxExtent;var f=this.getResolution();var e=f*this.tileSize.w;var b=f*this.tileSize.h;var h=this.getLonLatFromViewPortPx(d);var a=c.left+(e*Math.floor((h.lon-c.left)/e));var g=c.bottom+(b*Math.floor((h.lat-c.bottom)/b));return new OpenLayers.Bounds(a,g,a+e,g+b)},CLASS_NAME:"OpenLayers.Layer.SnappyGrid"}));Oskari.$("SnappyWMSLayer",OpenLayers.Class(OpenLayers.Layer.Grid,{DEFAULT_PARAMS:{service:"WMS",version:"1.1.1",request:"GetMap",styles:"",format:"image/jpeg"},reproject:false,isBaseLayer:true,encodeBBOX:false,noMagic:false,yx:{"EPSG:4326":true},initialize:function(d,c,e,b){var a=[];e=OpenLayers.Util.upperCaseObject(e);if(parseFloat(e.VERSION)>=1.3&&!e.EXCEPTIONS){e.EXCEPTIONS="INIMAGE"}a.push(d,c,e,b);OpenLayers.Layer.Grid.prototype.initialize.apply(this,a);OpenLayers.Util.applyDefaults(this.params,OpenLayers.Util.upperCaseObject(this.DEFAULT_PARAMS));if(!this.noMagic&&this.params.TRANSPARENT&&this.params.TRANSPARENT.toString().toLowerCase()=="true"){if((b==null)||(!b.isBaseLayer)){this.isBaseLayer=false}if(this.params.FORMAT=="image/jpeg"){this.params.FORMAT=OpenLayers.Util.alphaHack()?"image/gif":"image/png"}}},destroy:function(){OpenLayers.Layer.Grid.prototype.destroy.apply(this,arguments)},clone:function(a){if(a==null){a=new OpenLayers.Layer.WMS(this.name,this.url,this.params,this.getOptions())}a=OpenLayers.Layer.Grid.prototype.clone.apply(this,[a]);return a},reverseAxisOrder:function(){return(parseFloat(this.params.VERSION)>=1.3&&!!this.yx[this.map.getProjectionObject().getCode()])},getURL:function(c){c=this.adjustBounds(c);var d=this.getImageSize();var e={};var b=this.reverseAxisOrder();e.BBOX=this.encodeBBOX?c.toBBOX(null,b):c.toArray(b);e.WIDTH=d.w;e.HEIGHT=d.h;var a=this.getFullRequestString(e);return a},mergeNewParams:function(c){var b=OpenLayers.Util.upperCaseObject(c);var a=[b];return OpenLayers.Layer.Grid.prototype.mergeNewParams.apply(this,a)},getFullRequestString:function(e,c){var b=this.map.getProjectionObject();var a=this.projection&&this.projection.equals(b)?this.projection.getCode():b.getCode();var d=(a=="none")?null:a;
if(parseFloat(this.params.VERSION)>=1.3){this.params.CRS=d}else{this.params.SRS=d}if(typeof this.params.TRANSPARENT=="boolean"){e.TRANSPARENT=this.params.TRANSPARENT?"TRUE":"FALSE"}return OpenLayers.Layer.Grid.prototype.getFullRequestString.apply(this,arguments)},CLASS_NAME:"OpenLayers.Layer.SnappyWMS"}));Oskari.clazz.define("Oskari.mapframework.mapmodule.WfsLayerPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._supportedFormats={}},{__name:"WfsLayerPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){},register:function(){this.getMapModule().setLayerPlugin("wfslayer",this)},unregister:function(){this.getMapModule().setLayerPlugin("wfslayer",null)},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterMapMoveEvent:function(b){var a=this._sandbox.getObjectCreator(b);this._sandbox.printDebug("[WfsLayerPlugin] got AfterMapMoveEvent from "+a);this.afterAfterMapMoveEvent(b)},AfterMapLayerAddEvent:function(a){this.afterMapLayerAddEvent(a)},AfterMapLayerRemoveEvent:function(a){this.afterMapLayerRemoveEvent(a)},AfterWfsGetFeaturesPngImageForMapEvent:function(a){this.afterWfsGetFeaturesPngImageForMapEvent(a)},AfterHighlightWFSFeatureRowEvent:function(a){this.handleAfterHighlightWFSFeatureRowEvent(a)},AfterChangeMapLayerOpacityEvent:function(a){this.afterChangeMapLayerOpacityEvent(a)},AfterDimMapLayerEvent:function(a){this.handleAfterDimMapLayerEvent(a)}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},preselectLayers:function(e){var b=this._sandbox;for(var d=0;d<e.length;d++){var c=e[d];var a=c.getId();if(!c.isLayerOfType("WFS")){continue}b.printDebug("[WfsLayerPlugin] preselecting "+a);this.addMapLayerToMap(c,true,c.isBaseLayer())}},afterChangeMapLayerOpacityEvent:function(c){var b=c.getMapLayer();if(!b.isLayerOfType("WFS")){return}var d=this.getOLMapLayers(b);for(var a=0;a<d.length;a++){d[a].setOpacity(b.getOpacity()/100)}},handleAfterDimMapLayerEvent:function(d){var c=d.getMapLayer();if(c.isLayerOfType("WFS")){var a=new RegExp("wfs_layer_"+c.getId()+"_HIGHLIGHTED_FEATURE*","i");var e=this._map.getLayersByName(a);for(var b=0;b<e.length;b++){e[b].destroy()}}},afterMapLayerAddEvent:function(a){this.addMapLayerToMap(a.getMapLayer(),a.getKeepLayersOrder(),a.isBasemap())},addMapLayerToMap:function(b,c,a){},afterMapLayerRemoveEvent:function(b){var a=b.getMapLayer();this.removeMapLayerFromMap(a)},removeMapLayerFromMap:function(b){if(!b.isLayerOfType("WFS")){return}var c=this.getOLMapLayers(b);for(var a=0;a<c.length;a++){c[a].destroy()}},getOLMapLayers:function(c){if(c&&!c.isLayerOfType("WFS")){return}var b="";if(c){b="_"+c.getId()}var a=new RegExp("wfs_layer"+b+"_*","i");return this._map.getLayersByName(a)},afterWfsGetFeaturesPngImageForMapEvent:function(m){var q=m.getImageUrl();var r=m.getBbox();var t=m.getMapLayer();var k=null;if(r.bounds&&r.bounds.left&&r.bounds.right&&r.bounds.top&&r.bounds.bottom){k=new OpenLayers.Bounds(r.bounds.left,r.bounds.bottom,r.bounds.right,r.bounds.top)}else{if(r.left&&r.right&&r.top&&r.bottom){k=new OpenLayers.Bounds(r.left,r.bottom,r.right,r.top)}}if(!(q&&t&&k)){return}var s=this.mapModule.calculateLayerScales(t.getMaxScale(),t.getMinScale());var g=null;var c=this._map.getLayersByName(m.getRequestedLayerName());for(var n=0;n<c.length;n++){g=this._map.getLayerIndex(c[0]);c[0].destroy()}if(this._sandbox.isLayerAlreadySelected(t.getId())){var u=m.getRequestedLayerName();var l=new OpenLayers.Size(256,256);var a=new OpenLayers.Layer.Image(u,q,k,l,{scales:s,transparent:true,format:"image/png",isBaseLayer:false,displayInLayerSwitcher:true,visibility:true,buffer:0});this.mapModule.attachLoadingStatusToLayer(a,t);
a.opacity=t.getOpacity()/100;this._map.addLayer(a);a.setVisibility(true);a.redraw(true)}var h=Oskari.$().sandbox.findAllSelectedMapLayers();var f=this._map.layers.length;var b=this._map.getLayersByName("Markers");if(b.length>0){this._map.setLayerIndex(b[0],f);f--}if(g!==null&&a!==null){this._map.setLayerIndex(a,g)}var d=new RegExp("wfs_layer_"+t.getId()+"_WFS_LAYER_IMAGE*","i");var o=this._map.getLayersByName(d);if(o.length>0){var j=this._map.getLayerIndex(o[o.length-1]);var e=this._map.getLayersByName("wfs_layer_"+t.getId()+"_HIGHLIGHTED_FEATURE");if(e.length>0){this._map.setLayerIndex(e[0],j)}}},handleAfterHighlightWFSFeatureRowEvent:function(e){var b=e.getWfsFeatureIds();if(b.length==0){if(!this._sandbox.isCtrlKeyDown()){var d=e.getMapLayer();if(d.isLayerOfType("WFS")){var a=new RegExp("wfs_layer_"+d.getId()+"_HIGHLIGHTED_FEATURE*","i");var f=this._map.getLayersByName(a);for(var c=0;c<f.length;c++){f[c].destroy()}}}}},removeHighlightOnMapLayer:function(){var a=new RegExp("_HIGHLIGHTED_FEATURE*","i");var c=this._map.getLayersByName(a);for(var b=0;b<c.length;b++){c[b].destroy()}},updateWfsImages:function(b){var c=Oskari.$().sandbox.findAllSelectedMapLayers();for(var a=0;a<c.length;a++){if(c[a].isInScale()&&c[a].isLayerOfType("WFS")){this.doWfsLayerRelatedQueries(c[a])}}},doWfsLayerRelatedQueries:function(a){if(!a.isInScale()){return}var e=this._sandbox.getMap();var f=e.getBbox();var d=this._sandbox.getService("Oskari.mapframework.service.OgcSearchService");var b=e.getWidth();var c=e.getHeight();d.scheduleWFSMapLayerUpdate(a,f,b,c,this.getName());d.startPollers()},afterAfterMapMoveEvent:function(a){this.updateWfsImages(this.getName());this.removeHighlightOnMapLayer()}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.VectorLayerPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._supportedFormats={};this._sldFormat=new OpenLayers.Format.SLD({multipleSymbolizers:false,namedLayersAsArray:true})},{__name:"VectorLayerPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){this.getMapModule().setLayerPlugin("vectorlayer",this)},unregister:function(){this.getMapModule().setLayerPlugin("vectorlayer",null)},init:function(a){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();this.registerVectorFormats();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterMapLayerAddEvent:function(a){this.afterMapLayerAddEvent(a)},AfterMapLayerRemoveEvent:function(a){this.afterMapLayerRemoveEvent(a)},FeaturesAvailableEvent:function(a){this.handleFeaturesAvailableEvent(a)}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},preselectLayers:function(e){var b=this._sandbox;for(var d=0;d<e.length;d++){var c=e[d];var a=c.getId();if(!c.isLayerOfType("VECTOR")){continue}b.printDebug("preselecting "+a);this.addMapLayerToMap(c,true,c.isBaseLayer())}},afterMapLayerAddEvent:function(a){this.addMapLayerToMap(a.getMapLayer(),a.getKeepLayersOrder(),a.isBasemap())},registerVectorFormat:function(b,a){this._supportedFormats[b]=a},registerVectorFormats:function(){this.registerVectorFormat("application/json",new OpenLayers.Format.GeoJSON({}));this.registerVectorFormat("application/nlsfi-x-openlayers-feature",new function(){this.read=function(a){return a}})},addMapLayerToMap:function(g,e,b){if(!g.isLayerOfType("VECTOR")){return}var h=this._map.getLayersByName("Markers");this._map.removeLayer(h[0],false);var j=new OpenLayers.StyleMap();var f={styleMap:j};var c=g.getStyledLayerDescriptor();if(c){this._sandbox.printDebug(c);var d=this._sldFormat.read(c);window.styleInfo=d;var k=d.namedLayers[0].userStyles;
var a=k[0];j.styles["default"]=a}var i=new OpenLayers.Layer.Vector("layer_"+g.getId(),f);i.opacity=g.getOpacity()/100;this._map.addLayer(i);this._sandbox.printDebug("#!#! CREATED VECTOR / OPENLAYER.LAYER.VECTOR for "+g.getId());if(e){this._map.setLayerIndex(i,this._map.layers.length)}else{this._map.setLayerIndex(i,0)}this._map.addLayer(h[0])},afterMapLayerRemoveEvent:function(b){var a=b.getMapLayer();this.removeMapLayerFromMap(a)},removeMapLayerFromMap:function(b){if(!b.isLayerOfType("VECTOR")){return}var a=this._map.getLayersByName("layer_"+b.getId());a[0].destroy()},getOLMapLayers:function(a){if(!a.isLayerOfType("VECTOR")){return}return this._map.getLayersByName("layer_"+a.getId())},handleFeaturesAvailableEvent:function(e){var b=e.getMapLayer();var g=e.getMimeType();var d=e.getFeatures();var h=e.getOp();var a=this._map.getLayersByName("layer_"+b.getId())[0];if(!a){return}if(h&&h=="replace"){a.removeFeatures(a.features)}var f=this._supportedFormats[g];if(!f){return}var c=f.read(d);a.addFeatures(c)}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.ToolSelectionRequest",function(a){this._toolId=a;this._creator=null},{tools:{navigate:"map_control_navigate_tool",previous:"map_control_tool_prev",next:"map_control_tool_prev",select:"map_control_select_tool",zoom:"map_control_zoom_tool",draw_area:"map_control_draw_area_tool",measure:"map_control_measure_tool",measure_area:"map_control_measure_area_tool",info:"map_control_show_info_tool"},__name:"ToolSelectionRequest",getName:function(){return this.__name},getToolId:function(){return this._toolId},setToolId:function(a){this._toolId=a},getNamespace:function(){if(this._toolId.indexOf(".")==-1){return""}return this._toolId.substring(0,this._toolId.lastIndexOf("."))},getToolName:function(){if(this._toolId.indexOf(".")==-1){return this._toolId}return this._toolId.substring(this._toolId.lastIndexOf("."))}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.ToolSelectionHandler",function(a,b){this.sandbox=a;this.controlsPlugin=b},{__name:"ToolSelectionHandler",getName:function(){return this.__name},init:function(a){},handleRequest:function(a,f){var h=f.getToolId();var b=f.getNamespace();var d=f.getToolName();if(d!="map_control_zoom_tool"){this.controlsPlugin._zoomBoxTool.deactivate()}if(d!="map_control_measure_tool"){this.controlsPlugin._measureControls.line.deactivate()}if(d!="map_control_measure_area_tool"){this.controlsPlugin._measureControls.area.deactivate()}if(d=="map_control_tool_prev"){var i=this.sandbox.findRegisteredModuleInstance("StateHandler");if(i){i.historyMovePrevious()}}else{if(d=="map_control_tool_next"){var i=this.sandbox.findRegisteredModuleInstance("StateHandler");if(i){i.historyMoveNext()}}else{if(d=="map_control_select_tool"){var c=this.sandbox.findRegisteredModuleInstance("SketchLayerPlugin");if(c){c.clearBbox()}}else{if(d=="map_control_zoom_tool"){this.controlsPlugin._zoomBoxTool.activate()}else{if(d=="map_control_measure_tool"){this.controlsPlugin._measureControls.line.activate()}else{if(d=="map_control_measure_area_tool"){this.controlsPlugin._measureControls.area.activate()}}}}}}var g=this.sandbox.getEventBuilder("ToolSelectedEvent")(h);g.setOrigin(this.getName());this.sandbox.notifyAll(g)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.MapLayerUpdateRequest",function(a,b){this._layerId=a;this._forced=b},{__name:"MapModulePlugin.MapLayerUpdateRequest",getName:function(){return this.__name},getLayerId:function(){return this._layerId},isForced:function(){if(this._forced){return this._forced}return false}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.MapLayerUpdateRequestHandler",function(a,b){this.sandbox=a;this.mapModule=b},{handleRequest:function(b,g){var a=g.getLayerId();var f=g.isForced();var c=this.mapModule.getOLMapLayers(a);var e=0;if(c){e=c.length;
for(var d=0;d<c.length;++d){c[d].redraw(f)}}this.sandbox.printDebug("[MapLayerUpdateRequestHandler] update layer "+a+", found "+e)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.MapMoveRequestHandler",function(a,b){this.sandbox=a;this.mapModule=b},{handleRequest:function(b,d){var f=d.getCenterX();var g=d.getCenterY();var a=d.getMarker();var c=d.getZoom();var e=new OpenLayers.LonLat(f,g);this.mapModule.moveMapToLanLot(e);if(c||c===0){if(c.CLASS_NAME==="OpenLayers.Bounds"){this.mapModule._map.zoomToExtent(c)}else{this.mapModule._map.zoomTo(c)}}this.mapModule._updateDomain();if(a){this.mapModule._drawMarker()}this.mapModule.notifyMoveEnd();this.sandbox.printDebug("[MapMoveRequestHandler] map moved")}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.event.MapClickedEvent",function(c,b,a){this._lonlat=c;this._mouseX=b;this._mouseY=a},{__name:"MapClickedEvent",getName:function(){return this.__name},getLonLat:function(){return this._lonlat},getMouseX:function(){return this._mouseX},getMouseY:function(){return this._mouseY}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.event.EscPressedEvent",function(){},{__name:"EscPressedEvent",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.ClearHistoryRequest",function(){this._creator=null},{__name:"ClearHistoryRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.controls.ClearHistoryHandler",function(a,b){this.mapModule=b;this.sandbox=a},{__name:"ClearHistoryHandler",getName:function(){return this.__name},init:function(a){},handleRequest:function(a,b){this.mapModule.clearNavigationHistory()}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.plugin.Portti2Zoombar",function(a){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this.__templates={};this.__elements={};this.__parent=null;this._slider;this._zoombar_messages={};this._suppressEvents=false;this._conf=a},{__name:"Portti2Zoombar",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this._map=a.getMap();this.pluginName=a.getName()+this.__name},init:function(){var a=this;this.__templates.zoombar=jQuery('<div class="mapplugin pzbDiv" title="Koko Suomi"><div class="pzbDiv-plus"></div><input type=\'hidden\' /><div class="slider"></div><div class="pzbDiv-minus"></div></div>')},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}this.draw();this.setZoombarValue(this._map.getZoom())},draw:function(){var e=this;if(!e.__parent){e.__parent=this._map.div}if(!e.__elements.zoombarSlider){e.__elements.zoombarSlider=e.__templates.zoombar.clone()}var b="pzb-input-"+this.getName();var a="pzb-slider-"+this.getName();e.__elements.zoombarSlider.find("input").attr("id",b);e.__elements.zoombarSlider.find("div.slider").attr("id",a);jQuery(e.__parent).append(e.__elements.zoombarSlider);e._slider=new Slider({min:0,max:12,value:0,direction:"y"}).insertTo(a).assignTo(b);e._slider.level.hide();var d=e.getMapModule().getLocalization("zoombar_tooltip");e._slider.on("change",function(g){var h=d["zoomLvl-"+g.value];if(h){e.__elements.zoombarSlider.attr("title",h)}if(!this._suppressEvents){e.getMapModule().zoomTo(g.value)}});var f=e.__elements.zoombarSlider.find(".pzbDiv-plus");f.bind("click",function(g){if(e._slider.getValue()<12){e.getMapModule().zoomTo(e._slider.getValue()+1)}});var c=e.__elements.zoombarSlider.find(".pzbDiv-minus");c.bind("click",function(g){if(e._slider.getValue()>0){e.getMapModule().zoomTo(e._slider.getValue()-1)}});if(this._conf&&this._conf.location){if(this._conf.location.top){e.__elements.zoombarSlider.css("bottom","auto");
e.__elements.zoombarSlider.css("top",this._conf.location.top)}if(this._conf.location.left){e.__elements.zoombarSlider.css("right","auto");e.__elements.zoombarSlider.css("left",this._conf.location.left)}if(this._conf.location.right){e.__elements.zoombarSlider.css("left","auto");e.__elements.zoombarSlider.css("right",this._conf.location.right)}if(this._conf.location.bottom){e.__elements.zoombarSlider.css("top","auto");e.__elements.zoombarSlider.css("bottom",this._conf.location.bottom)}}},setZoombarValue:function(b){var a=this;if(a._slider){this._suppressEvents=true;a._slider.setValue(b);this._suppressEvents=false}},stopPlugin:function(a){if(this.__elements.zoombarSlider){this.__elements.zoombarSlider.remove();this._slider.remove()}a.unregister(this);this._sandbox=null},eventHandlers:{AfterMapMoveEvent:function(b){var a=this;a.setZoombarValue(b.getZoom())}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},start:function(a){},stop:function(a){}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.plugin.PanButtons",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this.__templates={};this.__elements={};this.__parent=null},{__name:"PanButtons",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this._map=a.getMap();this.pluginName=a.getName()+this.__name},init:function(){var a=this;this.__templates.pan=jQuery('<div class="panbuttonDiv"><div>  <img class="panbuttonDivImg" src="../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/default.png" usemap="#panbuttons">    <map name="panbuttons">      <area shape="circle" class="panbuttons_center" coords="45,45,20" href="#">      <area shape="polygon" class="panbuttons_left" coords="13,20,25,30,20,45,27,65,13,70,5,45" href="#">      <area shape="polygon" class="panbuttons_up" coords="30,8,45,4,60,8,60,23,45,20,30,23" href="#">      <area shape="polygon" class="panbuttons_right" coords="79,20,67,30,72,45,65,65,79,70,87,45" href="#">      <area shape="polygon" class="panbuttons_down" coords="30,82,45,86,60,82,60,68,45,70,30,68" href="#">    </map>  </img></div></div>')},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}this.draw()},draw:function(){var e=this;if(!e.__parent){e.__parent=this._map.div}if(!e.__elements.panbuttons){e.__elements.panbuttons=e.__templates.pan.clone()}jQuery(e.__parent).append(e.__elements.panbuttons);var c=e.__elements.panbuttons.find(".panbuttonDivImg");var a=e.__elements.panbuttons.find(".panbuttons_center");a.bind("mouseover",function(h){c.attr("src","../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/root.png")});a.bind("mouseout",function(h){c.attr("src","../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/default.png")});a.bind("click",function(h){var i=e.getMapModule().getSandbox().getRequestBuilder("StateHandler.SetStateRequest");if(i){e.getMapModule().getSandbox().request(e,i())}});var g=e.__elements.panbuttons.find(".panbuttons_left");g.bind("mouseover",function(h){c.attr("src","../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/left.png")});g.bind("mouseout",function(h){c.attr("src","../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/default.png")});g.bind("click",function(h){e.getMapModule().panMapByPixels(-100,0,false,true)});var d=e.__elements.panbuttons.find(".panbuttons_right");d.bind("mouseover",function(h){c.attr("src","../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/right.png")});d.bind("mouseout",function(h){c.attr("src","../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/default.png")});d.bind("click",function(h){e.getMapModule().panMapByPixels(100,0,false,true)});var f=e.__elements.panbuttons.find(".panbuttons_up");
f.bind("mouseover",function(h){c.attr("src","../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/up.png")});f.bind("mouseout",function(h){c.attr("src","../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/default.png")});f.bind("click",function(h){e.getMapModule().panMapByPixels(0,-100,false,true)});var b=e.__elements.panbuttons.find(".panbuttons_down");b.bind("mouseover",function(h){c.attr("src","../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/down.png")});b.bind("mouseout",function(h){c.attr("src","../../resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/default.png")});b.bind("click",function(h){e.getMapModule().panMapByPixels(0,100,false,true)})},stopPlugin:function(a){a.unregister(this);this._map=null;this._sandbox=null},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},start:function(a){},stop:function(a){}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.PluginMapModuleBundleInstance",function(a){this.name="mapmodule";this.mediator=null;this.sandbox=null;this.conf=null;this.impl=null;this.facade=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};var o=Oskari.$("UI.facade");this.facade=o;var m=o.getSandbox();this.sandbox=m;var j=Oskari.$("startup");this.conf=j;var n=j.mapConfigurations.index_map;var l=j.mapConfigurations.zoom_bar;var b=j.mapConfigurations.scala_bar;var d=j.mapConfigurations.pan;var k=Oskari.clazz.create("Oskari.mapframework.ui.module.common.MapModule","Main",n,l,b,d);this.impl=k;var f=this.createMapPanel();this._panel=f;var a=this.facade.appendExtensionModule(this.impl,this.name,{},this,"Center",{fi:{title:""},sv:{title:"?"},en:{title:""}},f);this.def=a;var e=[];e.push("Oskari.mapframework.bundle.mapmodule.plugin.LayersPlugin");e.push("Oskari.mapframework.mapmodule.WmsLayerPlugin");e.push("Oskari.mapframework.mapmodule.MarkersPlugin");e.push("Oskari.mapframework.mapmodule.VectorLayerPlugin");e.push("Oskari.mapframework.mapmodule.TilesGridPlugin");e.push("Oskari.mapframework.mapmodule.ControlsPlugin");e.push("Oskari.mapframework.mapmodule.WfsLayerPlugin");e.push("Oskari.mapframework.mapmodule.GetInfoPlugin");for(var g=0;g<e.length;g++){var h=Oskari.clazz.create(e[g]);k.registerPlugin(h)}var c=this.createMapContainer(this.impl.getMap());this._mapster=c;f.add(c);o.registerPart("Mapster",this._mapster);this.impl.start(m);this.mediator.setState("started");return this},createMapPanel:function(){var a=this.libs.ext;var b=a.create("Ext.Panel",{region:"center",layout:"fit",items:[]});return b},createMapContainer:function(b){var a=this.libs.ext;var c=a.createWidget("nlsfimappanel",{olmap:b,layout:"absolute"});return c},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.impl.eventHandlers,this,this.def);this.def=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.PluginMapModuleBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.ui.module.common.MapModule",function(a){this._id=a;this._controls={};this._layerPlugins={};this._projectionCode="EPSG:3067";this._supportedFormats={};this._map=null;this._mapScales=[];this._mapResolutions=[2000,1000,500,200,100,50,20,10,4,2,1,0.5,0.25];this._navigationHistoryTool=null;this._sandbox=null;this._stealth=false;this._pluginInstances={};this._navigationHistoryTool=new OpenLayers.Control.NavigationHistory();this._navigationHistoryTool.id="navigationhistory";this._localization=null},{getControls:function(){return this._controls},addMapControl:function(b,a){this._controls[b]=a;this._map.addControl(a)},getMapControl:function(a){return this._controls[a]},removeMapControl:function(a){this._map.removeControl(this._controls[a]);this._controls[a]=null;delete this._controls[a]},setLayerPlugin:function(b,a){this._layerPlugins[b]=a},getLayerPlugin:function(a){return this._layerPlugins[a]},getLayerPlugins:function(){return this._layerPlugins},clearNavigationHistory:function(){this._navigationHistoryTool.clear()},attachLoadingStatusToLayer:function(b,c){var a=this._sandbox;var e=this;var d=this.getLocalization("status_update_map")+" '"+c.getName()+"'...";b.events.register("loadstart",b,function(){a.request(e,a.getRequestBuilder("ActionStartRequest")(b.id,d,true))});b.events.register("loadend",b,function(){a.request(e,a.getRequestBuilder("ActionReadyRequest")(b.id,true))});b.events.register("loadcancel",b,function(){a.request(e,a.getRequestBuilder("ActionReadyRequest")(b.id,true))})},getName:function(){return this._id+"MapModule"},getSandbox:function(){return this._sandbox},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization("MapModule")}if(a){return this._localization[a]}return this._localization},init:function(a){a.printDebug("Initializing map module...#############################################");this._sandbox=a;for(p in this.eventHandlers){a.registerForEventByName(this,p)}this.requestHandlers={mapLayerUpdateHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule-plugin.request.MapLayerUpdateRequestHandler",a,this),mapMoveRequestHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule-plugin.request.MapMoveRequestHandler",a,this),clearHistoryHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule-plugin.controls.ClearHistoryHandler",a,this)};a.addRequestHandler("MapModulePlugin.MapLayerUpdateRequest",this.requestHandlers.mapLayerUpdateHandler);a.addRequestHandler("MapMoveRequest",this.requestHandlers.mapMoveRequestHandler);a.addRequestHandler("ClearHistoryRequest",this.requestHandlers.clearHistoryHandler);this.createMap();for(var c=0;c<this._mapResolutions.length;++c){var b=OpenLayers.Util.getScaleFromResolution(this._mapResolutions[c],"m");b=b*10000;b=Math.round(b);b=b/10000;this._mapScales.push(b)}this.createBaseLayer();this.addMapControl("navigationHistoryTool",this._navigationHistoryTool);this.getMapControl("navigationHistoryTool").activate();return this._map},getPluginInstances:function(){return this._pluginInstances},isPluginActivated:function(b){var a=this._pluginInstances[this.getName()+b];if(a){return true}return false},registerPlugin:function(b){var a=this._sandbox;b.setMapModule(this);var c=b.getName();a.printDebug("["+this.getName()+"] Registering "+c);b.register();this._pluginInstances[c]=b},unregisterPlugin:function(b){var a=this._sandbox;var c=b.getName();a.printDebug("["+this.getName()+"] Unregistering "+c);b.unregister();this._pluginInstances[c]=undefined;b.setMapModule(null)},startPlugin:function(b){var a=this._sandbox;var c=b.getName();a.printDebug("["+this.getName()+"] Starting "+c);b.startPlugin(a)},stopPlugin:function(b){var a=this._sandbox;var c=b.getName();a.printDebug("["+this.getName()+"] Starting "+c);b.stopPlugin(a)},startPlugins:function(a){for(var b in this._pluginInstances){a.printDebug("["+this.getName()+"] Starting "+b);this._pluginInstances[b].startPlugin(a)}},stopPlugins:function(a){for(var b in this._pluginInstances){a.printDebug("["+this.getName()+"] Starting "+b);this._pluginInstances[b].stopPlugin(a)
}},getStealth:function(){return this._stealth},setStealth:function(a){this._stealth=a},notifyAll:function(a,b){if(this._stealth){return}this._sandbox.notifyAll(a,b)},getMap:function(){return this._map},getMapImpl:function(){return this._panel},createMap:function(){var a=this._sandbox;var b=new OpenLayers.LonLat(0,0);this._map=new OpenLayers.Map({controls:[],units:"m",maxExtent:new OpenLayers.Bounds(0,0,10000000,10000000),resolutions:this._mapResolutions,projection:this._projectionCode,isBaseLayer:true,center:b,theme:null,zoom:0});return this._map},createBaseLayer:function(){var a=new OpenLayers.Layer("BaseLayer",{layerId:0,isBaseLayer:true,displayInLayerSwitcher:false});this._map.addLayer(a)},notifyStartMove:function(){if(this.getStealth()){return}this._sandbox.getMap().setMoving(true);var c=this._map.getCenter().lon;var b=this._map.getCenter().lat;var a=this._sandbox.getEventBuilder("MapMoveStartEvent")(c,b);this._sandbox.notifyAll(a)},moveMapToLanLot:function(b,d,c){if(d){this.adjustZoomLevel(d,true)}var a=(c===true);this._map.setCenter(b,this._map.getZoom(),a);this._updateDomain()},zoomIn:function(){this.adjustZoomLevel(1)},zoomOut:function(){this.adjustZoomLevel(-1)},zoomTo:function(a){this.setZoomLevel(a,false)},panMapEast:function(){var a=this._map.getSize();this.panMapByPixels(0.75*a.w,0)},panMapWest:function(){var a=this._map.getSize();this.panMapByPixels(-0.75*a.w,0)},panMapNorth:function(){var a=this._map.getSize();this.panMapByPixels(0,-0.75*a.h)},panMapSouth:function(){var a=this._map.getSize();this.panMapByPixels(0,0.75*a.h)},panMapByPixels:function(e,d,g,c){var f=this._map.getViewPortPxFromLonLat(this._map.getCenter());var a=new OpenLayers.Pixel(f.x+e,f.y+d);var b=this._map.getLonLatFromViewPortPx(a);if(!this.isValidLonLat(b.lon,b.lat)){return}this._map.pan(e,d);this._updateDomain();if(g!==true){this.notifyStartMove()}if(c!==true){this.notifyMoveEnd()}},moveMapByPixels:function(c,b,d,a){this._map.moveByPx(c,b);this._updateDomain();if(d!==true){this.notifyStartMove()}if(a!==true){this.notifyMoveEnd()}},centerMapByPixels:function(e,d,f,c){var a=new OpenLayers.Pixel(e,d);var b=this._map.getLonLatFromViewPortPx(a);if(!this.isValidLonLat(b.lon,b.lat)){return}this.moveMapToLanLot(b);if(f!==true){this.notifyStartMove()}if(c!==true){this.notifyMoveEnd()}},isValidLonLat:function(c,b){var a=true;if(b<6250000||b>8200000){a=false;return a}if(c<0||c>1350000){a=false}return a},zoomToExtent:function(c,b,a){this._map.zoomToExtent(c);this._updateDomain();if(b!==true){this.notifyStartMove()}if(a!==true){this.notifyMoveEnd()}},adjustZoomLevel:function(c,b){var a=this._getNewZoomLevel(c);this._map.zoomTo(a);this._updateDomain();if(b!==true){this.notifyMoveEnd()}},setZoomLevel:function(b,a){if(b<0||b>this._map.getNumZoomLevels){b=this._map.getZoom()}this._map.zoomTo(b);this._updateDomain();if(a!==true){this.notifyMoveEnd()}},_getNewZoomLevel:function(b){var a=this._map.getZoom()+b;if(a>=0&&a<=this._map.getNumZoomLevels()){return a}return this._map.getZoom()},notifyMoveEnd:function(){if(this.getStealth()){return}var a=this._sandbox;a.getMap().setMoving(false);var c=this._map.getCenter();this._updateDomain();var b=a.getEventBuilder("AfterMapMoveEvent")(c.lon,c.lat,this._map.getZoom(),false,this._map.getScale());a.notifyAll(b);a.doSniffing()},_updateDomain:function(){if(this.getStealth()){return}var a=this._sandbox;var d=a.getMap();var c=this._map.getCenter();d.moveTo(c.lon,c.lat,this._map.getZoom());d.setScale(this._map.getScale());var b=this._map.getCurrentSize();d.setWidth(b.w);d.setHeight(b.h);d.setResolution(this._map.getResolution());d.setExtent(this._map.getExtent());d.setMaxExtent(this._map.getMaxExtent());d.setBbox(this._map.calculateBounds());d.setMarkerVisible(this._hasMarkers())},calculateLayerScales:function(d,b){var c=new Array();if(b&&d){this.layerScales=[];for(var a=0;a<this._mapScales.length;a++){if(b>=this._mapScales[a]&&d<=this._mapScales[a]){c.push(this._mapScales[a])}}}return c},getClosestZoomLevel:function(e,d){var c=this._map.getZoom();if(!d||!e){return c}var b=this._map.getScale();if(b<d){for(var a=c;a>0;a--){if(this._mapScales[a]>=d){return a
}}}else{if(b>e){for(var a=c;a<this._mapScales.length;a++){if(this._mapScales[a]<=e){return a}}}}return c},start:function(a){if(this.started){return}a.printDebug("Starting "+this.getName());this.startPlugins(a);this.updateCurrentState();this.started=true},stop:function(a){if(!this.started){return}this.stopPlugins(a);this.started=false},_drawMarker:function(){this._removeMarkers();var e=this._map.getCenter();var b=new OpenLayers.Layer.Markers("Markers");this._map.addLayer(b);var c=new OpenLayers.Size(32,32);var f=new OpenLayers.Pixel(0,-c.h);var d=new OpenLayers.Icon(Oskari.$().startup.imageLocation+"/resource/icons/paikkamerkinta.png",c,f);var a=new OpenLayers.Marker(e,d);b.addMarker(a)},_removeMarkers:function(){var a=this._map.getLayersByName("Markers");if(a){for(var b=0;b<a.length;b++){if(a[b]){this._map.removeLayer(a[b],false)}}}},_hasMarkers:function(){var a=this._map.getLayersByName("Markers");if(a){for(var b=0;b<a.length;b++){if(a[b]&&a[b].markers&&a[b].markers.length>0){return true}}}return false},eventHandlers:{AfterMapMoveEvent:function(a){},SearchClearedEvent:function(a){this._removeMarkers()}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},getOLMapLayers:function(b){var f=this;var a=f._sandbox;var c=a.findMapLayerFromSelectedMapLayers(b);if(!c){return null}var e=this.getLayerPlugins();for(p in e){var d=e[p];var g=d.getOLMapLayers(c);if(g){return g}}return null},updateCurrentState:function(){var d=this;var a=d._sandbox;var e=a.findAllSelectedMapLayers();var c=this.getLayerPlugins();for(p in c){var b=c[p];a.printDebug("preselecting "+p);b.preselectLayers(e)}}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.ui.module.common.mapmodule.Plugin",function(){throw"Oskari.mapframework.ui.module.common.mapmodule.Plugin should not be instantiated"},{getName:function(){throw"Implement your own"},setMapModule:function(a){throw"Implement your own"},register:function(){throw"Implement your own"},unregister:function(){throw"Implement your own"},startPlugin:function(a){throw"Implement your own"},stopPlugin:function(a){throw"Implement your own"},eventHandlers:{},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])}});Oskari.clazz.define("Oskari.mapframework.mapmodule.ControlsPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"ControlsPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){},unregister:function(){},init:function(a){var b=this;this.requestHandlers={toolSelectionHandler:Oskari.clazz.create("Oskari.mapframework.mapmodule.ToolSelectionHandler",a,b)}},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);a.addRequestHandler("ToolSelectionRequest",this.requestHandlers.toolSelectionHandler);for(var b in this.eventHandlers){a.registerForEventByName(this,b)}this.addMapControls()},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterDisableMapKeyboardMovementEvent:function(a){this._keyboardControls.deactivate()},AfterEnableMapKeyboardMovementEvent:function(a){this._keyboardControls.activate()},ToolSelectedEvent:function(b){var a=this.requestHandlers.toolSelectionHandler.getName();this._sandbox.printDebug("[ControlsPlugin] Get ToolSelectedEvent from '"+b.getOrigin()+"':");this._sandbox.printDebug("                 "+b.getToolId());if(b.getOrigin()!=a){this._zoomBoxTool.deactivate();this._measureControls.line.deactivate();this._measureControls.area.deactivate()}}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},addMapControls:function(a){var f=this;OpenLayers.Control.ZoomBox.prototype.draw=function(){this.handler=new OpenLayers.Handler.Box(this,{done:function(h){this.zoomBox(h);f.getMapModule().notifyMoveEnd()
}},{keyMask:this.keyMask})};this._zoomBoxTool=new OpenLayers.Control.ZoomBox({alwaysZoom:true});this.getMapModule().addMapControl("zoomBoxTool",this._zoomBoxTool);this._zoomBoxTool.deactivate();this._keyboardControls=new OpenLayers.Control.PorttiKeyboard({core:this._sandbox._core,mapmodule:this.getMapModule()});this.getMapModule().addMapControl("keyboardControls",this._keyboardControls);this.getMapModule().getMapControl("keyboardControls").activate();var b={handlerOptions:{persist:true},immediate:true};var e={handlerOptions:{persist:true},immediate:true};this._measureControls={line:(new OpenLayers.Control.Measure(OpenLayers.Handler.Path,b)),area:(new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon,e))};var f=this;function d(m,n){var i=f._sandbox;var j=m.units;var h=m.order;var l=m.measure;var k=l.toFixed(3)+" "+j;i.printDebug(k+" "+(n?"FINISHED":"CONTINUES"));i.request(f,i.getRequestBuilder("ShowMapMeasurementRequest")(k))}for(var c in this._measureControls){var g=this._measureControls[c];g.events.on({measure:function(h){d(h,true)},measurepartial:function(h){d(h,false)}})}this.getMapModule().addMapControl("measureControls_line",this._measureControls.line);this._measureControls.line.deactivate();this.getMapModule().addMapControl("measureControls_area",this._measureControls.area);this._measureControls.area.deactivate();this._mouseControls=new OpenLayers.Control.PorttiMouse({sandbox:this._sandbox,mapmodule:this.getMapModule()});this.getMapModule().addMapControl("mouseControls",this._mouseControls)}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});OpenLayers.Control.PorttiKeyboard=OpenLayers.Class(OpenLayers.Control,{autoActivate:true,slideFactor:50,core:null,constructor:function(a){this.core=a.core;this.mapmodule=a.mapmodule},draw:function(){this.handler=new OpenLayers.Handler.Keyboard(this,{keydown:this.defaultKeyDown,keyup:this.defaultKeyUp})},defaultKeyDown:function(a){switch(a.keyCode){case OpenLayers.Event.KEY_LEFT:this.mapmodule.panMapByPixels(-this.slideFactor,0,false,true);break;case OpenLayers.Event.KEY_RIGHT:this.mapmodule.panMapByPixels(this.slideFactor,0,false,true);break;case OpenLayers.Event.KEY_UP:this.mapmodule.panMapByPixels(0,-this.slideFactor,false,true);break;case OpenLayers.Event.KEY_DOWN:this.mapmodule.panMapByPixels(0,this.slideFactor,false,true);break;case 17:this.core.processRequest(this.core.getRequestBuilder("CtrlKeyDownRequest")());break;case 27:this.core.dispatch(this.core.getEventBuilder("EscPressedEvent")());break;case 33:this.mapmodule.notifyStartMove();this.mapmodule.panMapNorth();break;case 34:this.mapmodule.notifyStartMove();this.mapmodule.panMapSouth();break;case 35:this.mapmodule.notifyStartMove();this.mapmodule.panMapEast();break;case 36:this.mapmodule.notifyStartMove();this.mapmodule.panMapWest();break;case 43:case 61:case 187:case 107:this.mapmodule.zoomIn();break;case 45:case 109:case 189:case 95:this.mapmodule.zoomOut();break}},defaultKeyUp:function(a){switch(a.keyCode){case 17:this.core.processRequest(this.core.getRequestBuilder("CtrlKeyUpRequest")());break;case 37:case 38:case 39:case 40:case 33:case 34:case 35:case 36:case 43:case 61:case 187:case 107:case 45:case 109:case 189:case 95:this.mapmodule.notifyMoveEnd();break}},CLASS_NAME:"OpenLayers.Control.PorttiKeyboard"});OpenLayers.Control.PorttiMouse=OpenLayers.Class(OpenLayers.Control,{performedDrag:false,wheelObserver:null,_hoverEvent:null,name:"PorttiMouse",events:new OpenLayers.Events(),constructor:function(a){this.sandbox=a.sandbox;this.mapmodule=a.mapmodule},isReallyLeftClick:function(b){var a=OpenLayers.Event.isLeftClick(b);if(a===false){return false}if(a===true){return true}if(a!=0){return false}return true},initialize:function(){OpenLayers.Control.prototype.initialize.apply(this,arguments)},destroy:function(){if(this.handler){this.handler.destroy()}this.handler=null;this.map.events.un({click:this.defaultClick,dblclick:this.defaultDblClick,mousedown:this.defaultMouseDown,mouseup:this.defaultMouseUp,mousemove:this.defaultMouseMove,mouseout:this.defaultMouseOut,scope:this});
OpenLayers.Event.stopObserving(window,"DOMMouseScroll",this.wheelObserver);OpenLayers.Event.stopObserving(window,"mousewheel",this.wheelObserver);OpenLayers.Event.stopObserving(document,"mousewheel",this.wheelObserver);this.wheelObserver=null;OpenLayers.Control.prototype.destroy.apply(this,arguments)},draw:function(){this.map.events.on({click:this.defaultClick,dblclick:this.defaultDblClick,mousedown:this.defaultMouseDown,mouseup:this.defaultMouseUp,mousemove:this.defaultMouseMove,mouseout:this.defaultMouseOut,scope:this});this.registerWheelEvents()},registerWheelEvents:function(){this.wheelObserver=OpenLayers.Function.bindAsEventListener(this.onWheelEvent,this);OpenLayers.Event.observe(window,"DOMMouseScroll",this.wheelObserver);OpenLayers.Event.observe(window,"mousewheel",this.wheelObserver);OpenLayers.Event.observe(document,"mousewheel",this.wheelObserver)},defaultClick:function(b){if(!this.isReallyLeftClick(b)){return}var a=!this.performedDrag;this.performedDrag=false;if(a){}return a},defaultDblClick:function(a){this.mapmodule.centerMapByPixels(a.xy.x,a.xy.y,true,true);this.mapmodule.zoomIn();return false},defaultMouseDown:function(a){if(!this.isReallyLeftClick(a)){return}this.mouseDragStart=a.xy.clone();this.performedDrag=false;if(a.shiftKey){this.map.div.style.cursor="crosshair";this.zoomBox=OpenLayers.Util.createDiv("zoomBox",this.mouseDragStart,null,null,"absolute","2px solid red");this.zoomBox.style.backgroundColor="white";this.zoomBox.style.filter="alpha(opacity=50)";this.zoomBox.style.opacity="0.50";this.zoomBox.style.fontSize="1px";this.zoomBox.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;this.map.eventsDiv.appendChild(this.zoomBox)}document.onselectstart=OpenLayers.Function.False},defaultMouseMove:function(c){this.mousePosition=c.xy.clone();if(this.mouseDragStart!=null){if(this.zoomBox){var b=Math.abs(this.mouseDragStart.x-c.xy.x);var a=Math.abs(this.mouseDragStart.y-c.xy.y);this.zoomBox.style.width=Math.max(1,b)+"px";this.zoomBox.style.height=Math.max(1,a)+"px";if(c.xy.x<this.mouseDragStart.x){this.zoomBox.style.left=c.xy.x+"px"}if(c.xy.y<this.mouseDragStart.y){this.zoomBox.style.top=c.xy.y+"px"}}else{if(this.performedDrag===false){this.mapmodule.notifyStartMove()}var b=this.mouseDragStart.x-c.xy.x;var a=this.mouseDragStart.y-c.xy.y;this.mapmodule.moveMapByPixels(b,a,true,true);this.mouseDragStart=c.xy.clone();this.map.div.style.cursor="move"}this.performedDrag=true}else{this.notifyHover(c)}},defaultMouseUp:function(a){if(!this.isReallyLeftClick(a)){return}if(this.zoomBox){this.zoomBoxEnd(a)}else{if(this.performedDrag){var c=this.mapmodule._navigationHistoryTool;var e=c.getState();c.previousStack.unshift(e);if(c.previousStack.length>1){c.onPreviousChange(c.previousStack[1],c.previousStack.length-1)}if(c.previousStack.length>(c.limit+1)){c.previousStack.pop()}if(c.nextStack.length>0){c.nextStack=[];c.onNextChange(null,0)}this.mapmodule.notifyMoveEnd()}else{var d=this.map.getLonLatFromViewPortPx(a.xy);var b=this.sandbox.getEventBuilder("MapClickedEvent");var a=b(d,a.xy.x,a.xy.y);this.sandbox.notifyAll(a,true)}}document.onselectstart=null;this.mouseDragStart=null;this.map.div.style.cursor=""},defaultMouseOut:function(a){if(this.mouseDragStart!=null&&OpenLayers.Util.mouseLeft(a,this.map.eventsDiv)){if(this.zoomBox){this.removeZoomBox()}this.mapmodule.notifyMoveEnd();this.mouseDragStart=null;this.map.div.style.cursor=""}},defaultWheelUp:function(a){this.mapmodule.centerMapByPixels(a.xy.x,a.xy.y,true,true);this.mapmodule.zoomIn()},defaultWheelDown:function(a){this.mapmodule.centerMapByPixels(a.xy.x,a.xy.y,true,true);this.mapmodule.zoomOut()},zoomBoxEnd:function(b){if(this.mouseDragStart!=null){if(Math.abs(this.mouseDragStart.x-b.xy.x)>5||Math.abs(this.mouseDragStart.y-b.xy.y)>5){var h=this.map.getLonLatFromViewPortPx(this.mouseDragStart);var a=this.map.getLonLatFromViewPortPx(b.xy);var g=Math.max(h.lat,a.lat);var c=Math.min(h.lat,a.lat);var f=Math.min(h.lon,a.lon);var d=Math.max(h.lon,a.lon);var e=new OpenLayers.Bounds(f,c,d,g);this.mapmodule.zoomToExtent(e,true)}else{this.mapmodule.centerMapByPixels(b.xy.x,b.xy.y,true,true);
this.mapmodule.zoomIn()}this.removeZoomBox()}},removeZoomBox:function(){this.map.eventsDiv.removeChild(this.zoomBox);this.zoomBox=null},notifyHover:function(a){if(this.mapmodule.getStealth()){return}if(!this._hoverEvent){this._hoverEvent=this.sandbox.getEventBuilder("MouseHoverEvent")()}var b=this.map.getLonLatFromViewPortPx(a.xy);this._hoverEvent.set(b.lon,b.lat);this.sandbox.notifyAll(this._hoverEvent,true)},onWheelEvent:function(c){var b=false;var a=OpenLayers.Event.element(c);while(a!=null){if(this.map&&a==this.map.div){b=true;break}if(a.className=="olPopup"){b=false;break}a=a.parentNode}if(b){var d=0;if(!c){c=window.event}if(c.wheelDelta){d=c.wheelDelta/120;if(window.opera&&window.opera.version()<9.2){d=-d}}else{if(c.detail){d=-c.detail/3}}if(d){c.xy=this.mousePosition;if(d<0){this.defaultWheelDown(c)}else{this.defaultWheelUp(c)}}OpenLayers.Event.stop(c)}},CLASS_NAME:"OpenLayers.Control.PorttiMouse"});OpenLayers.Control.PorttiZoomBar=OpenLayers.Class(OpenLayers.Control.PanZoom,{zoomStopWidth:18,zoomStopHeight:11,slider:null,sliderEvents:null,zoombarDiv:null,divEvents:null,zoomWorldIcon:false,panIcons:false,forceFixedZoomLevel:false,mouseDragStart:null,deltaY:null,zoomStart:null,constructor:function(a){this.sandbox=a.sandbox;this.mapModule=a.mapModule},destroy:function(){this._removeZoomBar();this.map.events.un({changebaselayer:this.redraw,scope:this});OpenLayers.Control.PanZoom.prototype.destroy.apply(this,arguments);delete this.mouseDragStart;delete this.zoomStart},setMap:function(a){OpenLayers.Control.PanZoom.prototype.setMap.apply(this,arguments);this.map.events.register("changebaselayer",this,this.redraw)},redraw:function(){if(this.div!=null){this.removeButtons();this._removeZoomBar()}this.draw()},draw:function(b){OpenLayers.Control.prototype.draw.apply(this,arguments);b=this.position.clone();this.buttons=[];var d=new OpenLayers.Size(18,18);if(this.panIcons){var a=new OpenLayers.Pixel(b.x+d.w/2,b.y);var c=d.w;if(this.zoomWorldIcon){a=new OpenLayers.Pixel(b.x+d.w,b.y)}this._addButton("panup","north-mini.png",a,d);b.y=a.y+d.h;this._addButton("panleft","west-mini.png",b,d);if(this.zoomWorldIcon){this._addButton("zoomworld","zoom-world-mini.png",b.add(d.w,0),d);c*=2}this._addButton("panright","east-mini.png",b.add(c,0),d);this._addButton("pandown","south-mini.png",a.add(0,d.h*2),d);this._addButton("zoomin","zoom-plus-mini.png",a.add(0,d.h*3+5),d);a=this._addZoomBar(a.add(0,d.h*4+5));this._addButton("zoomout","zoom-minus-mini.png",a,d)}else{this._addButton("zoomin","zoom-plus-mini.png",b,d);a=this._addZoomBar(b.add(0,d.h));this._addButton("zoomout","zoom-minus-mini.png",a,d);if(this.zoomWorldIcon){a=a.add(0,d.h+3);this._addButton("zoomworld","zoom-world-mini.png",a,d)}}return this.div},buttonDown:function(a){if(!OpenLayers.Event.isLeftClick(a)){return}switch(this.action){case"zoomin":Oskari.$().sandbox.findRegisteredModuleInstance("MainMapModule").zoomIn();break;case"zoomout":Oskari.$().sandbox.findRegisteredModuleInstance("MainMapModule").zoomOut();break}},_addZoomBar:function(a){var e=OpenLayers.Util.getImagesLocation();var g=this.id+"_"+this.map.id;var b=this.map.getNumZoomLevels()-1-this.map.getZoom();var c=OpenLayers.Util.createAlphaImageDiv(g,a.add(-1,b*this.zoomStopHeight),new OpenLayers.Size(20,9),e+"slider.png","absolute");c.style.cursor="move";this.slider=c;this.sliderEvents=new OpenLayers.Events(this,c,null,true,{includeXY:true});this.sliderEvents.on({touchstart:this.zoomBarDown,touchmove:this.zoomBarDrag,touchend:this.zoomBarUp,mousedown:this.zoomBarDown,mousemove:this.zoomBarDrag,mouseup:this.zoomBarUp,dblclick:this.doubleClick,click:this.doubleClick});var d=new OpenLayers.Size();d.h=this.zoomStopHeight*this.map.getNumZoomLevels();d.w=this.zoomStopWidth;var f=null;if(OpenLayers.Util.alphaHack()){var g=this.id+"_"+this.map.id;f=OpenLayers.Util.createAlphaImageDiv(g,a,new OpenLayers.Size(d.w,this.zoomStopHeight),e+"zoombar.png","absolute",null,"crop");f.style.height=d.h+"px"}else{f=OpenLayers.Util.createDiv("OpenLayers_Control_PanZoomBar_Zoombar"+this.map.id,a,d,e+"zoombar.png")}f.style.cursor="pointer";this.zoombarDiv=f;
this.divEvents=new OpenLayers.Events(this,f,null,true,{includeXY:true});this.divEvents.on({touchmove:this.passEventToSlider,mousedown:this.divClick,mousemove:this.passEventToSlider,dblclick:this.doubleClick,click:this.doubleClick});this.div.appendChild(f);this.startTop=parseInt(f.style.top);this.div.appendChild(c);this.map.events.register("zoomend",this,this.moveZoomBar);a=a.add(0,this.zoomStopHeight*this.map.getNumZoomLevels());return a},_removeZoomBar:function(){this.sliderEvents.un({touchmove:this.zoomBarDrag,mousedown:this.zoomBarDown,mousemove:this.zoomBarDrag,mouseup:this.zoomBarUp,dblclick:this.doubleClick,click:this.doubleClick});this.sliderEvents.destroy();this.divEvents.un({touchmove:this.passEventToSlider,mousedown:this.divClick,mousemove:this.passEventToSlider,dblclick:this.doubleClick,click:this.doubleClick});this.divEvents.destroy();this.div.removeChild(this.zoombarDiv);this.zoombarDiv=null;this.div.removeChild(this.slider);this.slider=null;this.map.events.unregister("zoomend",this,this.moveZoomBar)},passEventToSlider:function(a){this.sliderEvents.handleBrowserEvent(a)},divClick:function(a){if(!OpenLayers.Event.isLeftClick(a)){return}var c=a.xy.y/this.zoomStopHeight;if(this.forceFixedZoomLevel||!this.map.fractionalZoom){c=Math.floor(c)}var b=(this.map.getNumZoomLevels()-1)-c;b=Math.min(Math.max(b,0),this.map.getNumZoomLevels()-1);this.mapModule.zoomTo(b);OpenLayers.Event.stop(a)},zoomBarDown:function(a){if(!OpenLayers.Event.isLeftClick(a)&&!OpenLayers.Event.isSingleTouch(a)){return}this.map.events.on({touchmove:this.passEventToSlider,mousemove:this.passEventToSlider,mouseup:this.passEventToSlider,scope:this});this.mouseDragStart=a.xy.clone();this.zoomStart=a.xy.clone();this.div.style.cursor="move";this.zoombarDiv.offsets=null;OpenLayers.Event.stop(a)},zoomBarDrag:function(b){if(this.mouseDragStart!=null){var a=this.mouseDragStart.y-b.xy.y;var d=OpenLayers.Util.pagePosition(this.zoombarDiv);if((b.clientY-d[1])>0&&(b.clientY-d[1])<parseInt(this.zoombarDiv.style.height)-2){var c=parseInt(this.slider.style.top)-a;this.slider.style.top=c+"px";this.mouseDragStart=b.xy.clone()}this.deltaY=this.zoomStart.y-b.xy.y;OpenLayers.Event.stop(b)}},zoomBarUp:function(a){if(!OpenLayers.Event.isLeftClick(a)&&a.type!=="touchend"){return}if(this.mouseDragStart){this.div.style.cursor="";this.map.events.un({touchmove:this.passEventToSlider,mouseup:this.passEventToSlider,mousemove:this.passEventToSlider,scope:this});var b=this.map.zoom;if(!this.forceFixedZoomLevel&&this.map.fractionalZoom){b+=this.deltaY/this.zoomStopHeight;b=Math.min(Math.max(b,0),this.map.getNumZoomLevels()-1)}else{b+=this.deltaY/this.zoomStopHeight;b=Math.max(Math.round(b),0)}this.mapModule.zoomTo(b);this.mouseDragStart=null;this.zoomStart=null;this.deltaY=0;OpenLayers.Event.stop(a)}},moveZoomBar:function(){var a=((this.map.getNumZoomLevels()-1)-this.map.getZoom())*this.zoomStopHeight+this.startTop+1;this.slider.style.top=a+"px"},CLASS_NAME:"OpenLayers.Control.PorttiZoomBar"});OpenLayers.Control.PorttiDragPan=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,panned:false,interval:1,documentDrag:false,kinetic:null,enableKinetic:false,kineticInterval:10,draw:function(){if(this.enableKinetic){var a={interval:this.kineticInterval};if(typeof this.enableKinetic==="object"){a=OpenLayers.Util.extend(a,this.enableKinetic)}this.kinetic=new OpenLayers.Kinetic(a)}this.handler=new OpenLayers.Handler.PorttiDrag(this,{move:this.panMap,done:this.panMapDone,down:this.panMapStart},{interval:this.interval,documentDrag:this.documentDrag})},panMapStart:function(){if(this.kinetic){this.kinetic.begin()}},panMap:function(a){if(this.kinetic){this.kinetic.update(a)}this.panned=true;this.map.pan(this.handler.last.x-a.x,this.handler.last.y-a.y,{dragging:true,animate:false})},panMapDone:function(c){if(this.panned){var b=null;if(this.kinetic){b=this.kinetic.end(c)}this.map.pan(this.handler.last.x-c.x,this.handler.last.y-c.y,{dragging:!!b,animate:false});if(b){var a=this;this.kinetic.move(b,function(d,f,e){a.map.pan(d,f,{dragging:!e,animate:false})})}this.panned=false}},CLASS_NAME:"OpenLayers.Control.PorttiDragPan"});
OpenLayers.Handler.PorttiDrag=OpenLayers.Class(OpenLayers.Handler,{started:false,stopDown:true,dragging:false,touch:false,last:null,start:null,lastMoveEvt:null,oldOnselectstart:null,interval:0,timeoutId:null,documentDrag:false,documentEvents:null,initialize:function(d,c,a){OpenLayers.Handler.prototype.initialize.apply(this,arguments);if(this.documentDrag===true){var b=this;this._docMove=function(e){b.mousemove({xy:{x:e.clientX,y:e.clientY},element:document})};this._docUp=function(e){b.mouseup({xy:{x:e.clientX,y:e.clientY}})}}},dragstart:function(b){var a=true;this.dragging=false;if(this.checkModifiers(b)&&(OpenLayers.Event.isLeftClick(b)||OpenLayers.Event.isSingleTouch(b))){this.started=true;this.start=b.xy;this.last=b.xy;OpenLayers.Element.addClass(this.map.viewPortDiv,"olDragDown");this.down(b);this.callback("down",[b.xy]);if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart?document.onselectstart:OpenLayers.Function.True}document.onselectstart=OpenLayers.Function.False;a=!this.stopDown}else{this.started=false;this.start=null;this.last=null}return a},dragmove:function(a){this.lastMoveEvt=a;if(this.started&&!this.timeoutId&&(a.xy.x!=this.last.x||a.xy.y!=this.last.y)){if(this.documentDrag===true&&this.documentEvents){if(a.element===document){this.adjustXY(a);this.setEvent(a)}else{this.removeDocumentEvents()}}if(this.interval>0){this.timeoutId=setTimeout(OpenLayers.Function.bind(this.removeTimeout,this),this.interval)}this.dragging=true;this.move(a);this.callback("move",[a.xy]);if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart;document.onselectstart=OpenLayers.Function.False}this.last=a.xy}return true},dragend:function(b){if(this.started){if(this.documentDrag===true&&this.documentEvents){this.adjustXY(b);this.removeDocumentEvents()}var a=(this.start!=this.last);this.started=false;this.dragging=false;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown");this.up(b);this.callback("up",[b.xy]);if(a){this.callback("done",[b.xy])}document.onselectstart=this.oldOnselectstart}return true},down:function(a){},move:function(a){},up:function(a){},out:function(a){},mousedown:function(a){return this.dragstart(a)},touchstart:function(a){if(!this.touch){this.touch=true;this.map.events.un({mousedown:this.mousedown,mouseup:this.mouseup,mousemove:this.mousemove,click:this.click,scope:this})}return this.dragstart(a)},mousemove:function(a){return this.dragmove(a)},touchmove:function(a){return this.dragmove(a)},removeTimeout:function(){this.timeoutId=null;if(this.dragging){this.mousemove(this.lastMoveEvt)}},mouseup:function(a){return this.dragend(a)},touchend:function(a){a.xy=this.last;return this.dragend(a)},mouseout:function(b){if(this.started&&OpenLayers.Util.mouseLeft(b,this.map.eventsDiv)){if(this.documentDrag===true){this.addDocumentEvents()}else{var a=(this.start!=this.last);this.started=false;this.dragging=false;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown");this.out(b);this.callback("out",[]);if(a){this.callback("done",[b.xy])}if(document.onselectstart){document.onselectstart=this.oldOnselectstart}}}return true},click:function(a){return(this.start==this.last)},activate:function(){var a=false;if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.dragging=false;a=true}return a},deactivate:function(){var a=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.touch=false;this.started=false;this.dragging=false;this.start=null;this.last=null;a=true;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown")}return a},adjustXY:function(a){var b=OpenLayers.Util.pagePosition(this.map.viewPortDiv);a.xy.x-=b[0];a.xy.y-=b[1]},addDocumentEvents:function(){OpenLayers.Element.addClass(document.body,"olDragDown");this.documentEvents=true;OpenLayers.Event.observe(document,"mousemove",this._docMove);OpenLayers.Event.observe(document,"mouseup",this._docUp)},removeDocumentEvents:function(){OpenLayers.Element.removeClass(document.body,"olDragDown");this.documentEvents=false;OpenLayers.Event.stopObserving(document,"mousemove",this._docMove);OpenLayers.Event.stopObserving(document,"mouseup",this._docUp)
},CLASS_NAME:"OpenLayers.Handler.PorttiDrag"});Oskari.$("OpenLayers.Control.GetInfoAdapter",OpenLayers.Class(OpenLayers.Control,{hover:false,drillDown:false,maxFeatures:10,clickCallback:"click",handlerOptions:null,handler:null,EVENT_TYPES:["beforegetfeatureinfo","nogetfeatureinfo","getfeatureinfo"],initialize:function(a){this.EVENT_TYPES=OpenLayers.Control.prototype.EVENT_TYPES;a=a||{};this.callback=a.callback;this.hoverCallback=a.hoverCallback;a.handlerOptions=a.handlerOptions||{};OpenLayers.Control.prototype.initialize.apply(this,[a]);if(this.drillDown===true){this.hover=false}if(this.hover){this.handler=new OpenLayers.Handler.Hover(this,{move:this.cancelHover,pause:this.getInfoForHover},OpenLayers.Util.extend(this.handlerOptions.hover||{},{delay:250}))}else{var b={};b[this.clickCallback]=this.getInfoForClick;this.handler=new OpenLayers.Handler.Click(this,b,this.handlerOptions.click||{})}},activate:function(){if(!this.active){this.handler.activate()}return OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},getInfoForClick:function(a){this.events.triggerEvent("beforegetfeatureinfo",{xy:a.xy});OpenLayers.Element.addClass(this.map.viewPortDiv,"olCursorWait");this.request(a.xy,{})},getInfoForHover:function(a){this.events.triggerEvent("beforegetfeatureinfo",{xy:a.xy});this.request(a.xy,{hover:true})},cancelHover:function(){},request:function(b,a){OpenLayers.Element.removeClass(this.map.viewPortDiv,"olCursorWait");var c=this.map.getLonLatFromViewPortPx(b);if(a.hover&&this.hoverCallback){this.hoverCallback(c,b,a)}else{if(this.callback){this.callback(c,b,a)}}},CLASS_NAME:"OpenLayers.Control.GetInfoAdapter"}));Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.getinfo.GetFeatureInfoHandler",function(a,b){this.getInfoPlugin=b;this.sandbox=a},{__name:"GetFeatureInfoHandler",getName:function(){return this.__name},init:function(a){},_getWmsReqParams:function(d,b){var e=this.sandbox.getMap();var c=d.getMapWidth();if(!c){c=e.getWidth()}var a=d.getMapHeight();if(!a){a=e.getHeight()}return;"REQUEST=GetFeatureInfo&EXCEPTIONS=application/vnd.ogc.se_xml&SRS="+this._getSRS(d)+"&VERSION=1.1.1&BBOX="+this._getBBString(d)+"&X="+d.getX()+"&Y="+d.getY()+"&INFO_FORMAT="+b.getQueryFormat()+"&QUERY_LAYERS="+b.getWmsName()+"&WIDTH="+c+"&HEIGHT="+a+"&FEATURE_COUNT=1&FORMAT=image/png&SERVICE=WMS&STYLES="+b.getCurrentStyle().getName()+"&LAYERS="+b.getWmsName()},_getWmtsReqParams:function(d,c){var b=this.getInfoPlugin._map.getLayersByName("layer_"+c.getId());var e=new OpenLayers.LonLat(d.getLon(),d.getLat());var a=b[0].getTileInfo(e);var f=b[0].url+"?service=WMTS&request=GetFeatureInfo&version="+b[0].version+"&layer="+b[0].layer+"&style="+b[0].style+"&format=text/xml&TileMatrixSet="+b[0].matrixSet+"&TileMatrix="+b[0].getMatrix().identifier+"&TileCol="+a.col+"&TileRow="+a.row+"&I="+a.i+"&J="+a.j+"&InfoFormat=text/xml";return f},_getBBString:function(b){var a=b.getBoundingBox();if(!a){a=this.getInfoPlugin.getMapModule().getMap().getExtent()}return a.left+","+a.bottom+","+a.right+","+a.top},_getSRS:function(b){var a=b.getSRS();if(!a){a="EPSG:3067"}return a},_notifyNotSupported:function(a,c){var g="rightpanel_wms_getfeatureinfo_not_supported_txt";var f=this.sandbox.getText(g)+": "+a+".";var b=this.sandbox.getEventBuilder("AfterAppendFeatureInfoEvent");var d=b(a,f);this.sandbox.copyObjectCreatorToFrom(d,c);this.sandbox.notifyAll(d)},handleRequest:function(r,b){var n=b.getMapLayers();var c=n.length;var j=(c>0)&&n[0].isLayerOfType("WFS");var a=!j&&(c>0);var m=this.sandbox.getEventBuilder("AfterGetFeatureInfoEvent");var s=m(a,j);this.sandbox.copyObjectCreatorToFrom(s,b);this.sandbox.notifyAll(s,true);if(!a){return}var u=this;var d=function(e,i){this.name=e;this.format=i;this.success=function(x){var A="";if(this.format==="application/vnd.ogc.gml"||this.format==="application/gnd_ogc.se_xml"||this.format==="application/vnd.ogc.wms_xml"||this.format==="text/xml"){A=x.responseText.replace(/</g,"&lt;").replace(/>/g,"&gt;")}else{if(x.responseText===""){A=u.sandbox.getText("mapcontrolsservice_not_found_wms_feature_info")
}else{A=x.responseText}}var y=u.sandbox.getEventBuilder("AfterAppendFeatureInfoEvent");var z=y(e,A);u.sandbox.copyObjectCreatorToFrom(z,b);u.sandbox.notifyAll(z,true)};this.failure=function(x){var y=u.sandbox.getEventBuilder("AfterAppendFeatureInfoEvent");var z=y(e,x.responseText);u.sandbox.copyObjectCreatorToFrom(z,b);u.sandbox.notifyAll(z,true)}};var t=this.sandbox.getMap();for(var o=0;o<c;o++){this.sandbox._core.actionInProgressGetFeatureInfo();var v=b.getMapLayers()[o];var w=v.getName();var q=v.getQueryFormat();var h=((q!==null)&&(q!==""));if(!v.getQueryable()||v.isLayerOfType("WFS")||!h){this._notifyNotSupported(w,b);continue}var f="";if(f.indexOf("?")<0){f=f+"?"}if(v.isLayerOfType("WMTS")){f=this._getWmtsReqParams(b,v)}else{if(v.isLayerOfType("WMS")){var l=b.getMapWidth();if(!l){l=t.getWidth()}var k=b.getMapHeight();if(!k){k=t.getHeight()}f=startup.globalMapAjaxUrl+"&action_route=GetFeatureInfoWMS&REQUEST=GetFeatureInfo&layerId="+v.getId()+"&EXCEPTIONS=application/vnd.ogc.se_xml&SRS="+this._getSRS(b)+"&VERSION=1.1.1&BBOX="+t.getExtent()+"&X="+b.getX()+"&Y="+b.getY()+"&INFO_FORMAT="+v.getQueryFormat()+"&QUERY_LAYERS="+v.getWmsName()+"&WIDTH="+l+"&HEIGHT="+k+"&FEATURE_COUNT=1&FORMAT=image/png&SERVICE=WMS&STYLES="+v.getCurrentStyle().getName()+"&LAYERS="+v.getWmsName()}}var g=new d(w,q);this.sandbox.ajax(f,function(e){g.success(e)},function(e){g.failure(e)})}}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.GetInfoPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"GetInfoPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){},unregister:function(){},init:function(a){a.printDebug("[GetInfoPlugin] init");var c=this;var b="Oskari.mapframework.mapmodule-plugin.getinfo.GetFeatureInfoHandler";this.requestHandlers={getFeatureInfoHandler:Oskari.clazz.create(b,a,c)};this._sandbox.addRequestHandler("GetFeatureInfoRequest",this.requestHandlers.getFeatureInfoHandler)},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();var b=this;this._getinfoTool=new (Oskari.$("OpenLayers.Control.GetInfoAdapter"))({callback:function(e,d,c){b.handleGetInfo(e,d,c)},hoverCallback:function(e,d,c){b.handleGetInfoHover(e,d,c)}});this.getMapModule().addMapControl("getinfo",this._getinfoTool);a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{ToolSelectedEvent:function(a){if(a.getToolName=="map_control_select_tool"){this._getinfoTool.activate()}else{this._getinfoTool.deactivate()}},AfterDeactivateAllOpenlayersMapControlsButNotMeasureToolsEvent:function(a){this.afterDeactivateAllOpenlayersMapControlsButNotMeasureToolsEvent()},AfterDeactivateAllOpenlayersMapControlsEvent:function(a){this.afterDeactivateAllOpenlayersMapControlsEvent(a)},MapClickedEvent:function(a){var d=a.getLonLat();var c=a.getMouseX();var b=a.getMouseY();if(this._activated){this.buildWMSQueryOrWFSFeatureInfoRequest(d,c,b)}},AfterHighlightMapLayerEvent:function(a){this._handleHighlightLayer(a)},AfterDimMapLayerEvent:function(a){this._handleDimLayer()}},_handleHighlightLayer:function(a){this._activated=true},_handleDimLayer:function(){this._activated=false},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},handleGetInfo:function(c,b,a){this._sandbox.printDebug("GETINFO "+c.lat+","+c.lon);this.buildWMSQueryOrWFSFeatureInfoRequest(c,b.x,b.y)},handleGetInfoHover:function(c,b,a){this._sandbox.printDebug("GETINFO HOVER "+c.lat+","+c.lon)},arrayToCSV:function(c){var b="";for(var a=0;a<c.length;a++){b+=c[a];if(a<c.length-1){b+=","}}return b},buildWMSQueryOrWFSFeatureInfoRequest:function(g,c,b){var k=this._sandbox;var e=k.findAllHighlightedLayers();this._projectionCode="EPSG:3067";
if(e[0]&&e[0]!=null&&(e[0].isLayerOfType("WMS")||e[0].isLayerOfType("WMTS"))){var f=k.getMap().getWidth();var j=k.getMap().getHeight();var l=k.getMap().getBbox();var a=k.findAllHighlightedLayers();k.request(this,k.getRequestBuilder("GetFeatureInfoRequest")(a,g.lon,g.lat,c,b,f,j,l,this._projectionCode))}else{if(e[0]&&e[0]!=null&&e[0].isLayerOfType("VECTOR")){this.getMapModule().notifyAll(k.getEventBuilder("FeaturesGetInfoEvent")(e[0],null,g.lon,g.lat,this._map.getProjection,"GetFeatureInfo"))}else{if(e[0]&&e[0]!=null&&e[0].isLayerOfType("WFS")){var i=e[0];if(i!=null&&i.getId()!=null){this._selectedCoordinatesLon=[];this._selectedCoordinatesLat=[];this._selectedCoordinatesLon.push(g.lon);this._selectedCoordinatesLat.push(g.lat);var h=this._map.getExtent();var d="&flow_pm_wfsLayerId="+i.getId()+"&flow_pm_point_x="+this.arrayToCSV(this._selectedCoordinatesLon)+"&flow_pm_point_y="+this.arrayToCSV(this._selectedCoordinatesLat)+"&flow_pm_bbox_min_x="+h.left+"&flow_pm_bbox_min_y="+h.bottom+"&flow_pm_bbox_max_x="+h.right+"&flow_pm_bbox_max_y="+h.top+"&flow_pm_zoom_level="+this._map.getZoom();k.request(this,k.getRequestBuilder("HighlightWFSFeatureRequestByGeoPoint")(d))}}}}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.MarkersPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null},{__name:"MarkersPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},init:function(a){},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();this.createMapMarkersLayer();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterHideMapMarkerEvent:function(a){this.afterHideMapMarkerEvent(a)}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},createMapMarkersLayer:function(){var b=this._sandbox;var a=new OpenLayers.Layer.Markers("Markers");this._map.addLayer(a)},afterHideMapMarkerEvent:function(b){var a=this._map.getLayersByName("Markers");if(a!=null&&a[0]!=null){a[0].setVisibility(false)}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.mapmodule.plugin.LayersPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._supportedFormats={};this._visibilityPollingInterval=1500;this._visibilityCheckOrder=0;this._previousTimer=null},{__name:"LayersPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},getMap:function(){return this._map},register:function(){},unregister:function(){},init:function(a){this.requestHandlers={layerVisibilityHandler:Oskari.clazz.create("Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequestHandler",a,this),layerContentHandler:Oskari.clazz.create("Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequestHandler",a,this)}},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}a.addRequestHandler("MapModulePlugin.MapLayerVisibilityRequest",this.requestHandlers.layerVisibilityHandler);a.addRequestHandler("MapModulePlugin.MapMoveByLayerContentRequest",this.requestHandlers.layerContentHandler)},stopPlugin:function(a){a.removeRequestHandler("MapModulePlugin.MapLayerVisibilityRequest",this.requestHandlers.layerVisibilityHandler);a.removeRequestHandler("MapModulePlugin.MapMoveByLayerContentRequest",this.requestHandlers.layerContentHandler);for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)
}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterRearrangeSelectedMapLayerEvent:function(a){this._afterRearrangeSelectedMapLayerEvent(a)},MapMoveStartEvent:function(){this._visibilityCheckOrder++;if(this._previousTimer){clearTimeout(this._previousTimer);this._previousTimer=null}},AfterMapMoveEvent:function(){var a=this;if(this._previousTimer){clearTimeout(this._previousTimer);this._previousTimer=null}this._visibilityCheckOrder++;this._previousTimer=setTimeout(function(){a._checkLayersVisibility(a._visibilityCheckOrder)},this._visibilityPollingInterval)},AfterMapLayerAddEvent:function(a){this._parseGeometryForLayer(a.getMapLayer())}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},preselectLayers:function(a){},_parseGeometryForLayer:function(c){if(c.getGeometry().length==0){var a=c.getGeometryWKT();if(!a){return}var f=new OpenLayers.Format.WKT();var e=f.read(a);if(e){if(e.constructor!=Array){e=[e]}var d=[];for(var b=0;b<e.length;++b){d.push(e[b].geometry)}c.setGeometry(d)}else{}}},_checkLayersVisibility:function(a){if(a!=this._visibilityCheckOrder){return}var d=this._sandbox.findAllSelectedMapLayers();for(var c=0;c<d.length;++c){var b=d[c];if(!b.isVisible()){continue}this.notifyLayerVisibilityChanged(b)}this._visibilityCheckScheduled=false},_isInScale:function(a){var b=this._sandbox.getMap().getScale();return a.isInScale(b)},isInGeometry:function(b){var c=b.getGeometry();var d=null;for(var a=0;a<c.length;++a){if(!d){d=c[a].getBounds()}else{d.extend(c[a].getBounds())}}if(d){return this.getMap().getExtent().intersectsBounds(d)}return true},notifyLayerVisibilityChanged:function(b){var f=b.isVisible();var d=b.isVisible();if(b.isVisible()){f=this._isInScale(b);d=this.isInGeometry(b)}var e=this.getMap();if(f&&d&&b.isVisible()){var a=e.getLayersByName("layer_"+b.getId());if(a&&a.setVisibility){a.setVisibility(true);a.display(true)}}else{var a=e.getLayersByName("layer_"+b.getId());if(a&&a.setVisibility){a.setVisibility(false);a.display(false)}}var c=this._sandbox.getEventBuilder("MapLayerVisibilityChangedEvent")(b,f,d);this._sandbox.notifyAll(c)},_afterRearrangeSelectedMapLayerEvent:function(b){var g=this._sandbox.findAllSelectedMapLayers();var j=0;var a=this._map.layers.length;var e=this._map.getLayersByName("Markers");if(e.length>0){this._map.setLayerIndex(e[0],a);a--}for(var h=0;h<g.length;h++){if(g[h].isBaseLayer()){for(var d=0;d<g[h].getSubLayers().length;d++){var e=this._map.getLayersByName("basemap_"+g[h].getSubLayers()[d].getId());this._map.setLayerIndex(e[0],j);j++}}else{if(g[h].isLayerOfType("WFS")){var l=new RegExp("wfs_layer_"+g[h].getId()+"_WFS_LAYER_IMAGE*","i");var c=this._map.getLayersByName(l);for(var f=0;f<c.length;f++){this._map.setLayerIndex(c[f],j);j++}var l=new RegExp("wfs_layer_"+g[h].getId()+"_HIGHLIGHTED_FEATURE*","i");var e=this._map.getLayersByName(l);if(e.length>0){this._map.setLayerIndex(e[0],j);j++}}else{var e=this._map.getLayersByName("layer_"+g[h].getId());this._map.setLayerIndex(e[0],j);j++}}}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.WmsLayerPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._supportedFormats={}},{__name:"WmsLayerPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this.pluginName=a.getName()+this.__name},register:function(){this.getMapModule().setLayerPlugin("wmslayer",this)},unregister:function(){this.getMapModule().setLayerPlugin("wmslayer",null)},init:function(a){},startPlugin:function(a){this._sandbox=a;this._map=this.getMapModule().getMap();a.register(this);for(p in this.eventHandlers){a.registerForEventByName(this,p)}},stopPlugin:function(a){for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){},eventHandlers:{AfterMapLayerAddEvent:function(a){this.afterMapLayerAddEvent(a)
},AfterMapLayerRemoveEvent:function(a){this.afterMapLayerRemoveEvent(a)},AfterChangeMapLayerOpacityEvent:function(a){this.afterChangeMapLayerOpacityEvent(a)},AfterChangeMapLayerStyleEvent:function(a){this.afterChangeMapLayerStyleEvent(a)}},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},preselectLayers:function(e){var b=this._sandbox;for(var d=0;d<e.length;d++){var c=e[d];var a=c.getId();if(!c.isLayerOfType("WMS")){continue}b.printDebug("preselecting "+a);this.addMapLayerToMap(c,true,c.isBaseLayer())}},afterMapLayerAddEvent:function(a){this.addMapLayerToMap(a.getMapLayer(),a.getKeepLayersOrder(),a.isBasemap())},addMapLayerToMap:function(h,f,a){if(!h.isLayerOfType("WMS")){return}this._sandbox.printDebug(" [SnappyWMSLayer]  Creating "+h.getId()+" KEEP ON TOP ? "+f+" BASE? "+a);var l=this._map.getLayersByName("Markers");if(l){for(var c=0;c<l.length;c++){if(l[c]){this._map.removeLayer(l[c],false)}}}if(h.isGroupLayer()||h.isBaseLayer()||a==true){if(h.getSubLayers().length>0){for(var e=0;e<h.getSubLayers().length;e++){var b="";for(var d=0;d<h.getSubLayers()[e].getWmsUrls().length;d++){b+=h.getSubLayers()[e].getWmsUrls()[d]}var k=this.getMapModule().calculateLayerScales(h.getSubLayers()[e].getMaxScale(),h.getSubLayers()[e].getMinScale());var g=Oskari.$("SnappyWMSLayer");var m=new g("basemap_"+h.getSubLayers()[e].getId(),h.getSubLayers()[e].getWmsUrls(),{layers:h.getSubLayers()[e].getWmsName(),transparent:true,id:h.getSubLayers()[e].getId(),styles:h.getSubLayers()[e].getCurrentStyle().getName(),format:"image/png"},{layerId:h.getSubLayers()[e].getWmsName(),scales:k,isBaseLayer:false,displayInLayerSwitcher:true,visibility:true,buffer:0});m.opacity=h.getOpacity()/100;this.attachLoadingStatusToLayer(m,true,h);this._map.addLayer(m);this._sandbox.printDebug(" [SnappyWMSLayer]  Created SnappyGrid for WMS WITH SUBLAYERS for "+h.getId());if(!f){this._map.setLayerIndex(m,0)}}}else{var k=this.getMapModule().calculateLayerScales(h.getMaxScale(),h.getMinScale());var g=Oskari.$("SnappyWMSLayer");var m=new g("layer_"+h.getId(),h.getWmsUrls(),{layers:h.getWmsName(),transparent:true,id:h.getId(),styles:h.getCurrentStyle().getName(),format:"image/png"},{layerId:h.getWmsName(),scales:k,isBaseLayer:false,displayInLayerSwitcher:true,visibility:true,buffer:0});m.opacity=h.getOpacity()/100;this.attachLoadingStatusToLayer(m,true,h);this._map.addLayer(m);this._sandbox.printDebug(" [SnappyWMSLayer]  Created SnappyGrid for WMS WITH SUBLAYERS for "+h.getId());if(f){this._map.setLayerIndex(m,this._map.layers.length)}else{this._map.setLayerIndex(m,0)}}}else{var k=this.getMapModule().calculateLayerScales(h.getMaxScale(),h.getMinScale());var g=Oskari.$("SnappyWMSLayer");var m=new g("layer_"+h.getId(),h.getWmsUrls(),{layers:h.getWmsName(),transparent:true,id:h.getId(),styles:h.getCurrentStyle().getName(),format:"image/png"},{layerId:h.getWmsName(),scales:k,isBaseLayer:false,displayInLayerSwitcher:true,visibility:true,buffer:0});this.attachLoadingStatusToLayer(m,true,h);m.opacity=h.getOpacity()/100;this._map.addLayer(m);this._sandbox.printDebug("#!#! CREATED OPENLAYER.LAYER.WMS for "+h.getId());if(f){this._map.setLayerIndex(m,this._map.layers.length)}else{this._map.setLayerIndex(m,0)}}if(l){for(var c=0;c<l.length;c++){if(l[c]){this._map.addLayer(l[c])}}}},afterMapLayerRemoveEvent:function(b){var a=b.getMapLayer();this.removeMapLayerFromMap(a)},removeMapLayerFromMap:function(d){if(!d.isLayerOfType("WMS")){return}if(d.isBaseLayer()){var b="";if(d.getSubLayers().length>0){for(var c=0;c<d.getSubLayers().length;c++){var a=this._map.getLayersByName("basemap_"+d.getSubLayers()[c].getId());a[0].destroy()}}else{var a=this._map.getLayersByName("layer_"+d.getId());a[0].destroy()}}else{var a=this._map.getLayersByName("layer_"+d.getId());a[0].destroy()}},getOLMapLayers:function(c){if(!c.isLayerOfType("WMS")){return null}if(c.isBaseLayer()){var a="";if(c.getSubLayers().length>0){for(var b=0;b<c.getSubLayers().length;b++){return this._map.getLayersByName("basemap_"+c.getSubLayers()[b].getId())}}else{return this._map.getLayersByName("layer_"+c.getId())
}}else{return this._map.getLayersByName("layer_"+c.getId())}return null},afterChangeMapLayerOpacityEvent:function(c){var b=c.getMapLayer();if(!b.isLayerOfType("WMS")){return}if(b.isBaseLayer()||b.isGroupLayer()){if(b.getSubLayers().length>0){for(var d=0;d<b.getSubLayers().length;d++){var a=this._map.getLayersByName("basemap_"+b.getSubLayers()[d].getId());a[0].setOpacity(b.getOpacity()/100)}}else{var a=this._map.getLayersByName("layer_"+b.getId());if(a[0]!=null){a[0].setOpacity(b.getOpacity()/100)}}}else{this._sandbox.printDebug("Setting Layer Opacity for "+b.getId()+" to "+b.getOpacity());var a=this._map.getLayersByName("layer_"+b.getId());if(a[0]!=null){a[0].setOpacity(b.getOpacity()/100)}}},afterChangeMapLayerStyleEvent:function(c){var b=c.getMapLayer();if(!b.isBaseLayer()){var a=this._map.getLayersByName("layer_"+b.getId());if(a!=null){a[0].mergeNewParams({styles:b.getCurrentStyle().getName()})}}},attachLoadingStatusToLayer:function(b,e,c){var a=this._sandbox;var d=this;var f=this.getMapModule().getLocalization("status_update_map")+" '"+c.getName()+"'...";b.events.register("loadstart",b,function(){a.request(d,a.getRequestBuilder("ActionStartRequest")(b.id,f,true))});b.events.register("loadend",b,function(){a.request(d,a.getRequestBuilder("ActionReadyRequest")(b.id,true))});b.events.register("loadcancel",b,function(){a.request(d,a.getRequestBuilder("ActionReadyRequest")(b.id,true))})}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.$("SnappyGrid",OpenLayers.Class(OpenLayers.Layer.HTTPRequest,{tileSize:null,grid:null,singleTile:false,ratio:1.5,buffer:2,numLoadingTiles:0,initialize:function(c,b,d,a){OpenLayers.Layer.HTTPRequest.prototype.initialize.apply(this,arguments);this.events.addEventType("tileloaded");this.grid=[]},destroy:function(){this.clearGrid();this.grid=null;this.tileSize=null;OpenLayers.Layer.HTTPRequest.prototype.destroy.apply(this,arguments)},clearGrid:function(){if(this.grid){for(var f=0,b=this.grid.length;f<b;f++){var e=this.grid[f];for(var c=0,a=e.length;c<a;c++){var d=e[c];this.removeTileMonitoringHooks(d);d.destroy()}}this.grid=[]}},clone:function(a){if(a==null){a=new OpenLayers.Layer.Grid(this.name,this.url,this.params,this.getOptions())}a=OpenLayers.Layer.HTTPRequest.prototype.clone.apply(this,[a]);if(this.tileSize!=null){a.tileSize=this.tileSize.clone()}a.grid=[];return a},moveTo:function(d,a,e){OpenLayers.Layer.HTTPRequest.prototype.moveTo.apply(this,arguments);d=d||this.map.getExtent();if(d!=null){var c=!this.grid.length||a;var b=this.getTilesBounds();if(this.singleTile){if(c||(!e&&!b.containsBounds(d))){this.initSingleTile(d)}}else{if(c||!b.containsBounds(d,true)){this.initGriddedTiles(d)}else{this.moveGriddedTiles(d)}}}},setTileSize:function(a){if(this.singleTile){a=this.map.getSize();a.h=parseInt(a.h*this.ratio);a.w=parseInt(a.w*this.ratio)}OpenLayers.Layer.HTTPRequest.prototype.setTileSize.apply(this,[a])},getGridBounds:function(){var a="The getGridBounds() function is deprecated. It will be removed in 3.0. Please use getTilesBounds() instead.";OpenLayers.Console.warn(a);return this.getTilesBounds()},getTilesBounds:function(){var e=null;if(this.grid.length){var a=this.grid.length-1;var d=this.grid[a][0];var b=this.grid[0].length-1;var c=this.grid[0][b];e=new OpenLayers.Bounds(d.bounds.left,d.bounds.bottom,c.bounds.right,c.bounds.top)}return e},initSingleTile:function(f){var a=f.getCenterLonLat();var h=f.getWidth()*this.ratio;var b=f.getHeight()*this.ratio;var g=new OpenLayers.Bounds(a.lon-(h/2),a.lat-(b/2),a.lon+(h/2),a.lat+(b/2));var d=new OpenLayers.LonLat(g.left,g.top);var c=this.map.getLayerPxFromLonLat(d);if(!this.grid.length){this.grid[0]=[]}var e=this.grid[0][0];if(!e){e=this.addTile(g,c);this.addTileMonitoringHooks(e);e.draw();this.grid[0][0]=e}else{e.moveTo(g,c)}this.removeExcessTiles(1,1)},calculateGridLayout:function(a,o,e){var k=e*this.tileSize.w;var c=e*this.tileSize.h;var i=a.left-o.left;var l=Math.floor(i/k)-this.buffer;var j=i/k-l;var f=-j*this.tileSize.w;var m=o.left+l*k;var b=a.top-(o.bottom+c);var h=Math.ceil(b/c)+this.buffer;
var n=h-b/c;var d=-n*this.tileSize.h;var g=o.bottom+h*c;return{tilelon:k,tilelat:c,tileoffsetlon:m,tileoffsetlat:g,tileoffsetx:f,tileoffsety:d}},initGriddedTiles:function(i){var g=this.map.getSize();var w=Math.ceil(g.h/this.tileSize.h)+Math.max(1,2*this.buffer);var A=Math.ceil(g.w/this.tileSize.w)+Math.max(1,2*this.buffer);var o=this.getMaxExtent();var s=this.map.getResolution();var r=this.calculateGridLayout(i,o,s);var f=Math.round(r.tileoffsetx);var c=Math.round(r.tileoffsety);var k=r.tileoffsetlon;var n=r.tileoffsetlat;var e=r.tilelon;var j=r.tilelat;this.origin=new OpenLayers.Pixel(f,c);var v=f;var z=k;var u=0;var a=parseInt(this.map.layerContainerDiv.style.left);var t=parseInt(this.map.layerContainerDiv.style.top);do{var h=this.grid[u++];if(!h){h=[];this.grid.push(h)}k=z;f=v;var d=0;do{var b=new OpenLayers.Bounds(k,n,k+e,n+j);var m=f;m-=a;var l=c;l-=t;var q=new OpenLayers.Pixel(m,l);var B=h[d++];if(!B){B=this.addTile(b,q);this.addTileMonitoringHooks(B);h.push(B)}else{B.moveTo(b,q,false)}k+=e;f+=this.tileSize.w}while((k<=i.right+e*this.buffer)||d<A);n-=j;c+=this.tileSize.h}while((n>=i.bottom-j*this.buffer)||u<w);this.removeExcessTiles(u,d);this.spiralTileLoad()},getMaxExtent:function(){return this.maxExtent},spiralTileLoad:function(){var b=[];var h=["right","down","left","up"];var g=0;var a=-1;var k=OpenLayers.Util.indexOf(h,"right");var l=0;while(l<h.length){var j=g;var c=a;switch(h[k]){case"right":c++;break;case"down":j++;break;case"left":c--;break;case"up":j--;break}var f=null;if((j<this.grid.length)&&(j>=0)&&(c<this.grid[0].length)&&(c>=0)){f=this.grid[j][c]}if((f!=null)&&(!f.queued)){b.unshift(f);f.queued=true;l=0;g=j;a=c}else{k=(k+1)%4;l++}}for(var d=0,e=b.length;d<e;d++){var f=b[d];f.draw();f.queued=false}},addTile:function(b,a){},addTileMonitoringHooks:function(a){a.onLoadStart=function(){if(this.numLoadingTiles==0){this.events.triggerEvent("loadstart")}this.numLoadingTiles++};a.events.register("loadstart",this,a.onLoadStart);a.onLoadEnd=function(){this.numLoadingTiles--;this.events.triggerEvent("tileloaded");if(this.numLoadingTiles==0){this.events.triggerEvent("loadend")}};a.events.register("loadend",this,a.onLoadEnd);a.events.register("unload",this,a.onLoadEnd)},removeTileMonitoringHooks:function(a){a.unload();a.events.un({loadstart:a.onLoadStart,loadend:a.onLoadEnd,unload:a.onLoadEnd,scope:this})},moveGriddedTiles:function(c){var b=this.buffer||1;while(true){var a=this.grid[0][0].position;var d=this.map.getViewPortPxFromLayerPx(a);if(d.x>-this.tileSize.w*(b-1)){this.shiftColumn(true)}else{if(d.x<-this.tileSize.w*b){this.shiftColumn(false)}else{if(d.y>-this.tileSize.h*(b-1)){this.shiftRow(true)}else{if(d.y<-this.tileSize.h*b){this.shiftRow(false)}else{break}}}}}},shiftRow:function(n){var c=(n)?0:(this.grid.length-1);var b=this.grid;var f=b[c];var e=this.map.getResolution();var h=(n)?-this.tileSize.h:this.tileSize.h;var g=e*-h;var m=(n)?b.pop():b.shift();for(var j=0,l=f.length;j<l;j++){var d=f[j];var a=d.bounds.clone();var k=d.position.clone();a.bottom=a.bottom+g;a.top=a.top+g;k.y=k.y+h;m[j].moveTo(a,k)}if(n){b.unshift(m)}else{b.push(m)}},shiftColumn:function(m){var d=(m)?-this.tileSize.w:this.tileSize.w;var c=this.map.getResolution();var k=c*d;for(var e=0,g=this.grid.length;e<g;e++){var l=this.grid[e];var j=(m)?0:(l.length-1);var b=l[j];var a=b.bounds.clone();var f=b.position.clone();a.left=a.left+k;a.right=a.right+k;f.x=f.x+d;var h=m?this.grid[e].pop():this.grid[e].shift();h.moveTo(a,f);if(m){l.unshift(h)}else{l.push(h)}}},removeExcessTiles:function(e,c){while(this.grid.length>e){var f=this.grid.pop();for(var b=0,a=f.length;b<a;b++){var d=f[b];this.removeTileMonitoringHooks(d);d.destroy()}}while(this.grid[0].length>c){for(var b=0,a=this.grid.length;b<a;b++){var f=this.grid[b];var d=f.pop();this.removeTileMonitoringHooks(d);d.destroy()}}},onMapResize:function(){if(this.singleTile){this.clearGrid();this.setTileSize()}},getTileBounds:function(d){var c=this.maxExtent;var f=this.getResolution();var e=f*this.tileSize.w;var b=f*this.tileSize.h;var h=this.getLonLatFromViewPortPx(d);var a=c.left+(e*Math.floor((h.lon-c.left)/e));
var g=c.bottom+(b*Math.floor((h.lat-c.bottom)/b));return new OpenLayers.Bounds(a,g,a+e,g+b)},CLASS_NAME:"OpenLayers.Layer.SnappyGrid"}));Oskari.$("SnappyWMSLayer",OpenLayers.Class(OpenLayers.Layer.Grid,{DEFAULT_PARAMS:{service:"WMS",version:"1.1.1",request:"GetMap",styles:"",format:"image/jpeg"},reproject:false,isBaseLayer:true,encodeBBOX:false,noMagic:false,yx:{"EPSG:4326":true},initialize:function(d,c,e,b){var a=[];e=OpenLayers.Util.upperCaseObject(e);if(parseFloat(e.VERSION)>=1.3&&!e.EXCEPTIONS){e.EXCEPTIONS="INIMAGE"}a.push(d,c,e,b);OpenLayers.Layer.Grid.prototype.initialize.apply(this,a);OpenLayers.Util.applyDefaults(this.params,OpenLayers.Util.upperCaseObject(this.DEFAULT_PARAMS));if(!this.noMagic&&this.params.TRANSPARENT&&this.params.TRANSPARENT.toString().toLowerCase()=="true"){if((b==null)||(!b.isBaseLayer)){this.isBaseLayer=false}if(this.params.FORMAT=="image/jpeg"){this.params.FORMAT=OpenLayers.Util.alphaHack()?"image/gif":"image/png"}}},destroy:function(){OpenLayers.Layer.Grid.prototype.destroy.apply(this,arguments)},clone:function(a){if(a==null){a=new OpenLayers.Layer.WMS(this.name,this.url,this.params,this.getOptions())}a=OpenLayers.Layer.Grid.prototype.clone.apply(this,[a]);return a},reverseAxisOrder:function(){return(parseFloat(this.params.VERSION)>=1.3&&!!this.yx[this.map.getProjectionObject().getCode()])},getURL:function(c){c=this.adjustBounds(c);var d=this.getImageSize();var e={};var b=this.reverseAxisOrder();e.BBOX=this.encodeBBOX?c.toBBOX(null,b):c.toArray(b);e.WIDTH=d.w;e.HEIGHT=d.h;var a=this.getFullRequestString(e);return a},mergeNewParams:function(c){var b=OpenLayers.Util.upperCaseObject(c);var a=[b];return OpenLayers.Layer.Grid.prototype.mergeNewParams.apply(this,a)},getFullRequestString:function(e,c){var b=this.map.getProjectionObject();var a=this.projection&&this.projection.equals(b)?this.projection.getCode():b.getCode();var d=(a=="none")?null:a;if(parseFloat(this.params.VERSION)>=1.3){this.params.CRS=d}else{this.params.SRS=d}if(typeof this.params.TRANSPARENT=="boolean"){e.TRANSPARENT=this.params.TRANSPARENT?"TRUE":"FALSE"}return OpenLayers.Layer.Grid.prototype.getFullRequestString.apply(this,arguments)},CLASS_NAME:"OpenLayers.Layer.SnappyWMS"}));Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.ToolSelectionRequest",function(a){this._toolId=a;this._creator=null},{tools:{navigate:"map_control_navigate_tool",previous:"map_control_tool_prev",next:"map_control_tool_prev",select:"map_control_select_tool",zoom:"map_control_zoom_tool",draw_area:"map_control_draw_area_tool",measure:"map_control_measure_tool",measure_area:"map_control_measure_area_tool",info:"map_control_show_info_tool"},__name:"ToolSelectionRequest",getName:function(){return this.__name},getToolId:function(){return this._toolId},setToolId:function(a){this._toolId=a},getNamespace:function(){if(this._toolId.indexOf(".")==-1){return""}return this._toolId.substring(0,this._toolId.lastIndexOf("."))},getToolName:function(){if(this._toolId.indexOf(".")==-1){return this._toolId}return this._toolId.substring(this._toolId.lastIndexOf("."))}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapmodule.ToolSelectionHandler",function(a,b){this.sandbox=a;this.controlsPlugin=b},{__name:"ToolSelectionHandler",getName:function(){return this.__name},init:function(a){},handleRequest:function(a,f){var h=f.getToolId();var b=f.getNamespace();var d=f.getToolName();if(d!="map_control_zoom_tool"){this.controlsPlugin._zoomBoxTool.deactivate()}if(d!="map_control_measure_tool"){this.controlsPlugin._measureControls.line.deactivate()}if(d!="map_control_measure_area_tool"){this.controlsPlugin._measureControls.area.deactivate()}if(d=="map_control_tool_prev"){var i=this.sandbox.findRegisteredModuleInstance("StateHandler");if(i){i.historyMovePrevious()}}else{if(d=="map_control_tool_next"){var i=this.sandbox.findRegisteredModuleInstance("StateHandler");if(i){i.historyMoveNext()}}else{if(d=="map_control_select_tool"){var c=this.sandbox.findRegisteredModuleInstance("SketchLayerPlugin");if(c){c.clearBbox()}}else{if(d=="map_control_zoom_tool"){this.controlsPlugin._zoomBoxTool.activate()
}else{if(d=="map_control_measure_tool"){this.controlsPlugin._measureControls.line.activate()}else{if(d=="map_control_measure_area_tool"){this.controlsPlugin._measureControls.area.activate()}}}}}}var g=this.sandbox.getEventBuilder("ToolSelectedEvent")(h);g.setOrigin(this.getName());this.sandbox.notifyAll(g)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.MapLayerUpdateRequest",function(a,b){this._layerId=a;this._forced=b},{__name:"MapModulePlugin.MapLayerUpdateRequest",getName:function(){return this.__name},getLayerId:function(){return this._layerId},isForced:function(){if(this._forced){return this._forced}return false}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.MapLayerUpdateRequestHandler",function(a,b){this.sandbox=a;this.mapModule=b},{handleRequest:function(b,g){var a=g.getLayerId();var f=g.isForced();var c=this.mapModule.getOLMapLayers(a);var e=0;if(c){e=c.length;for(var d=0;d<c.length;++d){c[d].redraw(f)}}this.sandbox.printDebug("[MapLayerUpdateRequestHandler] update layer "+a+", found "+e)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.MapMoveRequestHandler",function(a,b){this.sandbox=a;this.mapModule=b},{handleRequest:function(b,d){var f=d.getCenterX();var g=d.getCenterY();var a=d.getMarker();var c=d.getZoom();var e=new OpenLayers.LonLat(f,g);this.mapModule.moveMapToLanLot(e);if(c||c===0){if(c.CLASS_NAME==="OpenLayers.Bounds"){this.mapModule._map.zoomToExtent(c)}else{this.mapModule._map.zoomTo(c)}}this.mapModule._updateDomain();if(a){this.mapModule._drawMarker()}this.mapModule.notifyMoveEnd();this.sandbox.printDebug("[MapMoveRequestHandler] map moved")}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.event.MapClickedEvent",function(c,b,a){this._lonlat=c;this._mouseX=b;this._mouseY=a},{__name:"MapClickedEvent",getName:function(){return this.__name},getLonLat:function(){return this._lonlat},getMouseX:function(){return this._mouseX},getMouseY:function(){return this._mouseY}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.event.EscPressedEvent",function(){},{__name:"EscPressedEvent",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.request.ClearHistoryRequest",function(){this._creator=null},{__name:"ClearHistoryRequest",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapmodule-plugin.controls.ClearHistoryHandler",function(a,b){this.mapModule=b;this.sandbox=a},{__name:"ClearHistoryHandler",getName:function(){return this.__name},init:function(a){},handleRequest:function(a,b){this.mapModule.clearNavigationHistory()}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.CoreMapModuleBundleInstance",function(a){this.name="mapmodule";this.mediator=null;this.sandbox=null;this.conf=null;this.impl=null;this.facade=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};var o=Oskari.$("UI.facade");this.facade=o;var m=o.getSandbox();this.sandbox=m;var j=Oskari.$("startup");this.conf=j;var n=j.mapConfigurations.index_map;var l=j.mapConfigurations.zoom_bar;var b=j.mapConfigurations.scala_bar;var d=j.mapConfigurations.pan;var k=Oskari.clazz.create("Oskari.mapframework.ui.module.common.MapModule","Main",n,l,b,d);this.impl=k;var f=this.createMapPanel();this._panel=f;var a=this.facade.appendExtensionModule(this.impl,this.name,{},this,"Center",{fi:{title:""},sv:{title:"?"},en:{title:""}},f);this.def=a;var e=[];e.push("Oskari.mapframework.bundle.mapmodule.plugin.LayersPlugin");e.push("Oskari.mapframework.mapmodule.WmsLayerPlugin");e.push("Oskari.mapframework.mapmodule.ControlsPlugin");for(var g=0;g<e.length;
g++){var h=Oskari.clazz.create(e[g]);k.registerPlugin(h)}var c=this.createMapContainer(this.impl.getMap());this._mapster=c;f.add(c);o.registerPart("Mapster",this._mapster);this.impl.start(m);this.mediator.setState("started");return this},createMapPanel:function(){var a=this.libs.ext;var b=a.create("Ext.Panel",{region:"center",layout:"fit",items:[]});return b},createMapContainer:function(b){var a=this.libs.ext;var c=a.createWidget("nlsfimappanel",{olmap:b,layout:"absolute"});return c},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.impl.eventHandlers,this,this.def);this.def=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.CoreMapModuleBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.mapfull.MapFullBundleInstance",function(){this.map=null;this.core=null;this.sandbox=null;this.mapmodule=null;this.mapDivId="mapdiv"},{getMapModule:function(){return this.mapmodule},getSandbox:function(){return this.sandbox},createUi:function(){var e=this;if(this.conf.size){jQuery("#"+this.mapDivId).width(this.conf.size.width);jQuery("#"+this.mapDivId).height(this.conf.size.height)}else{function f(){jQuery("#"+e.mapDivId).height(jQuery(window).height())}var a;jQuery(window).resize(function(){clearTimeout(a);a=setTimeout(f,100)});f()}var d=Oskari.clazz.create("Oskari.mapframework.ui.module.common.MapModule","Main");this.mapmodule=d;var g=this.sandbox.register(d);d.start(this.sandbox);g.render(this.mapDivId);if(this.conf.plugins){var b=this.conf.plugins;for(var c=0;c<b.length;c++){b[c].instance=Oskari.clazz.create(b[c].id,b[c].config);d.registerPlugin(b[c].instance);d.startPlugin(b[c].instance)}}this.map=g},start:function(){var h=this;var g=h.conf;var d=Oskari.getLang();var b=h;var c=Oskari.clazz.create("Oskari.mapframework.core.Core");this.core=c;var l=c.getSandbox();this.sandbox=l;var k=this.createServices(g);var m=[];m.push(Oskari.clazz.create("Oskari.mapframework.enhancement.mapfull.StartMapWithLinkEnhancement"));l.setUser(g.user);l.setAjaxUrl(g.globalMapAjaxUrl);c.init(k,m);var f=l.getService("Oskari.mapframework.service.MapLayerService");var a=g.layers;if(a){for(var e=0;e<a.length;e++){var j=f.createMapLayer(a[e]);f.addLayer(j,true)}}this.createUi();l.registerAsStateful(this.mediator.bundleId,this);this.setState(this.state)},_teardownState:function(c){var d=this.sandbox.findAllSelectedMapLayers();var a=this.sandbox.getRequestBuilder("RemoveMapLayerRequest");for(var b=0;b<d.length;b++){this.sandbox.request(c.getName(),a(d[b].getId()))}},setState:function(a){var h=this.sandbox.findRegisteredModuleInstance("MainMapModule");this._teardownState(h);if(a.selectedLayers){var f=this.sandbox.getRequestBuilder("AddMapLayerRequest");var j=this.sandbox.getRequestBuilder("ChangeMapLayerOpacityRequest");var c=this.sandbox.getRequestBuilder("MapModulePlugin.MapLayerVisibilityRequest");var d=this.sandbox.getRequestBuilder("ChangeMapLayerStyleRequest");var g=a.selectedLayers.length;for(var b=0;b<g;++b){var e=a.selectedLayers[b];this.sandbox.request(h.getName(),f(e.id,true));if(e.hidden){this.sandbox.request(h.getName(),c(e.id,false))}if(e.style){this.sandbox.request(h.getName(),d(e.id,e.style))}if(e.opacity){this.sandbox.request(h.getName(),j(e.id,e.opacity))}}}if(a.east){this.sandbox.getMap().moveTo(a.east,a.north,a.zoom)}this.sandbox.syncMapState(true)},createServices:function(b){var e=this;var c=[];var a=Oskari.clazz.create("Oskari.mapframework.service.MapLayerService",b.globalMapAjaxUrl+"action_route=GetMapLayers",this.core.getSandbox());c.push(a);a.registerLayerModel("wmtslayer","Oskari.mapframework.wmts.domain.WmtsLayer");var d=Oskari.clazz.create("Oskari.mapframework.wmts.service.WmtsLayerModelBuilder");a.registerLayerModelBuilder("wmtslayer",d);c.push(Oskari.clazz.create("Oskari.mapframework.service.OgcSearchService",b.ogcSearchServiceEndpoint,this.core));if(b.disableDevelopmentMode=="true"){core.disableDebug();c.push(Oskari.clazz.create("Oskari.mapframework.service.UsageSnifferService",2,"/log/"));core.enableMapMovementLogging()}return c},update:function(){},stop:function(){this.sandbox.unregisterStateful(this.mediator.bundleId);alert("Stopped!")},getState:function(){var b=this.sandbox.getMap();var d=this.sandbox.findAllSelectedMapLayers();var j=b.getZoom();var h=b.getX();var a=b.getY();var c={north:a,east:h,zoom:b.getZoom(),selectedLayers:[]};for(var f=0;f<d.length;f++){var g=d[f];var e={id:g.getId(),opacity:g.getOpacity()};if(!g.isVisible()){e.hidden=true}if(g.getCurrentStyle&&g.getCurrentStyle()&&g.getCurrentStyle().getName()&&g.getCurrentStyle().getName()!="!default!"){e.style=g.getCurrentStyle().getName()}c.selectedLayers.push(e)}return c}},{protocol:["Oskari.bundle.BundleInstance","Oskari.userinterface.Stateful"]});Oskari.clazz.define("Oskari.mapframework.enhancement.mapfull.StartMapWithConfigurationsEnhancement",function(a,b){this._preSelectedJson=a;
this._mapConfigurations=b},{enhance:function(b){var f=b.getRequestParameter("coord");var c=b.getRequestParameter("zoomLevel");var a=b.getRequestParameter("mapLayers");if(f!=null&&c!=null&&a!=null){b.printDebug("Ahem, we found 'mapLayers, coord and zoomLevel' parameters from url. This is probably a link startup. Skipping preselection.");return}b.printDebug("Enhancing application by setting position.");var h=this._mapConfigurations.east;var g=this._mapConfigurations.north;var k=this._mapConfigurations.scale;var e=false;b.getMap().moveTo(h,g,k);b.printDebug("Enhancing application by preselecting layers.");if(!this._preSelectedJson||!this._preSelectedJson.preSelectedLayers){return}for(var d=0;d<this._preSelectedJson.preSelectedLayers.length;d++){var j=this._preSelectedJson.preSelectedLayers[d];b.processRequest(b.getRequestBuilder("AddMapLayerRequest")(j.id,false))}}},{protocol:["Oskari.mapframework.enhancement.Enhancement"]});Oskari.clazz.define("Oskari.mapframework.enhancement.mapfull.StartMapWithLinkEnhancement",function(){},{enhance:function(u){u.printDebug("Checking if map is started with link...");var o=u.getRequestParameter("coord");var n=u.getRequestParameter("zoomLevel");var h=u.getRequestParameter("mapLayers");var f=u.getRequestParameter("showMarker");var k=u.getRequestParameter("keepLayersOrder");if(k===null){k=true}u.getMap().setMarkerVisible(f=="true");if(o===null||n===null){return}var p;if(o.indexOf("_")>=0){p=o.split("_")}else{p=o.split("%20")}var j=p[0];var m=p[1];if(j===null||m===null){u.printDebug("Could not parse link location. Skipping.");return}u.getMap().moveTo(j,m,n);u.printDebug("This is startup by link, moving map...");if(h!==null&&h!==""){u.printDebug("Continuing by adding layers...");var a=h.split(",");for(var s=0;s<a.length;s++){var g=a[s].split("+");var e=g[0];var b=g[1];var t=g[2];if((e.indexOf("_")!=-1)&&(e.indexOf("base_")==-1)&&(e.indexOf("BASE_")==-1)){var v=e.split("_");e=null;var c=null;for(var d in v){if(d){c=u.findBaselayerBySublayerIdFromAllAvailable(v[d]);if(c){e=c.getId();break}}}}if(e!==null){var q=null;var l=null;q=u.getRequestBuilder("AddMapLayerRequest");l=q(e,k);u.processRequest(l);q=u.getRequestBuilder("ChangeMapLayerOpacityRequest");l=q(e,b);u.processRequest(l);q=u.getRequestBuilder("ChangeMapLayerStyleRequest");l=q(e,t);u.processRequest(l)}else{u.printWarn("[StartMapWithLinkEnhancement] Could not find baselayer for "+e)}}}}},{protocol:["Oskari.mapframework.enhancement.Enhancement"]});Oskari.clazz.define("Oskari.mapframework.enhancement.mapfull.StartMapWithSearchResultEnhancement",function(){},{enhance:function(b){b.printDebug("Checking if map is started with search result...");var g=b.getRequestParameter("coord");var e=b.getRequestParameter("zoomLevel");if(g==null||e==null){return}var c=b.getRequestParameter("mapLayers");if(c!=null){b.printDebug("This is probably startup by link, not by search result. Skipping.");return}var a;if(g.indexOf("_")>=0){a=g.split("_")}else{a=g.split("%20")}var d=a[0];var f=a[1];if(d==null||f==null){b.printDebug("Could not parse link location. Skipping.")}b.printDebug("This is startup by search result, moving map.");b.getMap().moveTo(d,f,e);b.getMap().setMarkerVisible(true)}},{protocol:["Oskari.mapframework.enhancement.Enhancement"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.ui.module.common.MapControlsModule",function(){this._mapIsFullScreen=false;this._sandbox=null;this._previousHistoryAvailable=false;this._nextHistoryAvailable=false;this._controlStatuses=[]},{__name:"MapControlsModule",getName:function(){return this.__name},init:function(b){b.printDebug("[MapControlsModule] init");this._sandbox=b;var c=this;for(var d in this.eventHandlers){b.registerForEventByName(this,d)}this.toolButtonRequestHandler=Oskari.clazz.create("Oskari.mapframework.mapcontrols.request.ToolButtonRequestHandler",b,c);this.actions={};this._createInitialToolbarActions(b);this.extraActions={};this.extraButtons={};var a=Ext.create("Ext.panel.Panel",{id:"map_controls_toolbar",x:10,y:10,style:"{ z-index: 99999; }",bodyStyle:{background:"transparent",padding:"0px 10px 0px 0px"},border:false,padding:5,layout:{type:"hbox"},items:c._getMapToolbarItems(b)});this._mainpanel=a;return a},start:function(a){a.printDebug("Starting "+this.getName());this._previousHistoryAvailable=false;this._nextHistoryAvailable=false;a.addRequestHandler("MapControls.ToolButtonRequest",this.toolButtonRequestHandler)},stop:function(){this._sandbox.removeRequestHandler("MapControls.ToolButtonRequest",this.toolButtonRequestHandler)},_requestToolSelection:function(d){var a=this._sandbox.getRequestBuilder("ToolSelectionRequest");var c=a(d);this._sandbox.request(this,c)},_refreshToolbarButtons:function(){this._mainpanel.removeAll(true);this._createInitialToolbarActions(this._sandbox);var a=this._getMapToolbarItems(this._sandbox);this._mainpanel.add(a)},removeToolButton:function(b){if(!b||!b.group){return}var d=b.group;var a=b.toolId;if(this.extraActions[d]){if(!a){for(var d in this.extraActions){if(this.extraActions[d]){for(var c in this.extraActions[d]){if(c===a){this.extraButtons[a]=null}}}}this.extraActions[d]=null}else{this.extraActions[d][a]=null;this.extraButtons[a]=null}}this._refreshToolbarButtons()},setButtonDisabled:function(a,c){if(!a||!a.toolId){return}var b=this.extraButtons[a.toolId];if(b){b.setDisabled(c);if(!c&&a.callback){b.setHandler(a.callback)}}else{this._sandbox.printDebug("Couldnt find button for toolId: "+a.toolId)}},addToolButton:function(a){if(!a){return}var b=this;if(!a.toolId){if(!a.callback){return}a.toolId="tool_"+Ext.id()}if(!a.group){a.group="extra"}a.scale="large";a.componentCls="opacity_80";a.id=a.toolId;if(!a.callback){a.toggleGroup="mapcontrolsgroup";a.handler=function(){b.actions.map_control_measure_menu.menu.hide();b._requestToolSelection("map_control_navigate_tool")}}else{a.handler=a.callback}if(!this.extraActions[a.group]){this.extraActions[a.group]={}}this.extraActions[a.group][a.toolId]=a;this._refreshToolbarButtons()},_createInitialToolbarActions:function(b){var c=this;var d="Oskari.mapframework.ui.module.common.mapmodule.GeoAction";var a=this._sandbox.findRegisteredModuleInstance("MainMapModule");this.actions.map_control_tool_prev=Ext.create("Ext.button.Button",Ext.create(d,{iconCls:"map_control_tool_prev",tooltip:b.getText("map_control_tool_prev_tooltip"),scale:"large",control:a._navigationHistoryTool.previous,componentCls:"opacity_80",handler:function(){c.actions.map_control_measure_menu.menu.hide();a.notifyMoveEnd()}}));this.actions.map_control_tool_next=Ext.create("Ext.button.Button",Ext.create(d,{iconCls:"map_control_tool_next",tooltip:b.getText("map_control_tool_next_tooltip"),scale:"large",control:a._navigationHistoryTool.next,componentCls:"opacity_80",handler:function(){c.actions.map_control_measure_menu.menu.hide();a.notifyMoveEnd()}}));this.actions.map_control_select_tool=Ext.create("Ext.button.Button",Ext.create(d,{iconCls:"map_control_navigate_tool",tooltip:b.getText("map_control_navigate_tool_tooltip"),enableToggle:true,allowDepress:false,scale:"large",pressed:true,toggleGroup:"mapcontrolsgroup",componentCls:"opacity_80",handler:function(){c.actions.map_control_measure_menu.menu.hide();c._requestToolSelection("map_control_navigate_tool")}}));this.actions.map_control_zoom_tool=Ext.create("Ext.button.Button",Ext.create(d,{iconCls:"map_control_zoom_tool",tooltip:b.getText("map_control_zoom_tool_tooltip"),enableToggle:true,allowDepress:false,toggleGroup:"mapcontrolsgroup",scale:"large",componentCls:"opacity_80",handler:function(){c.actions.map_control_measure_menu.menu.hide();
c._requestToolSelection("map_control_zoom_tool")}}));this.actions.map_control_measure_tool=Ext.create("Ext.button.Button",Ext.create(d,{tooltip:b.getText("map_control_measure_tool_tooltip"),scale:"large",allowDepress:false,iconCls:"map_control_measure_tool",componentCls:"opacity_80",handler:function(){c.actions.map_control_measure_menu.menu.hide();c.actions.map_control_measure_menu.toggle(true,true);c.actions.map_control_select_tool.toggle(false,true);c._requestToolSelection("map_control_measure_tool")}}));this.actions.map_control_measure_area_tool=Ext.create("Ext.button.Button",Ext.create(d,{iconCls:"map_control_measure_area_tool",tooltip:b.getText("map_control_measure_area_tool_tooltip"),scale:"large",allowDepress:false,componentCls:"opacity_80",handler:function(){c.actions.map_control_measure_menu.menu.hide();c.actions.map_control_measure_menu.toggle(true,true);c.actions.map_control_select_tool.toggle(false,true);c._requestToolSelection("map_control_measure_area_tool")}}));this.actions.map_control_measure_menu=Ext.create("Ext.button.Button",{iconCls:"map_control_measure_menu",tooltip:b.getText("map_control_measure_menu_tooltip"),arrowAlign:"right",allowDepress:false,cls:"x-btn-icon",scale:"large",enableToggle:false,toggleGroup:"mapcontrolsgroup",componentCls:"opacity_80",menu:{xtype:"menu",defaults:{xtype:"button",cls:"x-btn-icon",enableToggle:true,iconAlign:"left",scale:"large"},minWidth:45,plain:true,items:[c.actions.map_control_measure_tool,c.actions.map_control_measure_area_tool]},listeners:{click:function(){if(this.pressed&&!c.actions.map_control_measure_tool.pressed&&!c.actions.map_control_measure_area_tool.pressed){c.actions.map_control_select_tool.toggle(true,false);this.toggle(false,true);c._requestToolSelection("map_control_navigate_tool")}}}});this.actions.map_print_tool=Ext.create("Ext.Button",Ext.create(d,{iconCls:"map_control_map_print_tool",tooltip:b.getText("map_control_print_tool_tooltip"),scale:"large",componentCls:"opacity_80",handler:function(){c.actions.map_control_measure_menu.menu.hide();c._sandbox.request(c,b.getRequestBuilder("GenerateHtmlPrintToMapRequest")())}}));this.actions.map_link_tool=Ext.create("Ext.Button",Ext.create(d,{iconCls:"map_control_map_link_tool",tooltip:b.getText("map_control_map_link_tool_tooltip"),scale:"large",componentCls:"opacity_80",handler:function(){c.actions.map_control_measure_menu.menu.hide();c._sandbox.request(c,b.getRequestBuilder("GenerateHtmlLinkToMapRequest")())}}));this.actions.map_control_full_screen_tool=Ext.create("Ext.Button",Ext.create(d,{id:"map_control_full_screen_tool",iconCls:"map_control_full_screen_tool",tooltip:b.getText("map_control_full_screen_tool_tooltip"),scale:"large",componentCls:"opacity_80",handler:function(){if(c._mapIsFullScreen){c.setApplicationViewToNormal()}else{c.setApplicationViewToFullscreen()}}}))},_getMapToolbarItems:function(a){var d=this;var f=[d.actions.map_control_tool_prev,d.actions.map_control_tool_next];this._fillWithToolbarSpacers(f,6);f.push(d.actions.map_control_select_tool);this._fillWithToolbarSpacers(f,5);f.push(d.actions.map_control_zoom_tool);f.push(d.actions.map_control_measure_menu);this._fillWithToolbarSpacers(f,4);f.push(d.actions.map_print_tool);f.push(d.actions.map_link_tool);for(var e in this.extraActions){if(this.extraActions[e]){this._fillWithToolbarSpacers(f,4);for(var c in this.extraActions[e]){if(this.extraActions[e][c]){var b=Ext.create("Ext.Button",Ext.create("Oskari.mapframework.ui.module.common.mapmodule.GeoAction",this.extraActions[e][c]));this.extraButtons[c]=b;f.push(b)}}}}f.push({xtype:"tbfill"});f.push(d.actions.map_control_full_screen_tool);return f},_fillWithToolbarSpacers:function(c,b){for(var a=0;a<b;++a){c.push({xtype:"tbspacer"})}},toggleButtonState:function(a){if(a=="map_control_map_publisher_tool"){this._sandbox.request(this,this._sandbox.getRequestBuilder("StartMapPublisherRequest")())}else{if(a=="map_control_start_net_service_centre_tool"){this._sandbox.request(this,this._sandbox.getRequestBuilder("ShowNetServiceCentreRequest")())}}},eventHandlers:{AfterGenerateHtmlLinkToMapEvent:function(b){var a=b.getHtml();
this._sandbox.showPopupText("maplinkservice_link_generated_messagebox_title","maplinkservice_link_generated_messagebox_message",[a])},AfterGenerateHtmlPrintToMapEvent:function(b){var a=b.getHtml();this.openPrintWindow(a)},AfterStartMapPublisherEvent:function(a){window.location.href=a.getUrl()},AfterMapMoveEvent:function(b){var a=this._sandbox.findRegisteredModuleInstance("MainMapModule")._navigationHistoryTool;if(a.previousStack.length>0){this.actions.map_control_tool_prev.enable()}else{this.actions.map_control_tool_prev.disable()}if(a.nextStack.length>0){this.actions.map_control_tool_next.enable()}else{this.actions.map_control_tool_next.disable()}},CoreReadyEvent:function(a){this._sandbox.findRegisteredModuleInstance("MainMapModule")._navigationHistoryTool.clear()},ToolSelectedEvent:function(b){if(b.getNamespace()!==this.__name){for(var a in this.actions){this.actions[a].setActive(false)}this.actions.map_control_select_tool.setActive(true)}},EscPressedEvent:function(a){this.setApplicationViewToNormal()}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},openPrintWindow:function(b){if(this.problemWithPrintingSafariCase()){this._sandbox.showPopupText("mapcontrolsservice_problem_with_safari_printing_title","mapcontrolsservice_problem_with_safari_printing_message",null);return}var e="tulostus";var f=parseInt(Oskari.$().startup.printWindowHeight)+60;var c=parseInt(Oskari.$().startup.printWindowWidth);var a=this._sandbox.getBrowserWindowSize();var d="scrollbars=no, ";if(a.height<f){f=a.height;d="scrollbars=yes, "}window.open(b,e,"width="+c+", height="+f+", menubar=yes, resizable=no, "+d+" location=no, status=no, menubar=no")},problemWithPrintingSafariCase:function(){if(Ext.isSafari){selectedLayers=this._sandbox.findAllSelectedMapLayers();for(var a=0;a<selectedLayers.length;a++){if(selectedLayers[a].getOpacity()<100){return true}}}return false},setApplicationViewToFullscreen:function(){if(this._mapIsFullScreen){return}this._mapIsFullScreen=true;this.actions.map_control_full_screen_tool.setIconCls("map_control_full_screen_tool_fs");var a=Ext.getCmp("full_screen_viewport");if(a){a.destroy()}var b=Ext.getCmp("main-app");if(b){b.hide()}var c=Ext.getCmp("main-app-window");if(c){c.hide()}var e=Ext.getCmp("main-app-panel");a=Ext.create("Ext.container.Viewport",{id:"full_screen_viewport",layout:"fit",floating:true,focusOnToFront:true,items:e});var f=["menu","dockWrapper","topWrapper","footer"];for(var d in f){var g=document.getElementById(f[d]);if(g&&g.style){g.style.display="none"}}if(e){e.doLayout()}if(a){a.doLayout();a.toFront();a.show()}},setApplicationViewToNormal:function(){if(!this._mapIsFullScreen){return}this._mapIsFullScreen=false;this.actions.map_control_full_screen_tool.setIconCls("map_control_full_screen_tool");var b=Ext.getCmp("main-app");var e=Ext.getCmp("main-app-panel");var c=Ext.getCmp("main-app-window");var a=Ext.getCmp("full_screen_viewport");if(a){a.toBack()}if(a.style){a.style.display="none"}var f=["menu","dockWrapper","topWrapper","footer"];for(var d in f){var g=document.getElementById(f[d]);if(g&&g.style){g.style.display="block"}}if(b&&e&&c){b.add(e);c.show();b.show();if(c.dom){c.doLayout()}if(b.dom){b.doLayout()}document.body.style.overflow="auto";document.body.style["overflow-x"]="auto";document.body.style["overflow-y"]="auto"}}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.mapcontrols.request.ToolButtonRequest",function(a,c){this._creator=null;for(var b=0;b<this.requestTypes.length;++b){if(c===this.requestTypes[b]){this._type=c}}if(!this._type){throw"Unknown type '"+c+"'"}this._config=a},{__name:"MapControls.ToolButtonRequest",getName:function(){return this.__name},requestTypes:["add","remove","disable","enable","toggle"],getConfig:function(){return this._config},getType:function(){return this._type}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.mapcontrols.request.ToolButtonRequestHandler",function(a,b){this.sandbox=a;this.plugin=b},{handleRequest:function(b,c){var a=c.getType();
this.sandbox.printDebug("[Oskari.mapframework.mapcontrols.request.ToolButtonRequestHandler] got requesttype "+a);if("add"===a){this.plugin.addToolButton(c.getConfig())}else{if("remove"===a){this.plugin.removeToolButton(c.getConfig())}else{if("enable"===a){this.plugin.setButtonDisabled(c.getConfig(),false)}else{if("disable"===a){this.plugin.setButtonDisabled(c.getConfig(),true)}else{if("toggle"===a){}}}}}}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Ext.namespace("Oskari");Ext.define("Oskari.mapframework.ui.module.common.mapmodule.GeoAction",{extend:Ext.Action,control:null,map:null,uScope:null,uHandler:null,uToggleHandler:null,uCheckHandler:null,constructor:function(a){this.uScope=a.scope;this.uHandler=a.handler;this.uToggleHandler=a.toggleHandler;this.uCheckHandler=a.checkHandler;this.activateHandler=a.activateHandler;this.deactivateHandler=a.deactivateHandler;a.scope=this;a.handler=this.pHandler;a.toggleHandler=this.pToggleHandler;a.checkHandler=this.pCheckHandler;this.control=a.control;delete a.control;if(this.control){if(a.map){a.map.addControl(this.control);delete a.map}if((a.pressed||a.checked)&&this.control.map){this.control.activate()}this.control.events.on({activate:this.onCtrlActivate,deactivate:this.onCtrlDeactivate,scope:this})}this.callParent(arguments)},pHandler:function(a){if(this.control&&this.control.type==OpenLayers.Control.TYPE_BUTTON){this.control.trigger()}if(this.uHandler){this.uHandler.apply(this.uScope,arguments)}},pToggleHandler:function(a,b){this.changeControlState(b);if(this.uToggleHandler){this.uToggleHandler.apply(this.uScope,arguments)}},pCheckHandler:function(a,b){this.changeControlState(b);if(this.uCheckHandler){this.uCheckHandler.apply(this.uScope,arguments)}},changeControlState:function(a){if(a){if(!this._activating){this._activating=true;if(this.control){this.control.activate()}this._activating=false}}else{if(!this._deactivating){this._deactivating=true;if(this.control){this.control.deactivate()}this._deactivating=false}}},onCtrlActivate:function(){if(this.activateHandler){this.activateHandler()}if(this.control&&this.control.type==OpenLayers.Control.TYPE_BUTTON){this.enable()}else{this.safeCallEach("toggle",[true]);this.safeCallEach("setChecked",[true])}},onCtrlDeactivate:function(){if(this.deActivateHandler){this.deActivateHandler()}if(this.control&&this.control.type==OpenLayers.Control.TYPE_BUTTON){this.disable()}else{this.safeCallEach("toggle",[false]);this.safeCallEach("setChecked",[false])}},safeCallEach:function(e,b){var d=this.items;for(var c=0,a=d.length;c<a;c++){if(d[c][e]){d[c].rendered?d[c][e].apply(d[c],b):d[c].on({render:d[c][e].createDelegate(d[c],b),single:true})}}}});Oskari.clazz.define("Oskari.mapframework.bundle.DefaultMapControlsBundleInstance",function(a){this.name="mapcontrols";this.mediator=null;this.sandbox=null;this.impl=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");this.impl=Oskari.clazz.create("Oskari.mapframework.ui.module.common.MapControlsModule");var a=this.facade.appendExtensionModule(this.impl,this.name,{},this,"Mapster",{fi:{title:""},sv:{title:"?"},en:{title:""}});a.cmp.addListener("close",function(){a.bundleInstance.stop();var c=a.bundleInstance.mediator.manager;var b=a.bundleInstance.mediator.instanceid;c.destroyInstance(b);a.bundleInstance=null});this.def=a;this.impl.start(this.facade.getSandbox());this.mediator.setState("started");return this},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.impl.eventHandlers,this,this.def);this.def=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.DefaultMapControlsBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.ui.module.mapasker.GridModule",function(){this._sandbox=null;this._currentData={};this._definedModels=[];this._selectedLayer=null;this._initialized=false;this._service=null;this._mainPanel=null;this._tabPanel=null;this._latestResponseId=-1},{__name:"GridModule",getName:function(){return this.__name},init:function(a){var b=this;this._sandbox=a;a.printDebug("Initializing grid module...");a.registerForEventByName(this,"AfterWfsGetFeaturesJsonFlowForTableFormatEvent");a.registerForEventByName(this,"AfterMapLayerRemoveEvent");a.registerForEventByName(this,"AfterHighlightMapLayerEvent");a.registerForEventByName(this,"AfterDimMapLayerEvent");a.registerForEventByName(this,"AfterMapMoveEvent");a.registerForEventByName(this,"AfterHighlightWFSFeatureRowEvent");this._service=this._sandbox.getService("Oskari.mapframework.service.OgcSearchService");this.noFoundFeaturesError=a.getText("grid_module_not_found_info_for_selected_area");this.notInScaleError=a.getText("grid_module_wfs_maplayer_not_visible_this_scale");this.loadingText=a.getText("grid_module_loading_info");this._msgPanel=Ext.create("Ext.panel.Panel",{id:"grid-msg-tab",border:true,layout:"fit",frame:false,split:false,loadMask:false,title:a.getText("grid_module_gridpanel_no_title"),containerScroll:false});this._mainPanel=Ext.create("Ext.panel.Panel",{id:"grid-module",border:true,layout:"fit",frame:false,split:false,title:a.getText("grid_module_gridpanel_no_title"),containerScroll:true});this._customTooltip=Ext.create("Ext.tip.ToolTip",{autoHide:false});return this._mainPanel},start:function(a){a.printDebug("Starting "+this.getName())},stop:function(a){},_findInList:function(c,a){var d=-1;for(var b=0;b<c.length;++b){if(c[b]==a){return b}}return d},_cleanUp:function(){this._mainPanel.suspendLayout=true;if(this._currentData){for(var a in this._currentData){if(a.grid){a.grid.suspendLayout=true;this._tabPanel.remove(a.grid);a.grid.destroy();a.grid=null;this._currentData[a]=null}}}this._currentData=null;this._currentData={};this._tabPanel.removeAll(false);this._tabPanel.removeAll(true);this._tabPanel.destroy();this._tabPanel=null;this._mainPanel.suspendLayout=false;this._mainPanel.removeAll(true)},getSelectedFeatures:function(a){var c=a;if(!c&&this._tabPanel){c=this._tabPanel.getActiveTab()}if(!c.getSelectionModel){c=null}var d=[];if(c){var e=c.getSelectionModel().getSelection();for(var b=0;b<e.length;++b){d.push(e[b].get("featureId"))}}return d},selectRows:function(e,a){var d=a;if(!d&&this._tabPanel){d=this._tabPanel.getActiveTab()}if(!d.getSelectionModel){d=null}var c=[];if(d){var b=d.getStore();if(e&&e.length>0){index=b.findBy(function(f,j){var h=f.get("featureId");for(var g=0;g<e.length;++g){if(h==e[g]){c.push(f);break}}})}}if(c.length>0){d.getSelectionModel().select(c);d.getView().focusRow(c[0])}else{if(d&&d.getSelectionModel){d.getSelectionModel().deselectAll()}}return c.length},_isValidData:function(b){var d=(b!==null);var c=b.getData();if(c==null||c.headers==null||c.featureDatas==null){d=false}if(d){for(var a=0;a<c.featureDatas.length;a++){if(c.featureDatas[a].children==null){d=false;break}}}return d},showMessage:function(b){if(b){for(var a=0;a<this._tabPanel.items.items.length;a++){if(this._tabPanel.items.items[a].getStore){this._tabPanel.items.items[a].getStore().removeAll()}}if(this._tabPanel.items.items.length==0||!this._isInScale()){this._tabPanel.add(this._msgPanel)}this._msgPanel.update('<div style="margin:5px;">'+b+"</div>");this._tabPanel.setActiveTab(this._msgPanel)}else{this._tabPanel.remove(this._msgPanel,false)}},_initUiComponents:function(j){this._sandbox.printDebug("["+this.getName()+"] Grid model changed");var h=this;var l=[];l.push("mapframeworkFeatureTitle");for(var e=0;e<j.length;e++){var q=j[e]["feature_fi"];var p=this._parseAndInitFeatureDataModel(j[e]);this._currentData[q]={};this._currentData[q].feature=p;var o=this._createFeatureGrid(p);this._currentData[q].grid=o;this._tabPanel.add(o);for(var f=0;f<p.modelAttributes.length;f++){var g=p.modelAttributes[f];var b=this._findInList(l,g);if(b!==-1){}else{l.push(g)}}}var c="GridAllTabsModel-"+Ext.id();
Ext.define(c,{extend:"Ext.data.Model",fields:l});var m=Ext.create("Ext.data.Store",{model:c});var a=[];for(var f=0;f<l.length;f++){var k=l[f];var n=false;if(k=="featureId"||k=="qName"){n=true}var d={dataIndex:""+k+"",text:""+k+"",hidden:n,sortable:true,renderer:function(u,t,i,w,s,v,r){return h._customRenderer(u,t,i,w,s,v,r)}};if(k==="mapframeworkFeatureTitle"){d.text=this._sandbox.getText("grid_module_feature_type_title");d.width=200}a.push(d)}this._allDataGrid=Ext.create("Ext.grid.Panel",{id:"grid-all",multiSelect:true,store:m,loadMask:false,title:this._sandbox.getText("grid_module_all_tab_title"),trackMouseOver:false,autoScroll:true,viewConfig:{stripeRows:true,deferEmptyText:false,emptyText:h.noFoundFeaturesError},columns:a,listeners:{itemclick:function(s,i,t,r,u){h._sendUpdatedSelectionEvent()},cellClick:function(u,r,t,i,s,x,w,v){h._cellClicked(u,r,t,i,s,x,w,v)}}});this._tabPanel.add(this._allDataGrid);this._tabPanel.setActiveTab(0);this._initialized=true},_handleAfterWfsGetFeaturesJsonFlowForTableFormatEvent:function(d){this._mainPanel.setLoading(false);if(d.getData().wfsQueryId){var a=parseInt(d.getData().wfsQueryId);if(a<this._latestResponseId){this._sandbox.printDebug("["+this.getName()+"] Grid data response got old data. Current: "+this._latestResponseId+", got: "+a);return}this._latestResponseId=a}this._sandbox.request(this,this._sandbox.getRequestBuilder("ActionReadyRequest")("WFS_GRID",false));if(!this._isValidData(d)){this.showMessage(this.noFoundFeaturesError);return}var c=d.getData();if(!this._initialized){this._initUiComponents(c.featureDatas)}var e=this.getSelectedFeatures();this._updateData(d.getData().featureDatas);this.showMessage();var b=this.selectRows(e);if(b>0){this._sendUpdatedSelectionEvent()}},_updateData:function(f){this._sandbox.printDebug("["+this.getName()+"] Grid data changed");var a=[];for(var d=0;d<f.length;d++){var b=f[d];var j=b.feature_fi;var g=this._currentData[j].grid.getStore();g.loadData(b.children.slice(0));for(var e=0;e<b.children.length;e++){var c=b.children[e];c.mapframeworkFeatureTitle=this._currentData[j].feature.title;a.push(c)}}var h=this._allDataGrid.getStore();h.loadData(a)},_parseAndInitFeatureDataModel:function(d){var g=this._sandbox.getLanguage();var e={};e.title=d["feature_"+g];if(!e.title){e.title=d.feature_fi}e.modelAttributes=[];var c=d.children;if(c.length>0){for(var f in c[0]){e.modelAttributes.push(f)}}e.modelName="GridModel."+e.title;var a=false;for(var b=0;b<this._definedModels.length;++b){if(this._definedModels[b]===e.modelName){a=true;break}}if(!a){Ext.define(e.modelName,{extend:"Ext.data.Model",fields:e.modelAttributes});this._definedModels.push(e.modelName)}return e},_createFeatureGrid:function(c){var g=this;var e=[];for(var f=0;f<c.modelAttributes.length;++f){var b=c.modelAttributes[f];var i=false;if(b=="featureId"||b=="qName"){i=true}var d={dataIndex:""+b+"",text:""+b+"",hidden:i,sortable:true,renderer:function(n,m,j,p,l,o,k){return g._customRenderer(n,m,j,p,l,o,k)}};e.push(d)}var h=Ext.create("Ext.data.Store",{model:c.modelName});var a=Ext.create("Ext.grid.Panel",{id:"grid-"+c.title,store:h,displayInfo:false,loadMask:false,title:c.title,multiSelect:true,trackMouseOver:false,autoScroll:true,columns:e,viewConfig:{stripeRows:true,deferEmptyText:false,emptyText:g.noFoundFeaturesError},listeners:{itemclick:function(l,j,m,k,n){g._sendUpdatedSelectionEvent()},cellClick:function(n,k,m,j,l,q,p,o){g._cellClicked(n,k,m,j,l,q,p,o)}}});return a},_cellClicked:function(i,c,o,f,d,l,a,k){var n=i.getGridColumns()[o].dataIndex;var m=f.get(n);var j=typeof m;if(j==="object"){var b="<table cellspacing='5'>";for(var h in m){var e=typeof m[h];var g=m[h];b=b+"<tr><td>"+h+"</td><td>"+m[h]+"</td></tr>"}b=b+"</table>";this._customTooltip.update(b);this._customTooltip.show();this._customTooltip.alignTo(c)}},_customRenderer:function(g,a,c,f,h,i,d){var e=typeof g;if(e!=="object"){return g}else{var b='<img src="'+Oskari.$().startup.imageLocation+'/resource/icons/kysymysmerkki.png" />';return b}},_showDataLoadMessage:function(){if(this._isInScale()){this._mainPanel.setLoading(this.loadingText)
}else{this._mainPanel.setLoading(false);this.showMessage(this.notInScaleError);this._sandbox.request(this,this._sandbox.getRequestBuilder("ActionReadyRequest")("WFS_GRID",false))}},_handleAfterHighlightWFSFeatureRowEvent:function(e){this._mainPanel.setLoading(false);var d=this;var a=e.getWfsFeatureIds();var c=[];if(a.length>0){if(e.isKeepSelection()){c=this.getSelectedFeatures()}for(var b=0;b<a.length;++b){var f=d._arrayContainsValue(c,a[b]);if(!f){c.push(a[b])}else{}}d.selectRows(c)}else{if(!e.isKeepSelection()){d.selectRows(c)}}this._sendUpdatedSelectionEvent()},_arrayContainsValue:function(c,d){var b=c.length;for(var a=0;a<b;a++){if(c[a]==d){return true}}return false},_sendUpdatedSelectionEvent:function(){var o="";var c=this._tabPanel.getActiveTab();if(!c){this._sandbox.printDebug("[grid-module] Tab is not ready.");return}var j=c.getSelectionModel();if(!j){this._sandbox.printDebug("[grid-module] Tab is not ready.");return}var n=c.getSelectionModel().getSelection();if(!n){this._sandbox.printDebug("[grid-module] Tab is not ready.");return}var f=":::";var g=[];for(var e=0;e<n.length;++e){var h=n[e];var d=h.get("featureId");var k=h.get("qName");o+=d+f+k;if(e<n.length-1){o+=","}}var m=this._getSelectedMapLayer();var l=this._sandbox.getRequestBuilder("HighlightWFSFeatureRequest");var a=l(o,m.getId());this._sandbox.request("GridModule",a)},enable:function(a){var b=this;this._tabPanel=Ext.create("Ext.tab.Panel",{id:"grid-module-tab-panel",frame:false,loadMask:false,border:false,autoWidth:true,height:200,defaults:{layout:"fit"},listeners:{tabchange:function(f,g,e){if(!e.getSelectionModel||e.getSelectionModel().getSelection().length==0){return}if(b._allDataGrid==g||b._allDataGrid==e){var d=b.getSelectedFeatures(e);b.selectRows(d,g)}}}});var c=Ext.getCmp("main-app-bottom");if(c&&!c.isVisible()){c.expand()}this._mainPanel.add(this._tabPanel);this._setSelectedMapLayer(a);this._showDataLoadMessage()},disable:function(){this._mainPanel.update("");this._tabPanel.hide();this._mainPanel.setLoading(false);this._service.removeWFSLayerGridRequests(this._selectedLayer);this._mainPanel.setTitle(this._sandbox.getText("grid_module_gridpanel_no_title"));this._cleanUp();this._selectedLayer=null;var a=Ext.getCmp("main-app-bottom");if(a&&a.isVisible()){a.collapse()}},_getSelectedMapLayer:function(){return this._selectedLayer},_setSelectedMapLayer:function(a){this._selectedLayer=a;this._initialized=false;this._mainPanel.setTitle(this._sandbox.getText("grid_module_gridpanel_title",[a.getName()]))},_isActive:function(){if(this._selectedLayer){return true}return false},_isInScale:function(){if(this._isActive()){return this._getSelectedMapLayer().isInScale()}return false},_updateServiceData:function(){if(this._isInScale()){this._service.removeWFSLayerGridRequests(this._selectedLayer);var a=this._sandbox.getMap();this._service.scheduleWFSGridUpdate(this._getSelectedMapLayer(),a.getBbox(),a.getWidth(),a.getHeight(),this.getName())}},onEvent:function(b){if(b.getName()=="AfterHighlightMapLayerEvent"){var a=b.getMapLayer();if(a.isLayerOfType("WFS")){this.enable(a);this._updateServiceData()}}else{if(this._isActive()){if(b.getName()=="AfterWfsGetFeaturesJsonFlowForTableFormatEvent"){if(this._isInScale()){this._handleAfterWfsGetFeaturesJsonFlowForTableFormatEvent(b)}}else{if(b.getName()=="AfterHighlightWFSFeatureRowEvent"){this._handleAfterHighlightWFSFeatureRowEvent(b)}else{if(b.getName()=="AfterMapMoveEvent"){this._showDataLoadMessage();this._updateServiceData()}else{if(b.getName()=="AfterDimMapLayerEvent"||b.getName()=="AfterMapLayerRemoveEvent"){if(this._getSelectedMapLayer().getId()===b.getMapLayer().getId()){this.disable()}}}}}}}}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.bundle.DefaultWFSBundleInstance",function(a){this.name="mapasker";this.mediator=null;this.sandbox=null;this.impl=null;this.ui=null},{start:function(){if(this.mediator.getState()=="started"){return}this.libs={ext:Oskari.$("Ext")};this.facade=Oskari.$("UI.facade");this.impl=Oskari.clazz.create("Oskari.mapframework.ui.module.mapasker.GridModule");
var a=this.facade.appendExtensionModule(this.impl,this.name,this.eventHandlers,this,"S",{fi:{title:"WFS"},sv:{title:"?"},en:{title:""}});this.def=a;this.impl.start(this.facade.getSandbox());this.mediator.setState("started");return this},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.eventHandlers,this,this.def);this.def=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.DefaultWFSBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
var Tooltip=RightJS.Tooltip=function(w,v){function u(b,h){h||(h=b,b="DIV");var g=new v.Class(v.Element.Wrappers[b]||v.Element,{initialize:function(j,i){this.key=j;var a=[{"class":"rui-"+j}];this instanceof v.Input||this instanceof v.Form||a.unshift(b),this.$super.apply(this,a),v.isString(i)&&(i=v.$(i)),i instanceof v.Element&&(this._=i._,"$listeners" in i&&(i.$listeners=i.$listeners),i={}),this.setOptions(i,this);return v.Wrapper.Cache[v.$uid(this._)]=this},setOptions:function(d,e){e&&(d=v.Object.merge(d,(new Function("return "+(e.get("data-"+this.key)||"{}")))())),d&&v.Options.setOptions.call(this,v.Object.merge(this.options,d));return this}}),f=new v.Class(g,h);v.Observer.createShortcuts(f.prototype,f.EVENTS||v([]));return f}var t=v,s=v.$,r=v.$w,q=v.$uid,o=v.Element,n=new u({extend:{version:"2.2.1",EVENTS:r("show hide"),Options:{cssRule:"[data-tooltip]",fxName:"fade",fxDuration:400,delay:400,move:!0,idSuffix:"-tooltip"},current:null,instances:t([]),find:function(e){var d=e.target;if(d.match(n.Options.cssRule)){var f=q(d);return n.instances[f]||(n.instances[f]=new n(d))}}},initialize:function(a,d){this.associate=a=s(a),this.$super("tooltip").setOptions(d,a).insert('<div class="rui-tooltip-arrow"></div><div class="rui-tooltip-container">'+(a.get("title")||a.get("alt"))+"</div>").on({mouseout:this._mouseOut,mouseover:this._cancelTimer}).insertTo(w.body),a.has("id")&&this.set("id",a.get("id")+this.options.idSuffix),a.set({title:"",alt:""})},hide:function(){this._cancelTimer(),this._timer=t(function(){o.prototype.hide.call(this,this.options.fxName,{engine:"javascript",duration:this.options.fxDuration}),n.current=null,this.fire("hide")}).bind(this).delay(100);return this},show:function(b){n.instances.each(function(c){c&&c!==this&&c.hide()},this),this._timer=t(function(){o.prototype.show.call(this.stop(),this.options.fxName,{engine:"javascript",duration:this.options.fxDuration}),n.current=this.fire("show")}).bind(this).delay(this.options.delay);return n.current=this},moveToEvent:function(b){this.options.move&&(this._.style.left=b.pageX+"px",this._.style.top=b.pageY+"px");return this},_cancelTimer:function(){this._timer&&(this._timer.cancel(),this._timer=null);return !1},_mouseOut:function(b){b.stop(),b.relatedTarget!==this.associate&&this.hide()}});s(w).on({mouseenter:function(d){var c=n.find(d);c&&c.show().moveToEvent(d)},mouseleave:function(d){var c=n.find(d);c&&c.hide()},mousemove:function(d){var c=n.current;c!==null&&c.options.move&&c.moveToEvent(d)}});var m=w.createElement("style"),l=w.createTextNode("div.rui-tooltip{display:none;position:absolute;z-index:99999;font-size:90%;margin-top:16pt;margin-left:5pt;color:#FFF;text-shadow:0 0 .2em #000;border:.3em solid rgba(255,255,255,0.2);background-color:rgba(25,25,25,0.92);background-color:#000 \\9;border:.3em solid #444 \\9;background-image:-webkit-gradient(linear,0% 0%,0% 100%,from(transparent) ,to(#000) );border-radius:.4em;-moz-border-radius:.4em;-webkit-border-radius:.4em;box-shadow:0 0 .4em #555;-moz-box-shadow:0 0 .4em #555;-webkit-box-shadow:0 0 .4em #555}div.rui-tooltip-container{margin:.4em .6em}");m.type="text/css",w.getElementsByTagName("head")[0].appendChild(m),m.styleSheet?m.styleSheet.cssText=l.nodeValue:m.appendChild(l);return n}(document,RightJS);Oskari.clazz.define("Oskari.mapframework.bundle.layerselector2.LayerSelectorBundleInstance",function(){this.sandbox=null;this.started=false;this.plugins={};this.localization=null},{__name:"LayerSelector",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization(this.getName())}if(a){return this._localization[a]}return this._localization},start:function(){var e=this;if(e.started){return}e.started=true;var b=Oskari.$("sandbox");e.sandbox=b;b.register(e);for(p in e.eventHandlers){b.registerForEventByName(e,p)}var d=b.getRequestBuilder("userinterface.AddExtensionRequest")(this);b.request(this,d);e.createUi();var a=this.sandbox.getService("Oskari.mapframework.service.MapLayerService");
b.registerAsStateful(this.mediator.bundleId,this);var c=function(){e.createUi()};var f=function(){alert(e.getLocalization("errors").loadFailed)};a.loadAllLayersAjax(c,f)},init:function(){return null},update:function(){},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{AfterMapLayerRemoveEvent:function(a){this.plugins["Oskari.userinterface.Flyout"].handleLayerSelectionChanged(a.getMapLayer(),false)},AfterMapLayerAddEvent:function(a){this.plugins["Oskari.userinterface.Flyout"].handleLayerSelectionChanged(a.getMapLayer(),true)},MapLayerEvent:function(d){var b=this.sandbox.getService("Oskari.mapframework.service.MapLayerService");var a=d.getLayerId();if(d.getOperation()==="update"){var c=b.findMapLayer(a);this.plugins["Oskari.userinterface.Flyout"].handleLayerModified(c)}else{if(d.getOperation()==="add"){var c=b.findMapLayer(a);this.plugins["Oskari.userinterface.Flyout"].handleLayerAdded(c);this.plugins["Oskari.userinterface.Tile"].refresh()}else{if(d.getOperation()==="remove"){this.plugins["Oskari.userinterface.Flyout"].handleLayerRemoved(a);this.plugins["Oskari.userinterface.Tile"].refresh()}}}}},stop:function(){var a=this.sandbox();for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}var b=a.getRequestBuilder("userinterface.RemoveExtensionRequest")(this);a.request(this,b);this.sandbox.unregisterStateful(this.mediator.bundleId);this.sandbox.unregister(this);this.started=false},startExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=Oskari.clazz.create("Oskari.mapframework.bundle.layerselector2.Flyout",this);this.plugins["Oskari.userinterface.Tile"]=Oskari.clazz.create("Oskari.mapframework.bundle.layerselector2.Tile",this)},stopExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=null;this.plugins["Oskari.userinterface.Tile"]=null},getPlugins:function(){return this.plugins},getTitle:function(){return this.getLocalization("title")},getDescription:function(){return this.getLocalization("desc")},createUi:function(){var a=this;this.plugins["Oskari.userinterface.Flyout"].createUi();this.plugins["Oskari.userinterface.Tile"].refresh()},setState:function(a){this.plugins["Oskari.userinterface.Flyout"].setContentState(a)},getState:function(){return this.plugins["Oskari.userinterface.Flyout"].getContentState()}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.userinterface.Extension"]});Oskari.clazz.define("Oskari.mapframework.bundle.layerselector2.Flyout",function(a){this.instance=a;this.container=null;this.template=null;this.templateLayer=null;this.templateLayerGroup=null;this.templateGroupingTool=null;this.state=null;this.grouping="getInspireName";this.groupingTools=[]},{getName:function(){return"Oskari.mapframework.bundle.layerselector2.Flyout"},setEl:function(c,b,a){this.container=c[0];if(!jQuery(this.container).hasClass("layerselector2")){jQuery(this.container).addClass("layerselector2")}},startPlugin:function(){var a=this;this.template=jQuery('<div class="groupingTabs"><ul></ul></div><br clear="all"/><div class="allLayersTabContent"><div class="filter"><input name="text-filter" type="text" /></div><div class="layerList volatile"></div></div>');this.templateLayer=jQuery('<div class="layer"><input type="checkbox" /> <div class="layer-tools"><div class="layer-icon"></div><div class="layer-info"></div></div><div class="layer-title"></div><div class="layer-keywords"></div></div>');this.templateLayerGroup=jQuery('<div class="layerGroup"><div class="groupHeader"><span class="groupName"></span><span class="layerCount"></span></div></div>');this.groupingTools=[{title:this.instance.getLocalization("filter").inspire,callback:function(){a.doGrouping("getInspireName")}},{title:this.instance.getLocalization("filter").organization,callback:function(){a.doGrouping("getOrganizationName")}}];this.templateGroupingTool=jQuery('<li><a href="JavaScript:void(0);"></a></li>')},stopPlugin:function(){},getTitle:function(){return this.instance.getLocalization("title")},getDescription:function(){return this.instance.getLocalization("desc")
},getOptions:function(){},setState:function(a){this.state=a;console.log("Flyout.setState",this,a)},_teardownContentState:function(){jQuery(this.container).find("div.groupingTabs li").removeClass("active");var a=jQuery(this.container).find("div.layerList div.layerGroup");a.removeClass("open");jQuery(this.container).find("input[name=text-filter]").val("")},setContentState:function(e){this._teardownContentState();if(!e){e={}}if(!e.tab){e.tab=this.groupingTools[0].title}var a=jQuery(this.container).find("div.groupingTabs li:contains("+e.tab+")");a.addClass("active");for(var b=0;b<this.groupingTools.length;++b){var g=this.groupingTools[b];if(g.title==e.tab){g.callback()}}var c=e.filter;if(!c){c=""}jQuery(this.container).find("input[name=text-filter]").val(c);this._filterLayers(e.filter);if(!e.filter&&e.groups){var h=jQuery(this.container).find("div.layerList div.layerGroup");for(var b=0;b<e.groups.length;++b){var g=e.groups[b];var d=h.find("span.groupName:contains("+g+")");if(d){var f=d.parent().parent();f.addClass("open");f.find("div.layer").show()}}}},getContentState:function(){var f=jQuery(this.container).find("input[name=text-filter]").val();var b=[];var e=jQuery(this.container).find("div.layerList div.layerGroup.open");for(var c=0;c<e.length;++c){var d=e[c];b.push(jQuery(d).find(".groupName").text())}var a=jQuery(this.container).find("div.groupingTabs li.active").text();return{tab:a,filter:f,groups:b}},createUi:function(){var e=this;var j=e.instance.getSandbox();var f=jQuery(this.container);f.empty();var d=this.template.clone();f.append(d);var c=f.find("div.groupingTabs ul");this._populateGroupingTools(c);var h=f.find("input[name=text-filter]");h.attr("placeholder",this.instance.getLocalization("filter").text);h.keyup(function(){var k=jQuery(this);var i=k.val();e._filterLayers(i)});var g=f.find("div.layerList");this._populateLayerList(g);var a=j.findAllSelectedMapLayers();for(var b=0;b<a.length;++b){this.handleLayerSelectionChanged(a[b],true)}},_filterLayers:function(a){var b=jQuery("div.layerList div.layerGroup");if(a&&a.length>0){b.show();b.find("div.layer").hide();b.find("div.layer div.layer-keywords:contains("+a.toLowerCase()+")").parent().show();b.each(function(c){var d=jQuery(this);var e=d.find("div.layer").filter(":visible");if(e.length==0){d.removeClass("open");d.hide()}else{if(!d.hasClass("open")){d.addClass("open")}e.removeClass("odd");e.filter(":odd").addClass("odd")}})}else{b.show();b.removeClass("open");b.find("div.layer").hide()}},_layerListComparator:function(d,c){var f=d[this.grouping]().toLowerCase();var e=c[this.grouping]().toLowerCase();if(f==e){f=d.getName().toLowerCase();e=c.getName().toLowerCase()}if(f<e){return -1}if(f>e){return 1}return 0},_populateLayerList:function(k){var j=this;var l=this.instance.getSandbox();k.empty();var e=l.getService("Oskari.mapframework.service.MapLayerService");var c=e.getAllLayers();c.sort(function(q,n){return j._layerListComparator(q,n)});var b=null;var m=null;var h=0;var o=true;for(var a=0;a<c.length;++a){var f=c[a];var i=this._createLayerContainer(f);var d=f[this.grouping]();if(m!=d){if(b){b.find("span.layerCount").html(" ("+h+")")}b=this._createLayerGroupContainer(d);k.append(b);m=d;h=0;o=true}if(o){i.addClass("odd")}o=!o;b.append(i);h++}if(b){b.find("span.layerCount").html(" ("+h+")");var g=jQuery(this.container).find("input[name=text-filter]").val();j._filterLayers(g)}},doGrouping:function(a){this.grouping=a;var b=jQuery(this.container).find("div.layerList");this._populateLayerList(b)},_populateGroupingTools:function(e){var d=this;for(var c=0;c<this.groupingTools.length;++c){var b=this.groupingTools[c];var a=this.templateGroupingTool.clone();if(c==0){a.addClass("active")}a.find("a").html(b.title);e.append(a);a.bind("click",function(){var f=jQuery(this);var g=f.index();d.groupingTools[g].callback();f.closest("ul").find("li").removeClass("active");f.addClass("active")})}},_createLayerGroupContainer:function(e){var d=this;var b=d.instance.getSandbox();var a=this.templateLayerGroup.clone();var c=jQuery(a).find("div.groupHeader");c.find("span.groupName").append(e);c.click(function(){var h=jQuery(this).parent();
var f=h.hasClass("open");if(f){h.removeClass("open");h.find("div.layer").hide()}else{h.addClass("open");var g=jQuery(d.container).find("input[name=text-filter]").val();if(g){h.find("div.layer div.layer-keywords:contains("+g.toLowerCase()+")").parent().show()}else{var i=h.find("div.layer");i.removeClass("odd");i.filter(":odd").addClass("odd");i.show()}}});return a},_createLayerContainer:function(e){var g=this;var i=g.instance.getSandbox();var a=i.getRequestBuilder("AddMapLayerRequest");var b=i.getRequestBuilder("RemoveMapLayerRequest");var j=this.templateLayer.clone();var c=jQuery(j).find(".layer-keywords");c.append(e.getName().toLowerCase());c.append(" "+e.getInspireName().toLowerCase());c.append(" "+e.getOrganizationName().toLowerCase());c.hide();var f=this.instance.getLocalization("tooltip");var d=jQuery(j).find("div.layer-tools");var h=d.find("div.layer-icon");if(e.isBaseLayer()){h.addClass("layer-base");h.attr("title",f["type-base"])}else{if(e.isLayerOfType("WMS")){if(e.isGroupLayer()){h.addClass("layer-group")}else{h.addClass("layer-wms")}h.attr("title",f["type-wms"])}else{if(e.isLayerOfType("WMTS")){h.addClass("layer-wmts");h.attr("title",f["type-wms"])}else{if(e.isLayerOfType("WFS")){h.addClass("layer-wfs");h.attr("title",f["type-wfs"])}else{if(e.isLayerOfType("VECTOR")){h.addClass("layer-vector");h.attr("title",f["type-wms"])}}}}}if(e.getDataUrl()){d.find("div.layer-info").addClass("icon-info");d.find("div.layer-info").click(function(){alert("TODO: send ShowOverlayPopupRequest with "+e.getDataUrl())})}jQuery(j).attr("layer_id",e.getId());jQuery(j).find(".layer-title").append(e.getName());jQuery(j).find("input").change(function(){var l=jQuery(this);var k=null;if(l.is(":checked")){k=a(e.getId(),true)}else{k=b(e.getId())}i.request(g.instance.getName(),k)});return j},handleLayerSelectionChanged:function(c,b){var a=jQuery(this.container).find("div[layer_id="+c.getId()+"]");a.find("input").attr("checked",(b==true))},handleLayerModified:function(b){var c=this;var a=jQuery(this.container).find("div[layer_id="+b.getId()+"]");jQuery(a).find(".layer-title").html(b.getName())},handleLayerAdded:function(a){var c=this;var b=jQuery(this.container).find("div.layerList");this._populateLayerList(b)},handleLayerRemoved:function(a){var c=this;var b=jQuery(this.container).find("div.layerList");this._populateLayerList(b)}},{protocol:["Oskari.userinterface.Flyout"]});Oskari.clazz.define("Oskari.mapframework.bundle.layerselector2.Tile",function(a){this.instance=a;this.container=null;this.template=null;this.badge=Oskari.clazz.create("Oskari.userinterface.component.Badge")},{getName:function(){return"Oskari.mapframework.bundle.layerselector2.Tile"},setEl:function(d,c,a){this.container=jQuery(d);var b=this.container.children(".oskari-tile-status");this.badge.insertTo(b)},startPlugin:function(){this.refresh()},stopPlugin:function(){this.container.empty()},getTitle:function(){return this.instance.getLocalization("title")},getDescription:function(){return this.instance.getLocalization("desc")},getOptions:function(){},setState:function(a){console.log("Tile.setState",this,a)},refresh:function(){var f=this;var a=f.instance;var e=this.container;var d=this.template;var c=a.getSandbox();var b=c.getService("Oskari.mapframework.service.MapLayerService");var g=b.getAllLayers();this.badge.setContent(""+g.length)}},{protocol:["Oskari.userinterface.Tile"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.ui.module.layerselector.AllLayersModule",function(){this.sandbox=null;var a=Oskari.$("startup");this.conf=a;this.stores={};this.items={};this.selected={};this.scale=null;this.refreshTools=null;this.refreshLayerNames=null},{__name:"AllLayersModule",getName:function(){return this.__name},refresh:function(){this.items.grid.getView().refresh()},init:function(a){this.sandbox=a;a.printDebug("[AllLayersModule] Initializing all layers module...");this.scale=a.getMap().getScale();for(var c in this.eventHandlers){a.registerForEventByName(this,c)}this.createModels();this.createStores();var b=this.createUI();this.updateCurrentState();return b},updateCurrentState:function(){var b=this.sandbox;var e=b.findAllSelectedMapLayers();for(var d=0;d<e.length;d++){var c=e[d];var a=c.getId();this.selected[a]=c;b.printDebug("[AllLayersModule] preselecting "+a)}},createModels:function(){if(!Ext.ClassManager.get("MapLayer")){var a=["id","type","name","inspire","orgName","dataUrl","minScale","maxScale","orderNumber"];Ext.define("MapLayer",{extend:"Ext.data.Model",fields:a})}},getLayersData:function(){var e=this;var b=e.sandbox.getService("Oskari.mapframework.service.MapLayerService");var f=b.getAllLayers();var a=new Array();for(var d=0;d<f.length;d++){var c=Ext.create("MapLayer",{id:f[d].getId(),name:f[d].getName(),inspire:f[d].getInspireName(),orgName:f[d].getOrganizationName(),dataUrl:f[d].getDataUrl(),minScale:f[d].getMinScale(),maxScale:f[d].getMaxScale(),orderNumber:f[d].getOrderNumber()});if(f[d].isBaseLayer()){c.set("type","base")}else{if(f[d].isLayerOfType("WMS")){if(f[d].isGroupLayer()){c.set("type","group")}else{c.set("type","wmslayer")}}else{if(f[d].isLayerOfType("WMTS")){c.set("type","wmtslayer")}else{if(f[d].isLayerOfType("WFS")){c.set("type","wfslayer")}else{if(f[d].isLayerOfType("VECTOR")){c.set("type","vector")}}}}}a.push(c)}return a},createStores:function(){var b=this.getLayersData();var a=Ext.create("Ext.data.Store",{model:"MapLayer",autoLoad:true,groupField:"inspire",data:[b]});this.regStore("allLayersStore",a)},regStore:function(b,a){this.stores[b]=a},getStore:function(a){return this.stores[a]},createUI:function(){var m=this;var e=m.sandbox.getLanguage();function p(r,s,t){return'<div id="layerName_'+t.get("id")+'">'+n(r,t)+"</div>"}function n(r,t){var s=t.get("minScale");var u=t.get("maxScale");if(m.scale>u&&m.scale<s){return r}else{return'<span style="color: #c0c0c0;">'+r+"</span>"}}function c(s,t,r){return'<div id="layerTools_'+r.get("id")+'">'+j(r)+"</div>"}Ext.QuickTips.init();function j(s){var v="/framework/bundle/layerselector/images/taso.png";var u="mapservice_maplayer_image_tooltip";if(s.get("type")=="wfslayer"){v="/framework/bundle/layerselector/images/database.png";u="selected_layers_module_wfs_icon_tooltip"}else{if(s.get("type")=="group"){v="/framework/bundle/layerselector/images/group.png";u="mapservice_basemap_image_tooltip"}else{if(s.get("type")=="base"){v="/framework/bundle/layerselector/images/pino.png";u="mapservice_basemap_image_tooltip"}}}var t='<img src="'+Oskari.$().startup.imageLocation+v+'" style="vertical-align: top;" data-qtip="'+m.sandbox.getText(u)+'"/> ';var r=s.get("id");if(isNaN(r)){r="'"+r+"'"}if(m.selected[s.get("id")]){t=t+'<a href="#" onclick="Oskari.$().sandbox.requestByName(\''+m.getName()+"', 'RemoveMapLayerRequest',["+r+']);return false;" data-qtip="'+m.sandbox.getText("mapservice_layer_delete_title")+'"><img src="'+Oskari.$().startup.imageLocation+'/framework/bundle/layerselector/images/poisto.png" height="15" /></a>'}else{if("base"==s.get("type")){t=t+'<a href="#" onclick="Oskari.$().sandbox.requestByName(\''+m.getName()+"', 'AddMapLayerRequest',["+r+',false]);return false;" data-qtip="'+m.sandbox.getText("leftpanel_add_layer")+'"><img src="'+Oskari.$().startup.imageLocation+'/framework/bundle/layerselector/images/lisays_vihrea.png" height="15" alt="add"/></a>'}else{t=t+'<a href="#" onclick="Oskari.$().sandbox.requestByName(\''+m.getName()+"', 'AddMapLayerRequest',["+r+',true]);return false;" data-qtip="'+m.sandbox.getText("leftpanel_add_layer")+'"><img src="'+Oskari.$().startup.imageLocation+'/framework/bundle/layerselector/images/lisays_vihrea.png" height="15" alt="add" /></a>'
}}var w=s.get("dataUrl");if(w){t=t+' <a href="#" onclick="Oskari.$().sandbox.requestByName(\''+m.getName()+"', 'ShowOverlayPopupRequest',['"+w+'\']);return false;" data-qtip="'+m.sandbox.getText("mapservice_layer_show_info_title")+'"><img src="'+Oskari.$().startup.imageLocation+'/framework/bundle/layerselector/images/kysymysmerkki.png" height="15"/></a>'}return t}function b(s){var t=m.getStore("allLayersStore").findBy(function(v){return v.get("id")==s});var r=m.getStore("allLayersStore").getAt(t);var u=Ext.get("layerTools_"+s);if(u){u.update(j(r))}}m.refreshTools=b;function i(){m.getStore("allLayersStore").each(function(s){var r=Ext.get("layerName_"+s.get("id"));if(r){var t=s.get("name");r.update(n(t,s))}})}m.refreshLayerNames=i;var l="Nimi";if(e=="sv"){l="Namn"}else{if(e=="en"){l="Name"}}var h=[{header:"Actions",width:64,renderer:c},{header:l,dataIndex:"name",flex:1,renderer:p}];var o=this.sandbox;var q=Ext.create("Ext.form.TextField",{height:25,emptyText:m.sandbox.getText("leftpanel_find_maplayers_value"),margin:0,padding:0,listeners:{focus:function(r){Oskari.$().sandbox.request(m.getName(),Oskari.$().sandbox.getRequestBuilder("DisableMapKeyboardMovementRequest")())},blur:function(r){Oskari.$().sandbox.request(m.getName(),Oskari.$().sandbox.getRequestBuilder("EnableMapKeyboardMovementRequest")())},change:{fn:k,scope:this,buffer:100}}});this.items.searchtf=q;var g=Ext.create("Ext.grid.feature.Grouping",{groupHeaderTpl:"{name} ({rows.length})",startCollapsed:true});var a=Ext.create("Ext.grid.Panel",{flex:1,margin:0,padding:0,hideHeaders:true,store:m.getStore("allLayersStore"),viewConfig:{stripeRows:true},features:[g],columns:h});a.getStore().sort([{property:"inspire",direction:"ASC"},{property:"orderNumber",direction:"ASC"}]);this.items.grid=a;var d=Ext.createWidget("tabpanel",{flex:1,activeTab:0,defaults:{bodyPadding:0},listeners:{tabchange:function(t,u,s,r){s.removeAll(false);a.getStore().clearGrouping();a.getStore().group(u.getId());a.getStore().sort([{property:u.getId(),transform:function(v){return v.toLowerCase()},direction:"ASC"},{property:"orderNumber",direction:"ASC"}]);u.add(a)}},items:[{title:m.sandbox.getText("leftpanel_thema_title"),id:"inspire",layout:"fit",items:a},{title:m.sandbox.getText("leftpanel_organisation_title"),id:"orgName",layout:"fit"}]});function k(){var s=q.getValue();var r=(s!="");g.startCollapsed=true;m.getStore("allLayersStore").clearFilter(r);if(r){g.startCollapsed=false;m.getStore("allLayersStore").filterBy(function(t,x){var w=t.get("name");var u=t.get("orgName");var v=new RegExp(s,"gi");if(v.test(w)||v.test(u)){return true}})}}var f=Ext.create("Ext.panel.Panel",{bodyPadding:0,margin:0,id:"AllLayersModule",padding:0,layout:{type:"vbox",padding:0,align:"stretch"},items:[q,d]});return f},start:function(a){a.printDebug("[AllLayersModule] Starting "+this.getName())},stop:function(a){},checkLayerScales:function(a){},afterMapLayerAddEvent:function(c){var a=c.getMapLayer();var b=this;b.selected[a.getId()]=a;this.refreshTools(a.getId())},afterMapLayerRemoveEvent:function(c){var a=c.getMapLayer();var b=this;b.selected[a.getId()]=undefined;this.refreshTools(a.getId())},afterMapMoveEvent:function(b){var a=b.getScale();if(a==this.scale||!a){return}this.scale=a;this.refreshLayerNames()},handleMapLayerChange:function(a){var h=this;if(a.getOperation()==="update"){var e=this.sandbox.getService("Oskari.mapframework.service.MapLayerService");var c=a.getLayerId();var f=e.findMapLayer(c);var b=f.getName();var i=h.getStore("allLayersStore");var d=i.getById(c);d.set("name",b)}else{var g=this.getLayersData();h.getStore("allLayersStore").loadData(g)}},eventHandlers:{AfterMapLayerAddEvent:function(a){this.afterMapLayerAddEvent(a)},AfterMapLayerRemoveEvent:function(a){this.afterMapLayerRemoveEvent(a)},AfterMapMoveEvent:function(a){this.afterMapMoveEvent(a)},MapLayerEvent:function(a){this.handleMapLayerChange(a)}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.bundle.DefaultLayerSelectorBundleInstance",function(a){this.name="layerselector";
this.mediator=null;this.sandbox=null;this.impl=null;this.ui=null},{createPanel:function(){var b=this;var a=Ext.create("Ext.Panel",{region:"center",layout:"fit",height:384,items:[]});return a},start:function(){if(this.mediator.getState()=="started"){return}var b=this;b.facade=Oskari.$("UI.facade");b.impl=Oskari.clazz.create("Oskari.mapframework.ui.module.layerselector.AllLayersModule");var a=this.createPanel();var c=b.facade.appendExtensionModule(b.impl,b.name,{},b,"E",{fi:{title:"Kaikki tasot"},sv:{title:"?"},en:{title:"Map Layers"}},a);b.def=c;a.add(c.initialisedComponent);b.impl.start(this.facade.getSandbox());b.mediator.setState("started");return this},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.impl.eventHandlers,this,this.def);this.def=null;this.impl=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.DefaultLayerSelectorBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.layerselection2.LayerSelectionBundleInstance",function(){this.sandbox=null;this.started=false;this.plugins={};this.localization=null},{__name:"LayerSelection",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},getLocalization:function(a){if(!this._localization){this._localization=Oskari.getLocalization(this.getName())}if(a){return this._localization[a]}return this._localization},start:function(){var c=this;if(c.started){return}c.started=true;var a=Oskari.$("sandbox");c.sandbox=a;this.localization=Oskari.getLocalization(this.getName());a.register(c);for(p in c.eventHandlers){a.registerForEventByName(c,p)}var b=a.getRequestBuilder("userinterface.AddExtensionRequest")(this);a.request(this,b);c.createUi()},init:function(){return null},update:function(){},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])},eventHandlers:{AfterMapLayerRemoveEvent:function(a){this.plugins["Oskari.userinterface.Tile"].refresh();this.plugins["Oskari.userinterface.Flyout"].handleLayerSelectionChanged(a.getMapLayer(),false)},AfterMapLayerAddEvent:function(a){this.plugins["Oskari.userinterface.Tile"].refresh();this.plugins["Oskari.userinterface.Flyout"].handleLayerSelectionChanged(a.getMapLayer(),true,a.getKeepLayersOrder())},MapLayerEvent:function(d){var b=this.sandbox.getService("Oskari.mapframework.service.MapLayerService");var a=d.getLayerId();if(d.getOperation()==="update"){var c=b.findMapLayer(a);this.plugins["Oskari.userinterface.Flyout"].handleLayerModified(c)}},MapLayerVisibilityChangedEvent:function(a){this.plugins["Oskari.userinterface.Flyout"].handleLayerVisibilityChanged(a.getMapLayer(),a.isInScale(),a.isGeometryMatch())},AfterChangeMapLayerOpacityEvent:function(a){if(a._creator!=this.getName()){this.plugins["Oskari.userinterface.Flyout"].handleLayerOpacityChanged(a.getMapLayer())}},AfterChangeMapLayerStyleEvent:function(a){if(a._creator!=this.getName()){this.plugins["Oskari.userinterface.Flyout"].handleLayerStyleChanged(a.getMapLayer())}}},stop:function(){var a=this.sandbox();for(p in this.eventHandlers){a.unregisterFromEventByName(this,p)}var b=a.getRequestBuilder("userinterface.RemoveExtensionRequest")(this);a.request(this,b);this.sandbox.unregister(this);this.started=false},startExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=Oskari.clazz.create("Oskari.mapframework.bundle.layerselection2.Flyout",this);this.plugins["Oskari.userinterface.Tile"]=Oskari.clazz.create("Oskari.mapframework.bundle.layerselection2.Tile",this)},stopExtension:function(){this.plugins["Oskari.userinterface.Flyout"]=null;this.plugins["Oskari.userinterface.Tile"]=null},getPlugins:function(){return this.plugins},getTitle:function(){return this.getLocalization("title")},getDescription:function(){return this.getLocalization("desc")},createUi:function(){var a=this;this.plugins["Oskari.userinterface.Flyout"].createUi();this.plugins["Oskari.userinterface.Tile"].refresh()}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.userinterface.Extension"]});Oskari.clazz.define("Oskari.mapframework.bundle.layerselection2.Flyout",function(a){this.instance=a;this.container=null;this.state=null;this.template=null;this.templateLayer=null;this.templateLayerTools=null;this.templateLayerOutOfScale=null;this.templateLayerOutOfContentArea=null;this.sortableBinded=false;this._sliders={}},{getName:function(){return"Oskari.mapframework.bundle.layerselection2.Flyout"},setEl:function(c,b,a){this.container=c[0];if(!jQuery(this.container).hasClass("layerselection2")){jQuery(this.container).addClass("layerselection2")}},startPlugin:function(){var a=this.instance.getLocalization("layer");this.template=jQuery('<ul class="selectedLayersList sortable" data-sortable=\'{itemCss: "li.layer.selected", handleCss: "div.layer-title" }\'></ul>');this.templateLayer=jQuery('<li class="layer selected"><div class="layer-info"><div class="layer-icon"></div><div class="layer-tool-remove"></div><div class="layer-title"><h4></h4></div></div><div class="stylesel"><label for="style">'+a.style+'</label><select name="style"></select></div><div class="layer-tools volatile"></div></li>');
this.templateLayerFooterTools=jQuery('<div class="left-tools"><div class="layer-visibility"><a href="JavaScript:void(0);">'+a.hide+'</a>&nbsp;<span class="temphidden" style="display: none;">'+a.hidden+'</span></div><div class="layer-opacity"><div class="layout-slider" id="layout-slider"></div> <div class="opacity-slider" style="display:inline-block"><input type="text" name="opacity-slider" class="opacity-slider opacity" id="opacity-slider" />%</div></div></div><div class="right-tools"><div class="layer-description"><div class="wrapper"></div></div><div class="layer-rights"></div><a href="JavaScript:void(0);"><div class="icon-info"></div></a></div>');this.templateLayerFooterHidden=jQuery('<p class="layer-msg"><a href="JavaScript:void(0);">'+a.show+"</a> "+a.hidden+"</p>");this.templateLayerFooterOutOfScale=jQuery('<p class="layer-msg">'+a["out-of-scale"]+' <a href="JavaScript:void(0);">'+a["move-to-scale"]+"</a></p>");this.templateLayerFooterOutOfContentArea=jQuery('<p class="layer-msg">'+a["out-of-content-area"]+' <a href="JavaScript:void(0);">'+a["move-to-content-area"]+"</a></p>")},stopPlugin:function(){},getTitle:function(){return this.instance.getLocalization("title")},getDescription:function(){return this.instance.getLocalization("desc")},getOptions:function(){},setState:function(a){this.state=a;console.log("Flyout.setState",this,a)},createUi:function(){var h=this;var b=jQuery(this.container);b.empty();var f=this.template.clone();b.append(f);var i=h.instance.getSandbox();var d=i.findAllSelectedMapLayers();var c=i.getMap().getScale();for(var a=d.length-1;a>=0;--a){var e=d[a];var g=this._createLayerContainer(e);f.append(g);this._appendLayerFooter(g,e,e.isInScale(c),true)}if(!this.sortableBinded){this.sortableBinded=true;".selectedLayersList".on("finish",function(j){h._layerOrderChanged(j.index)})}},_appendLayerFooter:function(a,b,d,c){var e=a.find("div.layer-tools");if(!b.isVisible()){a.addClass("hidden");e.append(this._createLayerFooterHidden(b))}else{if(!d){a.addClass("out-of-scale");e.append(this._createLayerFooterOutOfScale(b))}else{if(!c){a.addClass("out-of-content");e.append(this._createLayerFooterOutOfContentArea(b))}else{e.append(this._createLayerFooter(b,a));this._addSlider(b)}}}},_addSlider:function(a){var c=this;var b=c._sliders[a.getId()];if(!b){var b=new Slider({min:0,max:100});b.setStyle({"background-color":"transparent","background-image":'url("../../resources/framework/bundle/layerselection2/images/opacity_slider.png")',height:"5px",width:"150px",border:"0",margin:0});b.level.hide();b.handle.setStyle({"background-color":"transparent","background-image":'url("../../resources/framework/bundle/layerselection2/images/opacity_index.png")',width:"15px",height:"15px",border:"0","margin-left":0});b.on("change",function(d){c._layerOpacityChanged(a,d.value)});c._sliders[a.getId()]=b}b.setValue(a.getOpacity());if(jQuery("#layout-slider-"+a.getId()).length>0){b.insertTo("layout-slider-"+a.getId());b.assignTo("opacity-slider-"+a.getId())}},_layerOrderChanged:function(c){var d=jQuery(this.container).find(".selectedLayersList li");var f=jQuery(d[c]).attr("layer_id");if(c>-1){c=(d.length-1)-c;var a=this.instance.getSandbox();var b=a.getRequestBuilder("RearrangeSelectedMapLayerRequest");var e=b(f,c);a.request(this.instance.getName(),e)}},_createLayerContainer:function(f){var j=this;var n=j.instance.getSandbox();var a=n.getRequestBuilder("ChangeMapLayerOpacityRequest");var d=f.getId();var m=f.getOpacity();var q=this.templateLayer.clone();q.attr("layer_id",d);q.find("div.layer-title h4").append(f.getName());q.find("div.layer-title").append(f.getDescription());var l=q.find("div.stylesel");l.hide();if(f.getStyles&&f.getStyles().size>1){var g=false;var o=f.getStyles();var c=l.find("select");for(var e=0;e<o.size();e++){if(o[e].getName()){var b=jQuery('<option value="'+o[e].getName()+'">'+o[e].getTitle()+"</option>");c.append(b);g=true}}c.change(function(s){var t=c.find("option:selected").val();f.selectStyle(t);var i=n.getRequestBuilder("ChangeMapLayerStyleRequest");var r=i(f.getId(),t);n.request(j.instance.getName(),r)});if(g){c.val(f.getCurrentStyle().getName());
l.show()}}var h=this.instance.getLocalization("layer").tooltip;var k=q.find("div.layer-icon");if(f.isBaseLayer()){k.addClass("layer-base");k.attr("title",h["type-base"])}else{if(f.isLayerOfType("WMS")){if(f.isGroupLayer()){k.addClass("layer-group")}else{k.addClass("layer-wms")}k.attr("title",h["type-wms"])}else{if(f.isLayerOfType("WMTS")){k.addClass("layer-wmts");k.attr("title",h["type-wms"])}else{if(f.isLayerOfType("WFS")){k.addClass("layer-wfs");k.attr("title",h["type-wfs"])}else{if(f.isLayerOfType("VECTOR")){k.addClass("layer-vector");k.attr("title",h["type-wms"])}}}}}q.find("div.layer-tool-remove").addClass("icon-close");q.find("div.layer-tool-remove").bind("click",function(){var i=n.getRequestBuilder("RemoveMapLayerRequest");var r=i(f.getId());n.request(j.instance.getName(),r)});return q},handleLayerVisibilityChanged:function(c,g,f){var d=this;var b=d.instance.getSandbox();var a=jQuery(this.container).find("li.layer.selected[layer_id="+c.getId()+"]");var e=this.instance.getLocalization("layer");var h=a.find("div.layer-tools");h.empty();a.removeClass("hidden");a.removeClass("out-of-scale");a.removeClass("out-of-content");this._appendLayerFooter(a,c,g,f)},_layerOpacityChanged:function(c,e){var b=this.instance.getSandbox();var f=b.getRequestBuilder("ChangeMapLayerOpacityRequest");var d=f(c.getId(),e);b.request(this.instance.getName(),d);var a=jQuery(this.container).find("li.layer.selected[layer_id="+c.getId()+"]");a.find("div.layer-opacity input.opacity").attr("value",c.getOpacity())},handleLayerOpacityChanged:function(a){this._addSlider(a)},handleLayerStyleChanged:function(c){var a=jQuery(this.container).find("li.layer.selected[layer_id="+c.getId()+"]");var b=a.find("div.stylesel select");b.val(c.getCurrentStyle().getName())},_createLayerFooterOutOfScale:function(b){var c=this;var a=c.instance.getSandbox();var d=this.templateLayerFooterOutOfScale.clone();var e=a.getRequestBuilder("MapModulePlugin.MapMoveByLayerContentRequest");d.find("a").bind("click",function(){var f=e(b.getId());a.request(c.instance.getName(),f)});return d},_createLayerFooterHidden:function(c){var d=this;var a=d.instance.getSandbox();var e=this.templateLayerFooterHidden.clone();var b=a.getRequestBuilder("MapModulePlugin.MapLayerVisibilityRequest");e.find("a").bind("click",function(){var f=b(c.getId(),true);a.request(d.instance.getName(),f)});return e},_createLayerFooterOutOfContentArea:function(b){var c=this;var a=c.instance.getSandbox();var d=this.templateLayerFooterOutOfContentArea.clone();var e=a.getRequestBuilder("MapModulePlugin.MapMoveByLayerContentRequest");d.find("a").bind("click",function(){var f=e(b.getId());a.request(c.instance.getName(),f)});return d},_createLayerFooter:function(f,j){var h=this;var i=h.instance.getSandbox();var e=this.templateLayerFooterTools.clone();var g=this.instance.getLocalization("layer");var d=i.getRequestBuilder("MapModulePlugin.MapLayerVisibilityRequest");e.find("div.layer-visibility a").bind("click",function(){var k=d(f.getId(),false);i.request(h.instance.getName(),k)});var c=f.getPermission("publish");if(!i.getUser().isLoggedIn()){if(c=="can_be_published"){e.find("div.layer-rights").html(g.rights["login-url"]);e.find("div.layer-rights").attr("title",g.rights["need-login"])}else{e.find("div.layer-rights").html(g.rights.no_publication_permission.label);e.find("div.layer-rights").attr("title",g.rights.no_publication_permission.tooltip)}}else{e.find("div.layer-rights").html(g.rights[c].label);e.find("div.layer-rights").attr("title",g.rights[c].tooltip)}if(!f.getDataUrl()){e.find("div.layer-description").hide()}else{e.find("div.layer-description a").attr("href",f.getDataUrl());e.find("div.layer-description a").attr("target","_blank")}var a=e.find("div.layout-slider");a.attr("id","layout-slider-"+f.getId());var b=e.find("input.opacity-slider");b.attr("id","opacity-slider-"+f.getId());return e},handleLayerSelectionChanged:function(d,a,b){if(a==true){var f=this;var j=f.instance.getSandbox();var c=j.getMap().getScale();var e=jQuery("ul.selectedLayersList");var g=this._createLayerContainer(d);var i=g.find("div.layer-tools");
if(!d.isVisible()){g.addClass("hidden");i.append(this._createLayerFooterHidden(d))}else{if(!d.isInScale(c)){g.addClass("out-of-scale");i.append(this._createLayerFooterOutOfScale(d))}else{i.append(this._createLayerFooter(d,g))}}var h=[];if(d.isBaseLayer()&&b!=true){h=e.find("li[layer_id^=base_]")}else{h=e.find(".layer.selected")}if(h.length>0){h.first().before(g)}else{e.append(g)}}else{var k=jQuery(this.container).find("li[layer_id="+d.getId()+"]");if(k){k.remove()}}},handleLayerModified:function(b){var c=this;var a=jQuery(this.container).find("li[layer_id="+b.getId()+"]");jQuery(a).find(".layer-title h4").html(b.getName())}},{protocol:["Oskari.userinterface.Flyout"]});Oskari.clazz.define("Oskari.mapframework.bundle.layerselection2.Tile",function(a){this.instance=a;this.container=null;this.template=null;this.badge=Oskari.clazz.create("Oskari.userinterface.component.Badge");this.shownLayerCount=null},{getName:function(){return"Oskari.mapframework.bundle.layerselection2.Tile"},setEl:function(d,c,a){this.container=jQuery(d);var b=this.container.children(".oskari-tile-status");this.badge.insertTo(b)},startPlugin:function(){this.refresh()},stopPlugin:function(){this.container.empty()},getTitle:function(){return this.instance.getLocalization("title")},getDescription:function(){return this.instance.getLocalization("desc")},getOptions:function(){},setState:function(a){console.log("Tile.setState",this,a)},refresh:function(){var e=this;var a=e.instance;var d=this.container;var c=this.template;var b=a.getSandbox();var g=b.findAllSelectedMapLayers();var f=g.length;if(this.shownLayerCount&&this.shownLayerCount){this.badge.setContent(""+f,"important")}else{this.badge.setContent(""+f)}this.shownLayerCount=f}},{protocol:["Oskari.userinterface.Tile"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.ui.module.layerselector.SelectedLayersModule",function(a){this._core;this._sandbox;this._publisherWizardStepNumber=a;this._layerPortal=null;this._layerOrder=null;this._items={layerItems:{}};this.loc={};this._scale=null},{getName:function(){return"SelectedLayersModule"},isPublisherWizardStep:function(a){if(this._publisherWizardStepNumber==a){return true}else{return false}},init:function(b){this._sandbox=b;b.printDebug("Initializing selected layers module...");for(p in this.eventHandlers){b.registerForEventByName(this,p)}this.createLocale();var a=this.createUI();this.updateCurrentState();return a},start:function(a){a.printDebug("Starting "+this.getName())},stop:function(a){},createLocale:function(){var a=this._sandbox;this.loc={leftpanel_selected_layers_title:a.getText("leftpanel_selected_layers_title"),leftpanel_style:a.getText("leftpanel_style"),mapservice_select_layer_style:a.getText("mapservice_select_layer_style"),mapservice_basemap_image_tooltip:a.getText("mapservice_basemap_image_tooltip"),mapservice_layer_delete_title:a.getText("mapservice_layer_delete_title"),mapservice_maplayer_image_tooltip:a.getText("mapservice_maplayer_image_tooltip"),mapservice_layer_show_info_title:a.getText("mapservice_layer_show_info_title"),selected_layers_module_published_basemaps_title:a.getText("selected_layers_module_published_basemaps_title"),selected_layers_module_published_maps_title:a.getText("selected_layers_module_published_maps_title"),selected_layers_module_wfs_icon_tooltip:a.getText("selected_layers_module_wfs_icon_tooltip"),selected_layers_module_vector_icon_tooltip:a.getText("selected_layers_module_vector_icon_tooltip"),selected_layers_module_highlight_wms_layer:a.getText("selected_layers_module_highlight_wms_layer"),selected_layers_module_highlight_wfs_layer:a.getText("selected_layers_module_highlight_wfs_layer"),selected_layers_module_highlight_wfs_layer:a.getText("selected_layers_module_highlight_wfs_layer")}},updateCurrentState:function(){var b=this._sandbox;var e=this;var f=b.findAllSelectedMapLayers();for(var d=0;d<f.length;d++){var c=f[d];var a=c.getId();b.printDebug("preselecting "+a);e.addMapLayerToSelection(a,c,true)}},createUI:function(){var b=this._sandbox;var f=this;var d=f.loc.leftpanel_selected_layers_title;if(this.isPublisherWizardStep(1)){d=f.loc.selected_layers_module_published_basemaps_title}else{if(this.isPublisherWizardStep(2)){d=f.loc.selected_layers_module_published_maps_title}}var e=Ext.create("Ext.app.PortalColumn",{id:"selectedLayersTab",autoWidth:true,autoScroll:false});this._items.selectedLayersTab=e;var a=Ext.create("Ext.app.PortalPanel",{id:"groupPanel",title:d,autoScroll:true,items:[e]});this._layerPortal=a;a.on("drop",function(h){var g=h.panel._layerId;f.updateLayerOrder(g)});a.on("beforedrop",function(){f.buildLayerOrder()});a.on("validatedrop",function(g){g.status=g.panel._layerId?true:false});var c=Ext.create("Ext.tab.Panel",{id:"selectedLayersTabPanel",layout:"fit",anchor:"100%, 50%",frame:false,border:false,autoScroll:false,items:[a]});this._items.selectedLayerPanel=c;return c},buildLayerOrder:function(){var b={};var c=this;var a=c._layerPortal;var d=Ext.ComponentQuery.query("portlet",a);Ext.Array.each(d,function(h,g,e){var f=h._layerId;b[f]=g});this._layerOrder=b},updateLayerOrder:function(d){var g=this;var f=this._layerPortal;var k=this._layerOrder;var b=Ext.ComponentQuery.query("portlet",f);var h={};Ext.Array.each(b,function(o,m,l){var n=o._layerId;h[n]=m});for(p in h){var a=p;if(d!=a){continue}var e=h[a];var j=k[a];if(j==e){continue}var i=b.length-e-1;var c=g._sandbox.getRequestBuilder("RearrangeSelectedMapLayerRequest")(d,i);g._sandbox.request(g.getName(),c);break}},getNewSelectedLayersInsidePanel:function(b,h,d,a,e){var g=this;var c=null;var i=new Array();var f=Ext.create("Ext.Panel",{id:"leftpanel-selected-layers-controls_basic_"+a,layout:{type:"hbox",align:"stretch",pack:"start"},baseCls:"",border:true,defaults:{padding:"5 5 0 5",baseCls:"",border:true},items:[{items:b},{items:h,flex:1},{items:e}]});i.push(f);if(d!=null){var j=Ext.create("Ext.Panel",{id:"leftpanel-selected-layers-controls_style_"+a,layout:{type:"hbox",align:"stretch",pack:"start"},baseCls:"",border:true,width:"100%",defaults:{padding:"0 5 0 5",baseCls:"",border:true},items:[{html:g.loc.leftpanel_style},{items:d,flex:1}]});
i.push(j)}c=Ext.create("Ext.Panel",{id:"leftpanel-selected-layers-controls_"+a,layout:{type:"vbox",align:"stretch",pack:"start"},cls:"leftpanel-selected-layers-controls",border:false,height:32*i.length,defaults:{padding:"0 5 0 5",flex:1},items:i});return c},getOpacityLabel:function(b,c){var a=Ext.create("Ext.form.Label",{text:b+"%"});return a},getOpacitySlider:function(c,g,d,a){var f=false;if(this.isPublisherWizardStep(1)||this.isPublisherWizardStep(2)){f=true}var b=this;var e=null;if(f==false){e={change:function(j,i){var h=b._sandbox;h.request("SelectedLayersModule",h.getRequestBuilder("ChangeMapLayerOpacityRequest")(g,this.getValue()));a.setText(this.getValue()+"%")}}}else{e={change:function(i,h){a.setText(this.getValue()+"%")},changecomplete:function(j,i){var h=b._sandbox;h.request("SelectedLayersModule",h.getRequestBuilder("ChangeMapLayerOpacityRequest")(g,this.getValue()))}}}return Ext.create("Ext.slider.Single",{width:100,minValue:0,maxValue:100,animate:true,value:c,listeners:e})},getNewSelectedLayersPanel:function(c,i){var a=c.getName();var b=c.getId();var h=c.isBaseLayer();var f=null;var e=this;var d=[];var g=null;if(h){g="layer_type_stack"}else{if(c.isGroupLayer&&c.isGroupLayer()){g="layer_type_group"}else{if(c.hasLegendImage&&c.hasLegendImage()){d.push({baseCls:"custom-tool",type:"gear",tooltip:e.loc.mapservice_layer_show_info_title,handler:function(){e._sandbox.requestByName("SelectedLayersModule","ShowMapLayerInfoRequest",[b])}})}if(c.isLayerOfType("WMS")){g="layer_type_wms"}else{if(c.isLayerOfType("WFS")){g="layer_type_wfs"}else{if(c.isLayerOfType("VECTOR")){g="layer_type_vector"}else{g="layer_type_wms"}}}}}if(c.getDataUrl()){d.push({type:"search",baseCls:"custom-tool",qtip:e.loc.mapservice_layer_show_info_title,handler:function(){e._sandbox.requestByName("SelectedLayersModule","ShowOverlayPopupRequest",[c.getDataUrl()])}})}d.push({type:"close",baseCls:"custom-tool",tooltip:e.loc.mapservice_layer_delete_title,handler:function(){e._sandbox.requestByName("SelectedLayersModule","RemoveMapLayerRequest",[b])}});f=Ext.create("Ext.app.Portlet",{_layerId:b,collapsible:false,id:"selectedLayer-"+b,iconCls:g,scroll:false,tools:d,title:e._layerNameRenderer(a),layout:"fit",items:i,frame:false,border:false,closable:false});return f},_layerNameRenderer:function(e){var c=this;if(!c._items.selectedLayerPanel.getVisibilityEl()){return e}var f=this._stringWidth(e);var d=e;var g=false;var b=110;var a=c._items.selectedLayerPanel.getWidth()-b;while(f>110&&f>a){g=true;d=d.substring(0,d.length-3);f=this._stringWidth(d)}if(g){d=d+"..."}return'<span data-qtip="'+e+'" style="width: 40px;overflow: hidden;">'+d+"</span>"},_stringWidth:function(d){var b="12px arial",c=jQuery("<div>"+d+"</div>").css({position:"absolute","float":"left",visibility:"hidden",font:b}).appendTo(jQuery("body")),a=c.width();c.remove();return a},getStyleCombo:function(b,e,f){var a=this._sandbox;var d=this;var c=Ext.create("Ext.form.ComboBox",{id:"layer-style_"+f,ctCls:"mapservice-combostyle",store:b,mode:"local",triggerAction:"all",emptyText:d.loc.mapservice_select_layer_style,hideLabel:true,autoSelect:true,editable:false,width:"100%",listeners:{select:function(h,i){var k=i[0].index;var g=e[k];var j=f;a.request("SelectedLayersModule",a.getRequestBuilder("ChangeMapLayerStyleRequest")(j,g))}}});return c},afterMapLayerAddEvent:function(c){var b=c.getMapLayer();var a=b.getId();var d=c.getKeepLayersOrder();this.addMapLayerToSelection(a,b,d);this.checkLayerScales()},addMapLayerToSelection:function(h,w,c){var v=this;var o={};this._items.layerItems[h]=o;var q=null;var g=null;var n=null;if(w.isBaseLayer()){g=this.getOpacityLabel(w.getOpacity(),h);q=this.getOpacitySlider(w.getOpacity(),h,true,g)}else{g=this.getOpacityLabel(w.getOpacity(),h);q=this.getOpacitySlider(w.getOpacity(),h,false,g)}o.slider=q;o.label=g;var k=false;if(this.isPublisherWizardStep(1)||this.isPublisherWizardStep(2)){k=true}var t=null;if(!w.isBaseLayer()&&w.getStyles&&!k){var e=w.getStyles();var j=new Array();var u=new Array();for(var s=0;s<w.getStyles().length;s++){j.push(w.getStyles()[s].getTitle());u.push(w.getStyles()[s].getName())
}if(u.length>1&&j.length>1){t=this.getStyleCombo(j,u,w.getId());if(w.getCurrentStyle()!=null&&w.getCurrentStyle()!=""&&w.getCurrentStyle().getName()!=""){var d=u.indexOf(w.getCurrentStyle().getName());var f=j[d];t.setValue(f)}else{var d=0;var f=j[d];t.setValue(f)}}}o.styleCombo=t;var r=false;if(w.isFeatureInfoEnabled){r=w.isFeatureInfoEnabled()}if(r&&!this.isPublisherWizardStep(1)){n=this.createHighlighButtonAndAttachHighlightHandlerForLayer(w)}o.buttonGetFeatures=n;var m=this.getNewSelectedLayersInsidePanel(q,g,t,w.getId(),n);o.chkPanel=m;var l=this.getNewSelectedLayersPanel(w,m);o.panel=l;var b=v._items.selectedLayersTab;if(b){if(w.isBaseLayer()){var a=b.items.length+1;if(c){b.insert(0,l)}else{b.insert(a,l)}}else{b.insert(0,l)}this._layerPortal.doLayout()}},createHighlighButtonAndAttachHighlightHandlerForLayer:function(c){var e=this;var b=e._sandbox;var d=c.getId();var a=null;var f=null;if(c.isLayerOfType("WMS")){a="wms-maplayer";f=e.loc.selected_layers_module_highlight_wms_layer}else{if(c.isLayerOfType("WFS")){a="wfs-maplayer";f=e.loc.selected_layers_module_highlight_wfs_layer}else{if(c.isLayerOfType("VECTOR")){a="wfs-maplayer";f=e.loc.selected_layers_module_highlight_wfs_layer}else{a="wms-maplayer";f=""}}}return Ext.create("Ext.Button",{iconCls:a,cls:"x-btn-icon",width:35,height:20,scale:"large",enableToggle:true,toggleGroup:"layerHighlightButtonGroup",tooltip:f,handler:function(){var g=b.isMapLayerHighLighted(d);if(g){b.request("SelectedLayersModule",b.getRequestBuilder("DimMapLayerRequest")(d))}else{b.request("SelectedLayersModule",b.getRequestBuilder("HighlightMapLayerRequest")(d))}}})},afterMapLayerRemoveEvent:function(b){var a=b.getMapLayer().getId();this.removeMapLayerFromSelection(a)},removeMapLayerFromSelection:function(a){var c=this._items.layerItems[a];var b=c.panel;c.panel=null;c.slider=null;c.label=null;c.buttonGetFeatures=null;b.destroy();this._items.layerItems[a]=null;this._layerPortal.doLayout()},checkLayerScales:function(){var b=this._scale=this._sandbox.getMap().getScale();var j=this._sandbox;var h=this._items.layerItems;var d=j.findAllSelectedMapLayers();for(var e=0;e<d.length;e++){var f=d[e];var c=f.getId();if(f.isBaseLayer()){continue}if(b>f.getMaxScale()&&b<f.getMinScale()){var g=h[c];var a=g.panel;if(a!=null){a.removeCls("layertree-scale-not-in-range")}}else{var g=h[c];var a=g.panel;if(a!=null){a.addCls("layertree-scale-not-in-range")}}}},afterChangeMapLayerOpacityEvent:function(e){var a=e.getMapLayer();var c=this._items.layerItems;var b=c[a.getId()];var d=b.slider;d.setValue(a.getOpacity())},afterChangeMapLayerStyleEvent:function(f){var a=f.getMapLayer();var e=this._items.layerItems;var c=e[a.getId()];var b=c.styleCombo;var d=f.getMapLayer().getCurrentStyle();if(b&&d){b.setValue(d)}},handleAfterHighlightMapLayerEvent:function(f){var c=f.getMapLayer();var a=this._sandbox;var e=this._items.layerItems;var d=e[c.getId()];var b=d.panel;b.addCls("higlighted");d.chkPanel.addCls("higlighted-panel-content")},handleAfterDimMapLayerEvent:function(f){var c=f.getMapLayer();var a=this._sandbox;var e=this._items.layerItems;var d=e[c.getId()];var b=d.panel;b.removeCls("higlighted");d.chkPanel.removeCls("higlighted-panel-content");if(d.buttonGetFeatures){d.buttonGetFeatures.toggle(false)}},handleMapLayerChange:function(h){var g=this;if(h.getOperation()==="update"){var b=h.getLayerId();var f=this._items.layerItems;var d=f[b];if(!d){return}var a=this._sandbox.getService("Oskari.mapframework.service.MapLayerService");var e=a.findMapLayer(b);var c=e.getName();d.panel.setTitle(this._layerNameRenderer(c))}},eventHandlers:{AfterMapLayerAddEvent:function(a){this.afterMapLayerAddEvent(a)},AfterMapLayerRemoveEvent:function(a){this.afterMapLayerRemoveEvent(a)},AfterMapMoveEvent:function(a){this.checkLayerScales()},AfterChangeMapLayerOpacityEvent:function(a){if(this._sandbox.getObjectCreator(a)!=this.getName()){this.afterChangeMapLayerOpacityEvent(a)}},AfterChangeMapLayerStyleEvent:function(a){if(this._sandbox.getObjectCreator(a)!=this.getName()){this.afterChangeMapLayerStyleEvent(a)}},AfterHighlightMapLayerEvent:function(a){this.handleAfterHighlightMapLayerEvent(a)
},AfterDimMapLayerEvent:function(a){this.handleAfterDimMapLayerEvent(a)},ToolSelectedEvent:function(b){var a=this._sandbox;var c=this._sandbox.findAllHighlightedLayers();if(c&&c.length>0){a.request("SelectedLayersModule",a.getRequestBuilder("DimMapLayerRequest")(c[0].getId()))}},MapLayerEvent:function(a){this.handleMapLayerChange(a)}},onEvent:function(b){var a=this.eventHandlers[b.getName()];if(!a){return}return a.apply(this,[b])}},{protocol:["Oskari.mapframework.module.Module"]});Oskari.clazz.define("Oskari.mapframework.bundle.DefaultLayerSelectionBundleInstance",function(a){this.name="layerselection";this.mediator=null;this.sandbox=null;this.impl=null;this.ui=null},{createPanel:function(){var b=this;var a=Ext.create("Ext.Panel",{region:"center",layout:"fit",height:512,border:false,items:[]});return a},start:function(){if(this.mediator.getState()=="started"){return}var b=this;b.facade=Oskari.$("UI.facade");b.impl=Oskari.clazz.create("Oskari.mapframework.ui.module.layerselector.SelectedLayersModule");var a=b.createPanel();var c=b.facade.appendExtensionModule(b.impl,b.name,{},b,"NW",{fi:{title:"Valitut karttatasot"},sv:{title:"?"},en:{title:"Map Layers"}},a);b.def=c;a.add(c.initialisedComponent);b.impl.start(b.facade.getSandbox());b.mediator.setState("started");return this},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.impl.stop();this.facade.removeExtensionModule(this.impl,this.name,this.impl.eventHandlers,this);this.impl=null;this.mediator.setState("stopped");return this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.DefaultLayerSelectionBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.request.common.AfterAddExternalMapLayerEvent",function(b,a,c){this._creator=null;this._mapLayerId=b;this._spec=a;this._layer=c},{__name:"AfterAddExternalMapLayerEvent",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId},getSpec:function(){return this._spec},getLayer:function(){return this._layer}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.request.common.AfterRemoveExternalMapLayerEvent",function(a){this._creator=null;this._mapLayerId=a},{__name:"AfterRemoveExternalMapLayerEvent",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.request.common.AddExternalMapLayerRequest",function(b,a,c){this._creator=null;this._mapLayerId=b;this._spec=a;this._sldSpec=c},{__name:"AddExternalMapLayerRequest",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId},getSpec:function(){return this._spec},getSLDSpec:function(){return this._sldSpec}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.request.common.RemoveExternalMapLayerRequest",function(a){this._creator=null;this._mapLayerId=a},{__name:"RemoveExternalMapLayerRequest",getName:function(){return this.__name},getMapLayerId:function(){return this._mapLayerId}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.AddExternalMapLayerHandler",function(a){this.sandbox=a},{handleRequest:function(b,g){var d=g.getMapLayerId();var c=g.getSpec();var h=[c];b.createMapLayerDomain({layers:h});var a=b.getService("Oskari.mapframework.service.MapLayerService");var e=a.findMapLayer(d);this.sandbox.printDebug("###!!### Added Layer Spec @AddExternalMapLayerHandler");var f=this.sandbox.getEventBuilder("AfterAddExternalMapLayerEvent")(d,c,e);this.sandbox.notifyAll(f)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.RemoveExternalMapLayerHandler",function(a){this.sandbox=a},{handleRequest:function(a,d){var b=d.getMapLayerId();this.sandbox.printDebug("###!!### Leaving Layer Spec "+b+" TO core._allAvailableLaeyrs FIXIT! / @RemoveExternalMapLayerHandler");var c=this.sandbox.getEventBuilder("AfterRemoveExternalMapLayerEvent")(b);this.sandbox.notifyAll(c)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.LayerHandlerBundleInstance",function(a){this.name="layerhandlerModule";this.mediator=null;this.sandbox=null},{start:function(){if(this.mediator.getState()=="started"){return}var a=Oskari.$("sandbox");this.sandbox=a;this.handlers={addExternalMapLayer:Oskari.clazz.create("Oskari.mapframework.bundle.AddExternalMapLayerHandler",a),removeExternalMapLayer:Oskari.clazz.create("Oskari.mapframework.bundle.RemoveExternalMapLayerHandler",a)};this.sandbox.addRequestHandler("AddExternalMapLayerRequest",this.handlers.addExternalMapLayer);this.sandbox.addRequestHandler("RemoveExternalMapLayerRequest",this.handlers.removeExternalMapLayer);this.mediator.setState("started");return this},init:function(a){this.sandbox=a;return null},update:function(d,a,c,e){d.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+e)},stop:function(){this.sandbox.removeRequestHandler("AddExternalMapLayerRequest",this.handlers.addExternalMapLayer);this.sandbox.removeRequestHandler("RemoveExternalMapLayerRequest",this.handlers.removeExternalMapLayer);this.sandbox=null;this.mediator.setState("stopped");return this},onEvent:function(a){return this.eventHandlers[a.getName()].apply(this,[a])},eventHandlers:{AfterMapMoveEvent:function(a){var c=a.getCenterY();var b=a.getCenterX();this.ui.updateLocationInfo(c,b);this.mediator.manager.alert("AfterMapMoveEvent "+c+","+b+" @Oskari.mapframework.bundle.LayerHandlerBundleInstance "+a.getName())}},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.LayerHandlerBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.mapframework.bundle.extension.Extension","Oskari.mapframework.bundle.extension.EventListener"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.bundle.infobox.InfoBoxBundleInstance",function(){this.sandbox=null;this.started=false;this.mediator=null},{__name:"Infobox",getName:function(){return this.__name},setSandbox:function(a){this.sandbox=a},getSandbox:function(){return this.sandbox},update:function(){},start:function(){var b=this;if(b.started){return}b.started=true;var a=Oskari.$("sandbox");a.register(b);b.setSandbox(a);for(var c in b.eventHandlers){if(c){a.registerForEventByName(b,c)}}var d=a.findRegisteredModuleInstance("MainMapModule");d.registerPlugin(this.popupPlugin);d.startPlugin(this.popupPlugin);a.addRequestHandler("InfoBox.ShowInfoBoxRequest",this.requestHandlers.showInfoHandler);a.addRequestHandler("InfoBox.HideInfoBoxRequest",this.requestHandlers.hideInfoHandler)},init:function(){var a=this;this.popupPlugin=Oskari.clazz.create("Oskari.mapframework.bundle.infobox.plugin.mapmodule.OpenlayersPopupPlugin");this.requestHandlers={showInfoHandler:Oskari.clazz.create("Oskari.mapframework.bundle.infobox.request.ShowInfoBoxRequestHandler",this.popupPlugin),hideInfoHandler:Oskari.clazz.create("Oskari.mapframework.bundle.infobox.request.HideInfoBoxRequestHandler",this.popupPlugin)};return null},onEvent:function(c){var b=this;var a=b.eventHandlers[c.getName()];if(!a){return}return a.apply(this,[c])},eventHandlers:{},stop:function(){var b=this;var a=b.sandbox();for(var c in b.eventHandlers){if(c){a.unregisterFromEventByName(b,c)}}b.sandbox.unregister(b);b.started=false}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module"]});jQuery.fn.outerHTML=function(a){var b;if(!this.length){return typeof val=="undefined"?this:null}if(!a){return this[0].outerHTML||(b=this.wrap("<div>").parent().html(),this.unwrap(),b)}jQuery.each(this,function(d,e){var g,f=e,c=e.outerHTML?"outerHTML":"innerHTML";if(!e.outerHTML){e=jQuery(e).wrap("<div>").parent()[0]}if(jQuery.isFunction(a)){if((g=a.call(f,d,e[c]))!==false){e[c]=g}}else{e[c]=a}if(!e.outerHTML){jQuery(e).children().unwrap()}});return this};Oskari.clazz.define("Oskari.mapframework.bundle.infobox.plugin.mapmodule.OpenlayersPopupPlugin",function(){this.mapModule=null;this.pluginName=null;this._sandbox=null;this._map=null;this._popups={}},{__name:"OpenLayersPopupPlugin",getName:function(){return this.pluginName},getMapModule:function(){return this.mapModule},setMapModule:function(a){this.mapModule=a;this._map=a.getMap();this.pluginName=a.getName()+this.__name},init:function(){var a=this;this._arrow=jQuery('<div class="popupHeaderArrow"></div>');this._header=jQuery('<div class="popupHeader"></div>');this._contentDiv=jQuery('<div class="popupContent"></div>');this._contentWrapper=jQuery('<div class="contentWrapper"></div>');this._actionLink=jQuery('<span class="infoboxActionLinks"><a href="#"></a></span>');this._contentSeparator=jQuery('<hr class="infoboxLine">')},popup:function(k,t,j,d){var q=this;var b=this._arrow.clone();var o=this._header.clone();var l=this._contentDiv.clone();o.append(t);for(var p=0;p<j.length;p++){if(p!=0){l.append(this._contentSeparator.clone())}var e=j[p].html;var f=this._contentWrapper.clone();f.append(e);var m=j[p].actions;for(var s in m){var n=s;var h=m[s];var g=this._actionLink.clone();var c=g.find("a");c.attr("contentdata",p);c.append(n);f.append(g)}l.append(f)}var r=this.getMapModule().getMap();var a=new OpenLayers.Popup(k,new OpenLayers.LonLat(d.lon,d.lat),new OpenLayers.Size(400,200),b.outerHTML()+o.outerHTML()+l.outerHTML(),false);a.setBackgroundColor("transparent");this._popups[k]=a;jQuery(a.div).css("overflow","");jQuery(a.groupDiv).css("overflow","");a.events.un({click:a.onclick,scope:a});a.events.on({click:function(u){var w=jQuery(u.originalTarget);var v=w.attr("contentdata");var x=w.html();if(j[v]&&j[v].actions&&j[v].actions[x]){j[v].actions[x]()}},scope:a});r.addPopup(a)},close:function(b){if(!b){for(var a in this._popups){this._popups[a].destroy();delete this._popups[a]}return}this._popups[b].destroy();delete this._popups[b]},register:function(){},unregister:function(){},startPlugin:function(a){this._sandbox=a;a.register(this)
},stopPlugin:function(a){a.unregister(this);this._map=null;this._sandbox=null},start:function(a){},stop:function(a){}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]});Oskari.clazz.define("Oskari.mapframework.bundle.infobox.request.ShowInfoBoxRequest",function(e,d,c,a,b){this._creator=null;this._id=e;this._title=d;this._content=c;this._position=a;this._hidePrevious=(b==true)},{__name:"InfoBox.ShowInfoBoxRequest",getName:function(){return this.__name},getId:function(){return this._id},getTitle:function(){return this._title},getContent:function(){return this._content},getPosition:function(){return this._position},getHidePrevious:function(){return this._hidePrevious}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.infobox.request.ShowInfoBoxRequestHandler",function(a){this.popupPlugin=a},{handleRequest:function(a,b){if(b.getHidePrevious()){this.popupPlugin.close()}this.popupPlugin.popup(b.getId(),b.getTitle(),b.getContent(),b.getPosition())}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.mapframework.bundle.infobox.request.HideInfoBoxRequest",function(a){this._creator=null;this._id=a},{__name:"InfoBox.HideInfoBoxRequest",getName:function(){return this.__name},getId:function(){return this._id}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.mapframework.bundle.infobox.request.HideInfoBoxRequestHandler",function(a){this.popupPlugin=a},{handleRequest:function(a,b){this.popupPlugin.close(b.getId())}},{protocol:["Oskari.mapframework.core.RequestHandler"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.event.common.AfterRearrangeSelectedMapLayerEvent",function(b,a,c){this._creator=null;this._movedMapLayer=b;this._fromPosition=a;this._toPosition=c},{__name:"AfterRearrangeSelectedMapLayerEvent",getName:function(){return this.__name},getMovedMapLayer:function(){return this._movedMapLayer},getFromPosition:function(){return this._fromPosition},getToPosition:function(){return this._toPosition}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterChangeMapLayerOpacityEvent",function(a){this._creator=null;this._mapLayer=a},{__name:"AfterChangeMapLayerOpacityEvent",getName:function(){return this.__name},getMapLayer:function(){return this._mapLayer}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterChangeMapLayerStyleEvent",function(a){this._creator=null;this._mapLayer=a},{__name:"AfterChangeMapLayerStyleEvent",getName:function(){return this.__name},getMapLayer:function(){return this._mapLayer}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterHighlightMapLayerEvent",function(a){this._creator=null;this._mapLayer=a},{__name:"AfterHighlightMapLayerEvent",getName:function(){return this.__name},getMapLayer:function(){return this._mapLayer}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterDimMapLayerEvent",function(a){this._creator=null;this._mapLayer=a},{__name:"AfterDimMapLayerEvent",getName:function(){return this.__name},getMapLayer:function(){return this._mapLayer}},{protocol:["Oskari.mapframework.event.Event"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.event.common.AfterGenerateHtmlLinkToMapEvent",function(a){this._creator=null;this._html=a},{__name:"AfterGenerateHtmlLinkToMapEvent",getName:function(){return this.__name},getHtml:function(){return this._html}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterGenerateHtmlPrintToMapEvent",function(a){this._creator=null;this._html=a},{__name:"AfterGenerateHtmlPrintToMapEvent",getName:function(){return this.__name},getHtml:function(){return this._html}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterStartMapPublisherEvent",function(a){this._creator=null;this._url=a},{__name:"AfterStartMapPublisherEvent",getName:function(){return this.__name},getUrl:function(){return this._url}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterDrawPolygonEvent",function(a){this._creator=null;this._polygon=a},{__name:"AfterDrawPolygonEvent",getName:function(){return this.__name},getPolygon:function(){return this._polygon}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterDrawSelectedPolygonEvent",function(a){this._creator=null;this._polygon=a},{__name:"AfterDrawSelectedPolygonEvent",getName:function(){return this.__name},getPolygon:function(){return this._polygon}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterSelectPolygonEvent",function(b,a){this._creator=null;this._id=b;this._groupId=a},{__name:"AfterSelectPolygonEvent",getName:function(){return this.__name},getId:function(){return this._id},getGroupId:function(){return this._groupId}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterRemovePolygonEvent",function(c,a,b){this._creator=null;this._id=c;this._groupId=a;this._showPol=b},{__name:"AfterRemovePolygonEvent",getName:function(){return this.__name},getId:function(){return this._id},getGroupId:function(){return this._groupId},getShowPol:function(){return this._showPol}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterErasePolygonEvent",function(a){this._creator=null;this._id=a},{__name:"ErasePolygonEvent",getName:function(){return this.__name},getId:function(){return this._id}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterAppendFeatureInfoEvent",function(b,a){this._creator=null;this._header=b;this._message=a},{__name:"AfterAppendFeatureInfoEvent",getName:function(){return this.__name},getHeader:function(){return this._header},getMessage:function(){return this._message}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterUpdateHiddenValueEvent",function(a){this._creator=null;this._polygon=a},{__name:"AfterUpdateHiddenValueEvent",getName:function(){return this.__name},getPolygon:function(){return this._polygon}},{protocol:["Oskari.mapframework.event.Event"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.event.common.FeaturesAvailableEvent",function(a,b,d,c,e){this._creator=null;this._features=b;this._op=e;this._mapLayer=a;this._mimeType=d;this._projCode=c},{__name:"FeaturesAvailableEvent",getName:function(){return this.__name},getFeatures:function(){return this._features},getOp:function(){return this._op},getMapLayer:function(){return this._mapLayer},getMimeType:function(){return this._mimeType},getProjCode:function(){return this._projCode}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.FeaturesGetInfoEvent",function(a,b,e,d,c,f){this._creator=null;this._lon=e;this._lat=d;this._mapLayer=a;this._mapLayers=b;this._projCode=c;this._op=f},{__name:"FeaturesGetInfoEvent",getName:function(){return this.__name},getLon:function(){return this._lon},getLat:function(){return this._lat},getOp:function(){return this._op},getMapLayer:function(){return this._mapLayer},getMapLayers:function(){return this._mapLayers},getProjCode:function(){return this._projCode}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterMapLayerAddEvent",function(b,a,c){this._creator=null;this._mapLayer=b;this._keepLayersOrder=a;if(c){this._isBasemap=c}else{this._isBasemap=false}},{__name:"AfterMapLayerAddEvent",getName:function(){return this.__name},getMapLayer:function(){return this._mapLayer},getKeepLayersOrder:function(){return this._keepLayersOrder},isBasemap:function(){return this._isBasemap}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterMapLayerRemoveEvent",function(a){this._creator=null;this._mapLayer=a},{__name:"AfterMapLayerRemoveEvent",getName:function(){return this.__name},getMapLayer:function(){return this._mapLayer}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterGetFeatureInfoEvent",function(a,b){this._creator=null;this._response=a;this._wfsSelected=b},{__name:"AfterGetFeatureInfoEvent",getName:function(){return this.__name},getResponse:function(){return this._response},isWfsSelected:function(){return this._wfsSelected}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterMapMoveEvent",function(d,c,b,a,e){this._creator=null;this._centerX=d;this._centerY=c;this._zoom=b;this._marker=a;this._scale=e},{__name:"AfterMapMoveEvent",getName:function(){return this.__name},getCreator:function(){return this._creator},getCenterX:function(){return this._centerX},getCenterY:function(){return this._centerY},getZoom:function(){return this._zoom},getMarker:function(){return this._marker},getScale:function(){return this._scale}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.MapMoveStartEvent",function(a,b){this._creator=null;this._x=a;this._y=b},{__name:"MapMoveStartEvent",getName:function(){return this.__name},getX:function(){return this._x},getY:function(){return this._y}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterShowMapLayerInfoEvent",function(a){this._creator=null;this._mapLayer=a},{__name:"AfterShowMapLayerInfoEvent",getName:function(){return this.__name},getMapLayer:function(){return this._mapLayer}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterDisableMapKeyboardMovementEvent",function(){this._creator=null},{__name:"AfterDisableMapKeyboardMovementEvent",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterEnableMapKeyboardMovementEvent",function(){this._creator=null},{__name:"AfterEnableMapKeyboardMovementEvent",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.AfterHideMapMarkerEvent",function(){this._creator=null},{__name:"AfterHideMapMarkerEvent",getName:function(){return this.__name
}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.MouseHoverEvent",function(b,a){this._creator=null;this._lon=b;this._lat=a},{__name:"MouseHoverEvent",getName:function(){return this.__name},getLon:function(){return this._lon},getLat:function(){return this._lat},set:function(b,a){this._lon=b;this._lat=a}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.action.ActionStatusesChangedEvent",function(a){this._creator=null;this._currentlyRunningActionsDescriptions=a},{__name:"ActionStatusesChangedEvent",getName:function(){return this.__name},getCurrentlyRunningActionsDescriptions:function(){return this._currentlyRunningActionsDescriptions}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.common.MapLayerEvent",function(a,b){this._creator=null;this._layerId=a;if(!this.operations[b]){throw"Unknown operation '"+b+"'"}this._operation=b},{__name:"MapLayerEvent",getName:function(){return this.__name},getLayerId:function(){return this._layerId},getOperation:function(){return this._operation},operations:{add:"add",remove:"remove",update:"update"}},{protocol:["Oskari.mapframework.event.Event"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.event.Event",function(){throw"mapframework.event.Event should not be used";this._name=null;this._creator=null},{getName:function(){throw"Running default implementation of Event.getName(). implement your own!"},setCreator:function(a){this._creator=a},getCreator:function(){return this._creator}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.domain.WmsLayer",function(){this._id=null;this._name=null;this._wmsLayerName=null;this._inspireName=null;this._organizationName=null;this._dataUrl=null;this._type=null;this._metaType=null;this._opacity=null;this._featureInfoEnabled=null;this._subLayers=[];this._styles=[];this._description=null;this._wmsUrls=[];this._dataUrl=null;this._legendImage=null;this._maxScale=null;this._minScale=null;this._queryable=null;this._currentStyle=null;this._visible=null;this._queryFormat=null;this._orderNumber=null;this._permissions={};this._geometry=[];this._geometryWKT=null},{setGeometryWKT:function(a){this._geometryWKT=a},getGeometryWKT:function(){return this._geometryWKT},setGeometry:function(a){this._geometry=a},getGeometry:function(){return this._geometry},addPermission:function(b,a){this._permissions[b]=a},removePermission:function(a){this._permissions[a]=null},getPermission:function(a){return this._permissions[a]},setId:function(a){this._id=a},getId:function(){return this._id},setQueryFormat:function(a){this._queryFormat=a},getQueryFormat:function(){return this._queryFormat},setName:function(a){this._name=a},getName:function(){return this._name},setType:function(a){this._type=a},getType:function(){return this._type},setOpacity:function(a){this._opacity=a},getOpacity:function(){return this._opacity},setDataUrl:function(a){this._dataUrl=a},getDataUrl:function(){return this._dataUrl},setOrganizationName:function(a){this._organizationName=a},getOrganizationName:function(){return this._organizationName},setInspireName:function(a){this._inspireName=a},getInspireName:function(){return this._inspireName},setFeatureInfoEnabled:function(a){this._featureInfoEnabled=a},isFeatureInfoEnabled:function(){if(this._featureInfoEnabled===true){return true}return false},setDescription:function(a){this._description=a},getDescription:function(){return this._description},addSubLayer:function(a){this._subLayers.push(a)},getSubLayers:function(){return this._subLayers},setMaxScale:function(a){this._maxScale=a},getMaxScale:function(){return this._maxScale},setMinScale:function(a){this._minScale=a},getMinScale:function(){return this._minScale},setAsBaseLayer:function(){this._type="BASE_LAYER"},setAsNormalLayer:function(){this._type="NORMAL_LAYER"},setOrderNumber:function(a){this._orderNumber=a},getOrderNumber:function(){return this._orderNumber},setLegendImage:function(a){this._legendImage=a},getLegendImage:function(){return this._legendImage},hasLegendImage:function(){if(this._legendImage){return true}else{for(var a=0;a<this._styles.length;++a){if(this._styles[a].getLegend()){return true}}}return false},setQueryable:function(a){this._queryable=a},getQueryable:function(){return this._queryable},addWmsUrl:function(a){this._wmsUrls.push(a)},getWmsUrls:function(){return this._wmsUrls},addStyle:function(a){this._styles.push(a)},getStyles:function(){return this._styles},selectStyle:function(b){var c=null;if(this._styles.length>0){if(b!==""){for(var a=0;a<this._styles.length;a++){c=this._styles[a];if(c.getName()==b){this._currentStyle=c;return}}}else{if(this._styles.length>1){this._currentStyle=this._styles[0]}else{c=Oskari.clazz.create("Oskari.mapframework.domain.Style");c.setName("");c.setTitle("");c.setLegend("");this._currentStyle=c}return}}else{c=Oskari.clazz.create("Oskari.mapframework.domain.Style");c.setName("");c.setTitle("");c.setLegend("");this._currentStyle=c;return}c=Oskari.clazz.create("Oskari.mapframework.domain.Style");c.setName("");c.setTitle("");c.setLegend("");this._currentStyle=c},getCurrentStyle:function(){return this._currentStyle},setWmsName:function(a){this._wmsName=a},getWmsName:function(){return this._wmsName},setMetaType:function(a){this._metaType=a},getMetaType:function(){return this._metaType},setAsGroupLayer:function(){this._type="GROUP_LAYER"},isGroupLayer:function(){return this._type==="GROUP_LAYER"},isBaseLayer:function(){return this._type==="BASE_LAYER"},isVisible:function(){return this._visible===true},setVisible:function(a){this._visible=a},isInScale:function(c){var b=this.isBaseLayer();if(!c){var a=Oskari.$().sandbox;
c=a.getMap().getScale()}if(!this.isBaseLayer()){if(c>this.getMaxScale()&&c<this.getMinScale()){b=true}}return b},isLayerOfType:function(a){return a==="WMS"||a==="wms"}});Oskari.clazz.define("Oskari.mapframework.domain.WfsLayer",function(){this._id=null;this._type=null;this._opacity=null;this._inspireName=null;this._organizationName=null;this._dataUrl=null;this._subLayers=[];this._description=null;this._name=null;this._visible=null;this._maxScale=null;this._minScale=null;this._orderNumber=null;this._featureInfoEnabled=true;this._permissions={};this._geometry=[];this._geometryWKT=null},{setGeometryWKT:function(a){this._geometryWKT=a},getGeometryWKT:function(){return this._geometryWKT},setGeometry:function(a){this._geometry=a},getGeometry:function(){return this._geometry},addPermission:function(b,a){this._permissions[b]=a},removePermission:function(a){this._permissions[a]=null},getPermission:function(a){return this._permissions[a]},setId:function(a){this._id=a},getId:function(){return this._id},setName:function(a){this._name=a},getName:function(){return this._name},setType:function(a){this._type=a},getType:function(){return this._type},setOpacity:function(a){this._opacity=a},getOpacity:function(){return this._opacity},setDataUrl:function(a){this._dataUrl=a},getDataUrl:function(){return this._dataUrl},setOrganizationName:function(a){this._organizationName=a},getOrganizationName:function(){return this._organizationName},setInspireName:function(a){this._inspireName=a},getInspireName:function(){return this._inspireName},setFeatureInfoEnabled:function(a){this._featureInfoEnabled=a},isFeatureInfoEnabled:function(){if(this._featureInfoEnabled===true){return true}return false},setDescription:function(a){this._description=a},getDescription:function(){return this._description},addSubLayer:function(a){this._subLayers.push(a)},getSubLayers:function(){return this._subLayers},setMaxScale:function(a){this._maxScale=a},getMaxScale:function(){return this._maxScale},setMinScale:function(a){this._minScale=a},getMinScale:function(){return this._minScale},setAsBaseLayer:function(){this._type="BASE_LAYER"},setAsNormalLayer:function(){this._type="NORMAL_LAYER"},setOrderNumber:function(a){this._orderNumber=a},getOrderNumber:function(){return this._orderNumber},isBaseLayer:function(){return this._type==="BASE_LAYER"},isInScale:function(c){var b=this.isBaseLayer();if(!c){var a=Oskari.$().sandbox;c=a.getMap().getScale()}if(!this.isBaseLayer()){if(c>this.getMaxScale()&&c<this.getMinScale()){b=true}}return b},isVisible:function(){return this._visible===true},setVisible:function(a){this._visible=a},isLayerOfType:function(a){return a=="WFS"||a=="wfs"}});Oskari.clazz.define("Oskari.mapframework.domain.VectorLayer",function(){this._id=null;this._type=null;this._opacity=null;this._inspireName=null;this._organizationName=null;this._dataUrl=null;this._subLayers=[];this._description=null;this._name=null;this._maxScale=null;this._minScale=null;this._sldspec=null;this._orderNumber=null;this._featureInfoEnabled=true;this._metaType=null;this._permissions={};this._geometry=[];this._geometryWKT=null;this._visible=true},{setGeometryWKT:function(a){this._geometryWKT=a},getGeometryWKT:function(){return this._geometryWKT},setGeometry:function(a){this._geometry=a},getGeometry:function(){return this._geometry},addPermission:function(b,a){this._permissions[b]=a},removePermission:function(a){this._permissions[a]=null},getPermission:function(a){return this._permissions[a]},setId:function(a){this._id=a},getId:function(){return this._id},setName:function(a){this._name=a},getName:function(){return this._name},setType:function(a){this._type=a},getType:function(){return this._type},setOpacity:function(a){this._opacity=a},getOpacity:function(){return this._opacity},setDataUrl:function(a){this._dataUrl=a},getDataUrl:function(){return this._dataUrl},setOrganizationName:function(a){this._organizationName=a},getOrganizationName:function(){return this._organizationName},setInspireName:function(a){this._inspireName=a},getInspireName:function(){return this._inspireName},setFeatureInfoEnabled:function(a){this._featureInfoEnabled=a
},isFeatureInfoEnabled:function(){if(this._featureInfoEnabled===true){return true}return false},setDescription:function(a){this._description=a},getDescription:function(){return this._description},addSubLayer:function(a){this._subLayers.push(a)},getSubLayers:function(){return this._subLayers},setMaxScale:function(a){this._maxScale=a},getMaxScale:function(){return this._maxScale},setMinScale:function(a){this._minScale=a},getMinScale:function(){return this._minScale},setAsBaseLayer:function(){this._type="BASE_LAYER"},setAsNormalLayer:function(){this._type="NORMAL_LAYER"},setOrderNumber:function(a){this._orderNumber=a},getOrderNumber:function(){return this._orderNumber},setStyledLayerDescriptor:function(a){this._sldspec=a},getStyledLayerDescriptor:function(){return this._sldspec},isBaseLayer:function(){if(this._type=="BASE_LAYER"){return true}else{if(this._type=="NORMAL_LAYER"){return false}else{throw"We found a layer that is not a NORMAL_LAYER or a BASE_LAYER. Type '"+this._type+"' is not correct!"}}},isInScale:function(c){var b=this.isBaseLayer();if(!c){var a=Oskari.$().sandbox;c=a.getMap().getScale()}if(!this.isBaseLayer()){if(c>this.getMaxScale()&&c<this.getMinScale()){b=true}}return b},isVisible:function(){return this._visible},setVisible:function(a){this._visible=a},isLayerOfType:function(a){return a=="VECTOR"||a=="vector"},setMetaType:function(a){this._metaType=a},getMetaType:function(){return this._metaType},getStyles:function(){return[]}});Oskari.clazz.define("Oskari.mapframework.domain.Map",function(){this._centerX=null;this._centerY=null;this._zoom=null;this._mousePositionX=null;this._mousePositionY=null;this._mapKeyboardMovementsEnabled=null;this._scale=null;this._bbox=null;this._markerVisible=null;this.width=null;this.height=null;this.resolution=null;this.extent=null;this.maxExtent=null;this._isMoving=false;this.tileQueue=null},{moveTo:function(a,c,b){this._centerX=a;this._centerY=c;this._zoom=b},setMoving:function(a){this._isMoving=a},isMoving:function(){return this._isMoving},getX:function(){return this._centerX},getY:function(){return this._centerY},getZoom:function(){return this._zoom},updateMousePosition:function(a,b){this._mousePositionX=a;this._mousePositionY=b},getMousePositionX:function(){return this._mousePositionX},getMousePositionY:function(){return this._mousePositionY},setMapKeyboardMovementsEnabled:function(a){this._mapKeyboardMovementsEnabled=a},getMapKeyboardMovementsEnabled:function(){return this._mapKeyboardMovementsEnabled},setScale:function(a){this._scale=a},getScale:function(){return this._scale},setBbox:function(a){this._bbox=a},getBbox:function(){return this._bbox},setMarkerVisible:function(a){this._markerVisible=a},isMarkerVisible:function(){if(this._markerVisible==true){return true}return false},setWidth:function(a){this.width=a},getWidth:function(){return this.width},setHeight:function(a){this.height=a},getHeight:function(){return this.height},setResolution:function(a){this.resolution=a},getResolution:function(){return this.resolution},setExtent:function(a){this.extent=a},getExtent:function(){return this.extent},setMaxExtent:function(a){this.maxExtent=a},getMaxExtent:function(){return this.maxExtent},getTileQueue:function(){return this.tileQueue},setTileQueue:function(a){this.tileQueue=a}});Oskari.clazz.define("Oskari.mapframework.domain.Style",function(){this._name=null;this._title=null;this._legend=null},{setName:function(a){this._name=a},getName:function(){return this._name},setTitle:function(a){this._title=a},getTitle:function(){return this._title},setLegend:function(a){this._legend=a},getLegend:function(){return this._legend}});Oskari.clazz.define("Oskari.mapframework.domain.Polygon",function(){this._id=null;this._description=null;this._top=null;this._left=null;this._right=null;this._bottom=null;this._link=null;this._color="#684781";this._display="";this._zoomToExtent=false},{setId:function(a){this._id=a},getId:function(){return this._id},setDescription:function(a){this._description=a},getDescription:function(){return this._description},setTop:function(a){this._top=a},getTop:function(){return this._top
},setLeft:function(a){this._left=a},getLeft:function(){return this._left},setBottom:function(a){this._bottom=a},getBottom:function(){return this._bottom},setRight:function(a){this._right=a},getRight:function(){return this._right},setLink:function(a){this._link=a},getLink:function(){return this._link},setColor:function(a){this._color=a},getColor:function(){return this._color},setDisplay:function(a){this._display=a},getDisplay:function(){return this._display},setZoomToExtent:function(a){this._zoomToExtent=a},getZoomToExtent:function(){return this._zoomToExtent}});Oskari.clazz.define("Oskari.mapframework.domain.Tooltip",function(a,b){this._component=a;this._tooltip=b},{setComponent:function(a){this._component=a},setTooltip:function(a){this._tooltip=a},getComponent:function(){return this._component},getTooltip:function(){return this._tooltip}});Oskari.clazz.define("Oskari.mapframework.domain.WizardOptions",function(){this._wizardName=null;this._wizardId=null;this._wizardHeight=600;this._wizardWidth=800;this._wizardSteps=new Array();this._wizardTooltips=new Array();this._wizardShowProgressBar=true;this._wizardShowCloseConfirm=true;this._wizardCloseConfirmTitleKey="wizard_service_module_confirm_message_title";this._wizardCloseConfirmMessageKey="wizard_service_module_confirm_message"},{getWizardName:function(){return this._wizardName},getWizardId:function(){return this._wizardId},getWizardHeight:function(){return this._wizardHeight},getWizardWidth:function(){return this._wizardWidth},getWizardSteps:function(){return this._wizardSteps},getWizardStep:function(a){return this._wizardSteps[a]},getWizardStepsAmount:function(){return this._wizardSteps.length},getWizardTooltips:function(){return this._wizardTooltips},getWizardShowProgressBar:function(){return this._wizardShowProgressBar},getWizardShowCloseConfirm:function(){return this._wizardShowCloseConfirm},getWizardCloseConfirmMessageKey:function(){return this._wizardCloseConfirmMessageKey},getWizardCloseConfirmTitleKey:function(){return this._wizardCloseConfirmTitleKey},setWizardName:function(a){this._wizardName=a},setWizardId:function(a){this._wizardId=a},setWizardHeight:function(a){this._wizardHeight=a},setWizardWidth:function(a){this._wizardWidth=a},setWizardSteps:function(a){this._wizardSteps=a},addWizardStep:function(a){this._wizardSteps.push(a)},setWizardTooltips:function(a){this._wizardTooltips=a},setWizardShowProgressBar:function(a){this._wizardShowProgressBar=a},setWizardShowCloseConfirm:function(a){this._wizardShowCloseConfirm=a},setWizardCloseConfirmTitleKey:function(a){this._wizardCloseConfirmTitleKey=a},setWizardCloseConfirmMessageKey:function(a){this._wizardCloseConfirmMessageKey=a}});Oskari.clazz.define("Oskari.mapframework.domain.WizardStep",function(f,c,a,g,b,e,d){this.CONTENT_TYPE_HTML="html";this.CONTENT_TYPE_URL="url";this.CONTENT_TYPE_PANEL="panel";this.CONTENT_TYPE_DYNAMIC_PANEL="dynpanel";this._stepTitle=f;this._contentTitle=c;this._contentPage=a;this._contentType=g;this._beforeNextStepFunction=e;this._beforePreviousStepFunction=d;this._actionKeys=b;if(this._beforeNextStepFunction==null||typeof this._beforeNextStepFunction!="function"){this._beforeNextStepFunction=function(){return true}}if(this._beforePreviousStepFunction==null||typeof this._beforePreviousStepFunction!="function"){this._beforePreviousStepFunction=function(){return true}}},{getActionKeys:function(){return this._actionKeys},getStepTitle:function(){return this._stepTitle},getContentTitle:function(){return this._contentTitle},getContentPage:function(){return this._contentPage},getContentType:function(){return this._contentType},getBeforeNextStepFunction:function(){return this._beforeNextStepFunction},getBeforePreviousStepFunction:function(){return this._beforePreviousStepFunction},setStepTitle:function(a){this._stepTitle=a},setContentTitle:function(a){this._contentTitle=a},setContentPage:function(a){this._contentPage=a},setContentType:function(a){this._contentType=a},setBeforeNextStepFunction:function(a){this._beforeNextStepFunction=a},setBeforePreviousStepFunction:function(a){this._beforePreviousStepFunction=a
}});Oskari.clazz.define("Oskari.mapframework.domain.WfsTileRequest",function(b,f,c,e,d,a){this._bbox=f;this._mapWidth=c;this._mapHeight=e;this._mapLayer=b;this._creator=d;this._sequenceNumber=a},{getMapLayer:function(){return this._mapLayer},getBbox:function(){return this._bbox},getMapWidth:function(){return this._mapWidth},getMapHeight:function(){return this._mapHeight},getSequenceNumber:function(){return this._sequenceNumber}});Oskari.clazz.define("Oskari.mapframework.domain.WfsGridScheduledRequest",function(a,e,b,d,c){this._bbox=e;this._mapWidth=b;this._mapHeight=d;this._mapLayer=a;this._creator=c},{getMapLayer:function(){return this._mapLayer},getBbox:function(){return this._bbox},getMapWidth:function(){return this._mapWidth},getMapHeight:function(){return this._mapHeight}});Oskari.clazz.define("Oskari.mapframework.gridcalc.QueuedTile",function(a){for(p in a){this[p]=a[p]}},{getBounds:function(){return this.bounds}});Oskari.clazz.define("Oskari.mapframework.gridcalc.TileQueue",function(){this.queue=[]},{getQueue:function(){return this.queue},getLength:function(){return this.queue.length},popJob:function(){var c=this.queue;var b=c.length;if(b===0){return null}if(b<4){return c.shift(-1)}var a=null;var d=Math.floor(b/2);a=c[d];this.queue=c.slice(0,d).concat(c.slice(d+1));return a},pushJob:function(a){this.queue.push(a)},flushQueue:function(){this.queue=[]}});Oskari.clazz.define("Oskari.mapframework.domain.User",function(a){this._loggedIn=false;if(a){this._firstName=a.firstName;this._lastName=a.lastName;this._nickName=a.nickName;this._loginName=a.loginName;this._uuid=a.userUUID;if(a.userUUID){this._loggedIn=true}}},{getName:function(){return this._firstName+" "+this._lastName},getFirstName:function(){return this._firstName},getLastName:function(){return this._lastName},getNickName:function(){return this._nickName},getLoginName:function(){return this._loginName},getUuid:function(){return this._uuid},isLoggedIn:function(){return this._loggedIn}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.userinterface.bundle.ui.UserInterfaceBundleInstance",function(){this.sandbox=null;this.requestHandlers={};this.extensions=[];this.extensionsByName={};this.compiledTemplates={};this.flyoutContainer=null;this.tileContainer=null},{getName:function(){return"userinterface.DivManazer"},init:function(a){},getSandbox:function(){return this.sandbox},start:function(){this.compileTemplates();this.flyoutContainer=jQuery(document.body);this.tileContainer=jQuery("#menubar");var a=Oskari.$("sandbox");this.sandbox=a;this.sandbox.register(this);this.requestHandlers.add=Oskari.clazz.create("Oskari.userinterface.bundle.ui.request.AddExtensionRequestHandler",this);this.requestHandlers.remove=Oskari.clazz.create("Oskari.userinterface.bundle.ui.request.RemoveExtensionRequestHandler",this);this.requestHandlers.update=Oskari.clazz.create("Oskari.userinterface.bundle.ui.request.UpdateExtensionRequestHandler",this);a.addRequestHandler("userinterface.AddExtensionRequest",this.requestHandlers.add);a.addRequestHandler("userinterface.RemoveExtensionRequest",this.requestHandlers.remove);a.addRequestHandler("userinterface.UpdateExtensionRequest",this.requestHandlers.update);this.requestHandlers.modal=Oskari.clazz.create("Oskari.userinterface.bundle.ui.request.ModalDialogRequestHandler",this);a.addRequestHandler("userinterface.ModalDialogRequest",this.requestHandlers.modal)},update:function(){},stop:function(){sandbox.removeRequestHandler("userinterface.UpdateExtensionRequest",this.requestHandlers.update);sandbox.removeRequestHandler("userinterface.RemoveExtensionRequest",this.requestHandlers.remove);sandbox.removeRequestHandler("userinterface.AddExtensionRequest",this.requestHandlers.add);sandbox.removeRequestHandler("userinterface.ModalDialogRequest",this.requestHandlers.modal);this.sandbox.unregister(this);this.started=false},templates:{"Oskari.userinterface.Tile":'<div class="oskari-tile oskari-tile-closed"><div class="oskari-tile-title"></div><div class="oskari-tile-status"></div><div class="oskari-tile-close"></div></div>',"Oskari.userinterface.Flyout":'<div class="oskari-flyout oskari-closed"><div class="oskari-flyoutheading"></div><div class="oskari-flyouttoolbar"><div class="oskari-flyout-title"><p></p></div><div class="oskari-flyouttools"><div class="oskari-flyouttool-help"></div><div class="oskari-flyouttool-attach"></div><div class="oskari-flyouttool-detach"></div><div class="oskari-flyouttool-minimize"></div><div class="oskari-flyouttool-restore"></div><div class="oskari-flyouttool-close"></div></div></div><div class="oskari-flyoutcontentcontainer"><div class="oskari-flyoutcontent"></div></div></div>'},compileTemplates:function(){this.compiledTemplates["Oskari.userinterface.Tile"]=jQuery(this.templates["Oskari.userinterface.Tile"]);var a=jQuery(this.templates["Oskari.userinterface.Flyout"]);a.css("left","-3195px");a.css("top","-3100px");this.compiledTemplates["Oskari.userinterface.Flyout"]=a},addExtension:function(n){n.startExtension();var e=n.getPlugins();var i=null;var l=this.extensions;var f=this.extensionsByName;var o={state:"close",extension:n,draggable:null,draggableTarget:null,draggableHandle:null,viewState:{},extensionUpdatedEvent:null};o.extensionUpdatedEvent=this.sandbox.getEventBuilder("userinterface.ExtensionUpdatedEvent")(n,o.state);var j=l.length;var b=n.getName();var h=e["Oskari.userinterface.Flyout"];var m=null;if(h!=null){m=this.createFlyout(n,h,j,o);o.draggableHandle=m.children(".oskari-flyoutheading").get()[0];var g=m.children(".oskari-flyoutcontentcontainer");var a=g.children(".oskari-flyoutcontent");var d=g.children(".oskari-flyoutcontent");h.setEl(d.get());this.flyoutContainer.append(m);h.startPlugin()}var c=e["Oskari.userinterface.Tile"];var k=null;if(c!=null){k=this.createTile(n,c,j,o);c.startPlugin();k.fadeIn(200);this.tileContainer.append(k)}o.plugins={};if(c){o.plugins["Oskari.userinterface.Tile"]={plugin:c,el:k}}if(h){o.plugins["Oskari.userinterface.Flyout"]={plugin:h,el:m}}l.push(o);f[b]=o;return o},createTile:function(h,c,d,j){var f=this;var a=jQuery("#menubar");var e=this.compiledTemplates["Oskari.userinterface.Tile"].clone(true,true);
var g=e.children(".oskari-tile-title");g.append(c.getTitle());var b=e.children(".oskari-tile-status");g.click(function(){f.getSandbox().postRequestByName("userinterface.UpdateExtensionRequest",[h,"toggle"])});b.click(function(){f.getSandbox().postRequestByName("userinterface.UpdateExtensionRequest",[h,"toggle"])});var i=e.children(".oskari-tile-close");i.hide();c.setEl(e.get());return e},createFlyout:function(h,f,e,a){var d=this;var b=this.compiledTemplates["Oskari.userinterface.Flyout"].clone(true,true);b.find(".oskari-flyout-title p").append(h.getTitle());var g=b.children(".oskari-flyouttoolbar").children(".oskari-flyouttools");var c={attach:g.children(".oskari-flyouttool-attach"),detach:g.children(".oskari-flyouttool-detach"),minimize:g.children(".oskari-flyouttool-minimize"),restore:g.children(".oskari-flyouttool-restore"),close:g.children(".oskari-flyouttool-close"),help:g.children(".oskari-flyouttool-help")};c.detach.click(function(){d.getSandbox().postRequestByName("userinterface.UpdateExtensionRequest",[h,"detach"])});c.attach.click(function(){d.getSandbox().postRequestByName("userinterface.UpdateExtensionRequest",[h,"attach"])});c.minimize.click(function(){d.getSandbox().postRequestByName("userinterface.UpdateExtensionRequest",[h,"minimize"])});c.restore.click(function(){d.getSandbox().postRequestByName("userinterface.UpdateExtensionRequest",[h,"restore"])});c.close.click(function(){d.getSandbox().postRequestByName("userinterface.UpdateExtensionRequest",[h,"close"])});c.help.click(function(){d.getSandbox().postRequestByName("userguide.ShowUserGuideRequest",[{placement:"bottom",el:c.help,extension:h.getName(),toggle:true}])});return b},removeExtension:function(q){var l=this;var m=l.extensions;var g=this.extensionsByName;var r=g[q.getName()];var f=r.state;var i=r.plugins["Oskari.userinterface.Flyout"];if(i){var h=i.plugin;var o=i.el;var d=this.flyoutOps;var p=d.close;p.apply(this,[o,h,r]);o.remove()}var c=r.plugins["Oskari.userinterface.Tile"];if(c){var b=c.plugin;var k=c.el;k.remove()}g[q.getName()]=null;var a=[];for(var e=0,j=m.length;e<j;e++){if(m[e]===r){continue}a.push(m[e])}l.extensions=a;q.stopExtension()},updateExtension:function(j,d){var z=this;var x=z.extensions;var a=this.extensionsByName;var m=a[j.getName()];var h=m.state;var e=d.getState();if(e=="toggle"){if(h=="close"){e="attach"}else{if(h=="attach"){e="close"}else{if(h=="detach"){e="minimize"}else{if(h=="minimize"){e="restore"}else{if(h=="restore"){e="minimize"}}}}}}var k=m.plugins["Oskari.userinterface.Flyout"];if(e=="attach"&&k){var b=z.flyoutOps;var g=b.close;for(var p=0,u=x.length;p<u;p++){var q=x[p];if(q===m){continue}if(q.state!="attach"){continue}var c="close";var y=q.plugins;var s=y["Oskari.userinterface.Flyout"];if(s){var w=s.plugin;var o=s.el;q.state=c;g.apply(this,[o,w,q]);z.notifyExtensionViewStateChange(q)}else{continue}var l=y["Oskari.userinterface.Tile"];if(l){var f=l.plugin;var B=l.el;z.applyTransition(B,c,z.tileTransitions)}}}if(k){var r=k.plugin;var v=k.el;var b=z.flyoutOps;var i=b[e];i.apply(this,[v,r,m,x])}var t=m.plugins["Oskari.userinterface.Tile"];if(t){var C=t.plugin;var A=t.el;z.applyTransition(A,e,z.tileTransitions)}m.state=e;z.notifyExtensionViewStateChange(m)},notifyExtensionViewStateChange:function(a){var b=a.extensionUpdatedEvent;b.setViewState(a.state);b.setViewInfo(a.viewState);this.sandbox.notifyAll(b,true)},defaults:{detach:{left:"245px",top:"100px"},attach:{left:"214px",top:"100px"}},tileTransitions:{attach:{"oskari-tile-attached":true,"oskari-tile-detached":false,"oskari-tile-closed":false},detach:{"oskari-tile-attached":false,"oskari-tile-detached":true,"oskari-tile-minimized":false,"oskari-tile-closed":false},minimize:{"oskari-tile-minimized":true,"oskari-tile-closed":false,"oskari-tile-detached":false},restore:{"oskari-tile-minimized":false,"oskari-tile-detached":true},close:{"oskari-tile-closed":true,"oskari-tile-attached":false,"oskari-tile-detached":false}},flyoutTransitions:{attach:{"oskari-attached":true,"oskari-detached":false,"oskari-closed":false},detach:{"oskari-attached":false,"oskari-detached":true,"oskari-closed":false},minimize:{"oskari-minimized":true,"oskari-closed":false,"oskari-detached":false},restore:{"oskari-minimized":false,"oskari-closed":false,"oskari-detached":true,"oskari-attached":false},close:{"oskari-closed":true,"oskari-minimized":false,"oskari-detached":false,"oskari-attached":false}},applyTransition:function(d,b,c){var c=c[b];
if(!c){return}for(var a in c){if(c[a]){d.addClass(a)}else{d.removeClass(a)}}},getFlyoutViewState:function(a,c){var b={left:a.css("left"),top:a.css("top"),width:a.width(),height:a.height(),"z-index":a.css("z-index"),viewState:c};return b},flyoutOps:{detach:function(c,d,a,f){var g=this;if((!a.viewState.left||!a.viewState.top)||(a.viewState.left==g.defaults.attach.left&&a.viewState.top==g.defaults.attach.top)){a.viewState.left=g.defaults.detach.left;a.viewState.top=g.defaults.detach.top}var b={left:a.viewState.left,top:a.viewState.top};c.animate(b,200,"cubicIn",function(){var i=g.getFlyoutViewState(c,"detach");a.viewState=i});g.applyTransition(c,"detach",g.flyoutTransitions);var e=c.get()[0];var h=a.draggableHandle;a.draggableTarget=e;a.draggable=new Draggable(e,{handle:h,scroll:false,onStop:function(i,j){g.shuffleZIndices(c);var k=g.getFlyoutViewState(c,"detach");a.viewState=k;g.notifyExtensionViewStateChange(a)}})},attach:function(b,c,a,d){var e=this;b.removeAttr("style");e.applyTransition(b,"attach",e.flyoutTransitions);b.css("left",e.defaults.attach.left);b.css("top",e.defaults.attach.top);var f=e.getFlyoutViewState(b,"attach");a.viewState=f;if(a.draggable){a.draggable.destroy();a.draggable=null}},minimize:function(b,c,a){var d=this;var e=d.getFlyoutViewState(b,"minimize");d.applyTransition(b,"minimize",d.flyoutTransitions);a.viewState=e},restore:function(b,c,a){var d=this;d.applyTransition(b,"restore",d.flyoutTransitions);var e=a.viewState},close:function(b,c,a){var d=this;a.viewState={viewState:"close"};d.applyTransition(b,"close",d.flyoutTransitions);if(a.draggable){a.draggable.destroy();a.draggable=null}}},setState:function(f){var d=this;var b=f;if(!b){return}for(var g in d.extensionsByName){var a=d.extensionsByName[g];var c=b.extensionStatesByName[g];if(!c){continue}a.state=c.state;a.viewState=c.viewState||{}}},getState:function(){var c=this;c.refreshExtensionViewStates();var b={extensionStatesByName:{}};for(var d in c.extensionsByName){var a=c.extensionsByName[d];b.extensionStatesByName[d]={state:a.state,viewState:a.viewState}}return b},applyState:function(){var a=this;a.restoreExtensionViewStates()},refreshExtensionViewStates:function(){var f=this;for(var h in f.extensionsByName){var a=f.extensionsByName[h];var d=a.plugins["Oskari.userinterface.Flyout"];if(d){var c=d.plugin;var b=d.el;var g=f.getFlyoutViewState(b,a.state);a.viewState=g}}},restoreExtensionViewStates:function(){var k=this;var c=k.flyoutOps;var l=k.extensions;for(var j in k.extensionsByName){var o=k.extensionsByName[j];var n=o.extension;var h=o.plugins["Oskari.userinterface.Flyout"];if(h){var f=h.plugin;var m=h.el;var d=o.viewState;m.removeAttr("style");m.css("left",d.left),m.css("top",d.top);m.width(d.width);m.height(d.height);m.css("z-index",d["z-index"]);var g=c[o.state];g.apply(k,[m,f,o,l])}var b=o.plugins["Oskari.userinterface.Tile"];if(b){var a=b.plugin;var i=b.el;k.applyTransition(i,o.state,k.tileTransitions)}}},shuffleZIndices:function(m){var i=this;var j=i.extensions;var s=[];var a={};var c={};var p={};var d=1100;for(var h in i.extensionsByName){var r=i.extensionsByName[h];var q=r.extension;var g=r.plugins["Oskari.userinterface.Flyout"];if(g){var f=g.plugin;var l=g.el;var k=l.css("z-index");s.push(k);var o=""+k;a[o]=k;p[o]=l;c[o]=r}}s.sort();for(var b=0;b<s.length;b++){var o=s[b];a[o]=d+b;if(c[o].state!="detach"){continue}p[o].css("z-index",a[s[b]])}m.css("z-index",d+s.length+2)}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.userinterface.Stateful"]});Oskari.clazz.define("Oskari.userinterface.request.AddExtensionRequest",function(a){this._extension=a},{__name:"userinterface.AddExtensionRequest",getName:function(){return this.__name},getExtension:function(){return this._extension}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.userinterface.bundle.ui.request.AddExtensionRequestHandler",function(a){this.ui=a},{handleRequest:function(a,b){var c=b.getExtension();this.ui.addExtension(c)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.userinterface.request.RemoveExtensionRequest",function(a){this._extension=a
},{__name:"userinterface.RemoveExtensionRequest",getName:function(){return this.__name},getExtension:function(){return this._extension}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.userinterface.bundle.ui.request.RemoveExtensionRequestHandler",function(a){this.ui=a},{handleRequest:function(a,b){var c=b.getExtension();this.ui.removeExtension(c)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.userinterface.request.UpdateExtensionRequest",function(b,a){this._extension=b;this._state=a},{__name:"userinterface.UpdateExtensionRequest",getName:function(){return this.__name},getExtension:function(){return this._extension},getState:function(){return this._state}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.userinterface.bundle.ui.request.UpdateExtensionRequestHandler",function(a){this.ui=a},{handleRequest:function(a,b){var c=b.getExtension();this.ui.updateExtension(c,b)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.userinterface.request.ModalDialogRequest",function(d,c,b,a){this._title=d?d:"Untitled";this._message=c?c:"Lorem ipsum";this._buttons=b?b:{};this._parent=parent?parent:jQuery("#mapdiv");this._onshow=a?a:null},{__name:"userinterface.ModalDialogRequest",getName:function(){return this.__name},getTitle:function(){return this._title},getMessage:function(){return this._message},getButtons:function(){return this._buttons},getGeom:function(){return this._geom},getParent:function(){return this._parent},getOnShow:function(){return this._onshow}},{protocol:["Oskari.mapframework.request.Request"]});Oskari.clazz.define("Oskari.userinterface.bundle.ui.request.ModalDialogRequestHandler",function(a){this._ui=a;this._tpl={};this._tpl.modal=jQuery('<div id="modaldialog" class="modaldialog">  <div class="modaltitle"></div>  <div class="modalmessage"></div>  <div class="modalbuttons"></div> </div>');this._tpl.button=jQuery('<div class="modalbutton"><input type="button" /></input></div>');this._buttons={};this._args={closeClass:"modalclose",overlayId:"modaloverlay",overlayCss:{"background-color":"lightgrey",cursor:"wait"},containerId:"modalcontainer",containerCss:{"background-color":"white"},onClose:function(){this.close()},zIndex:80130}},{handleRequest:function(c,d){var h=this._tpl.modal.clone();h.find(".modaltitle").append(d.getTitle());h.find(".modalmessage").append(d.getMessage());var e=d.getButtons();var i=h.find(".modalbuttons");for(var b in e){if(!e[b].name){continue}var a=e[b];var g=this._tpl.button.clone();var f=g.find("input");f.attr("name",a.name);f.attr("text",a.text);f.attr("value",a.text);f.bind("click",a.onclick);if(a.close!==false){f.addClass(this._args.closeClass)}i.append(g)}if(d.onshow){this._args.onShow=onshow}$.modal=h.modal(this._args)}},{protocol:["Oskari.mapframework.core.RequestHandler"]});Oskari.clazz.define("Oskari.userinterface.event.ExtensionUpdatedEvent",function(c,a,b){this._creator=null;this._extension=c;this.viewstate=a;this.viewinfo=b},{__name:"userinterface.ExtensionUpdatedEvent",getName:function(){return this.__name},getExtension:function(){return this._extension},getViewState:function(){return this.viewstate},setViewState:function(a){this.viewstate=a},getViewInfo:function(){return this.viewinfo},setViewInfo:function(a){this.viewinfo=a}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.userinterface.component.Accordion",function(){this.template=jQuery('<div class="accordion"></div>');this.panels=[];this.ui=this.template.clone()},{addPanel:function(a){this.panels.push(a);a.insertTo(this.ui)},removePanel:function(c){var a=null;for(var b=0;b<this.panels.length;b++){if(this.panels[b]===c){a=this.panels[b];this.panels.splice(b,1);break}}if(a){a.destroy();return true}return false},insertTo:function(a){a.append(this.ui)}});Oskari.clazz.define("Oskari.userinterface.component.AccordionPanel",function(){this.template=jQuery('<div class="accordion_panel"><div class="header"></div><div class="content"></div></div>');this.title=null;this.content=null;
this.html=this.template.clone();var a=this.html.find("div.header");a.click(function(){var c=jQuery(this).parent();var b=c.hasClass("open");if(b){c.removeClass("open");c.find("div.content").hide()}else{c.addClass("open");c.find("div.content").show()}});this.html.find("div.content").hide()},{setTitle:function(a){this.title=a;var b=this.html.find("div.header");b.append(this.title)},setContent:function(b){this.content=b;var a=this.html.find("div.content");a.append(this.content)},destroy:function(){this.html.remove()},getContainer:function(){return this.html.find("div.content")},insertTo:function(a){a.append(this.html)}});Oskari.clazz.define("Oskari.userinterface.component.Badge",function(){this.compiledTemplates={};this.compileTemplates();this.ui=null;this.container=null},{templates:{"default":'<span class="oskari-badge"></span>',success:'<span class="oskari-badge oskari-badge-success"></span>',warning:'<span class="oskari-badge oskari-badge-warning"></span>',important:'<span class="oskari-badge oskari-badge-important"></span>',info:'<span class="oskari-badge oskari-badge-info"></span>',success:'<span class="oskari-badge oskari-badge-inverse"></span>'},compileTemplates:function(){for(var a in this.templates){this.compiledTemplates[a]=jQuery(this.templates[a])}},insertTo:function(a){this.container=a},setContent:function(b,a){if(this.ui){this.ui.remove();this.ui=null}var c=this.compiledTemplates[a||"default"].clone();c.append(b);this.container.append(c);this.ui=c},hide:function(){if(this.ui){this.ui.remove();this.ui=null}}});Oskari.clazz.define("Oskari.userinterface.component.Alert",function(){this.compiledTemplates={};this.compileTemplates();this.ui=null;this.container=null},{templates:{"default":'<div class="oskari-alert"><div class="oskari-alert-icon-close"></div></div>',success:'<div class="oskari-alert oskari-alert-success"><div class="oskari-alert-icon-close"></div></div>',error:'<div class="oskari-alert oskari-alert-error"><div class="oskari-alert-icon-close"></div></div>',info:'<div class="oskari-alert oskari-alert-info"><div class="oskari-alert-icon-close"></div></div>'},compileTemplates:function(){for(var a in this.templates){this.compiledTemplates[a]=jQuery(this.templates[a])}},insertTo:function(a){this.container=a},setContent:function(d,a){if(this.ui){this.ui.remove();this.ui=null}var b=this.compiledTemplates[a||"default"].clone();b.append(d);this.container.prepend(b);this.ui=b;var c=this;b.children(".oskari-alert-icon-close").click(function(){c.hide()})},hide:function(){if(this.ui){this.ui.remove();this.ui=null}}});!function(c){var b=function(e,d){this.init("oskariTooltip",e,d)};b.prototype={constructor:b,init:function(g,f,e){var h,d;this.type=g;this.$element=c(f);this.options=this.getOptions(e);this.enabled=true;if(this.options.trigger!="manual"){h=this.options.trigger=="hover"?"mouseenter":"focus";d=this.options.trigger=="hover"?"mouseleave":"blur";this.$element.on(h,this.options.selector,c.proxy(this.enter,this));this.$element.on(d,this.options.selector,c.proxy(this.leave,this))}this.options.selector?(this._options=c.extend({},this.options,{trigger:"manual",selector:""})):this.fixTitle()},getOptions:function(d){d=c.extend({},c.fn[this.type].defaults,d,this.$element.data());if(d.delay&&typeof d.delay=="number"){d.delay={show:d.delay,hide:d.delay}}return d},enter:function(f){var d=c(f.currentTarget)[this.type](this._options).data(this.type);if(!d.options.delay||!d.options.delay.show){return d.show()}clearTimeout(this.timeout);d.hoverState="in";this.timeout=setTimeout(function(){if(d.hoverState=="in"){d.show()}},d.options.delay.show)},leave:function(f){var d=c(f.currentTarget)[this.type](this._options).data(this.type);if(!d.options.delay||!d.options.delay.hide){return d.hide()}clearTimeout(this.timeout);d.hoverState="out";this.timeout=setTimeout(function(){if(d.hoverState=="out"){d.hide()}},d.options.delay.hide)},show:function(){var h,d,j,f,i,e,g;if(this.hasContent()&&this.enabled){h=this.tip();this.setContent();if(this.options.animation){h.addClass("fade")}e=this.options.placement.apply(this.options.scope);d=/in/.test(e);
h.remove().css({top:0,left:0,display:"block"}).appendTo(d?this.$element:document.body);j=this.getPosition(d);f=h[0].offsetWidth;i=h[0].offsetHeight;switch(d?e.split(" ")[1]:e){case"bottom":g={top:j.top+j.height,left:j.left+j.width/2-f/2};break;case"top":g={top:j.top-i,left:j.left+j.width/2-f/2};break;case"left":g={top:j.top+j.height/2-i/2,left:j.left-f};break;case"right":g={top:j.top+j.height/2-i/2,left:j.left+j.width};break}h.css(g).addClass(e).addClass("in")}},isHTML:function(d){return typeof d!="string"||(d.charAt(0)==="<"&&d.charAt(d.length-1)===">"&&d.length>=3)||/^(?:[^<]*<[\w\W]+>[^>]*$)/.exec(d)},setContent:function(){var e=this.tip(),d=this.getTitle();e.find(".oskari-tooltip-inner")[this.isHTML(d)?"html":"text"](d);e.removeClass("fade in top bottom left right")},hide:function(){var d=this,e=this.tip();e.removeClass("in");function f(){var g=setTimeout(function(){e.off(c.support.transition.end).remove()},500);e.one(c.support.transition.end,function(){clearTimeout(g);e.remove()})}c.support.transition&&this.$tip.hasClass("fade")?f():e.remove()},fixTitle:function(){var d=this.$element;if(d.attr("title")||typeof(d.attr("data-original-title"))!="string"){d.attr("data-original-title",d.attr("title")||"").removeAttr("title")}},hasContent:function(){return this.getTitle()},getPosition:function(d){return c.extend({},(d?{top:0,left:0}:this.$element.offset()),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight})},getTitle:function(){return this.options.title.apply(this.options.scope)},tip:function(){return this.$tip=this.$tip||c(this.options.template)},validate:function(){if(!this.$element[0].parentNode){this.hide();this.$element=null;this.options=null}},enable:function(){this.enabled=true},disable:function(){this.enabled=false},toggleEnabled:function(){this.enabled=!this.enabled},toggle:function(){this[this.tip().hasClass("in")?"hide":"show"]()},attach:function(d){this.$element=d}};c.fn.oskariTooltip=function(d){return this.each(function(){var g=c(this),f=g.data("oskariTooltip"),e=typeof d=="object"&&d;if(!f){g.data("oskariTooltip",(f=new b(this,e)))}if(typeof d=="string"){f[d]()}})};c.fn.oskariTooltip.Constructor=b;c.fn.oskariTooltip.defaults={animation:true,placement:"top",selector:false,template:'<div class="oskari-tooltip"><div class="oskari-tooltip-arrow"></div><div class="oskari-tooltip-inner"></div></div>',trigger:"hover",title:"",delay:0};var a=function(e,d){this.init("oskariPopover",e,d)};a.prototype=c.extend({},c.fn.oskariTooltip.Constructor.prototype,{constructor:a,setContent:function(){var f=this.tip(),e=this.getTitle(),d=this.getContent();f.find(".oskari-popover-title")[this.isHTML(e)?"html":"text"](e);f.find(".oskari-popover-content > *")[this.isHTML(d)?"html":"text"](d);f.removeClass("fade top bottom left right in")},hasContent:function(){return this.getTitle()||this.getContent()},getContent:function(){return this.options.content.apply(this.options.scope)},tip:function(){if(!this.$tip){this.$tip=c(this.options.template)}return this.$tip}});c.fn.oskariPopover=function(d){return this.each(function(){var g=c(this),f=g.data("oskariPopover"),e=typeof d=="object"&&d;if(!f){g.data("oskariPopover",(f=new a(this,e)))}if(typeof d=="string"){f[d]()}})};c.fn.oskariPopover.Constructor=a;c.fn.oskariPopover.defaults=c.extend({},c.fn.oskariTooltip.defaults,{placement:"right",content:"",template:'<div class="oskari-popover"><div class="oskari-arrow"></div><div class="oskari-popover-inner"><h3 class="oskari-popover-title"></h3><div class="oskari-popover-content"><p></p></div></div></div>'});Oskari.clazz.define("Oskari.userinterface.component.Popover",function(e,d){this.title=e;this.content=d;this.$container=null;this.data=null;this.shown=false;this.placement="bottom"},{templates:{container:'<div class="oskari-popover-container"/>'},hide:function(){if(!this.shown){return}this.shown=false;if(!this.data){return}this.data.hide()},show:function(){if(this.shown){return}if(!this.data){return}this.data.show();this.shown=true},attachTo:function(d){var e=this;this.$container=c(d);if(!this.data){this.data=new a(d,{scope:e,title:e.getTitle,content:e.getContent,trigger:"manual",placement:e.getPlacement,})
}else{this.data.attach(this.$container)}this.$container.data("oskariPopover",this.data)},getTitle:function(){return this.title},getContent:function(){return this.content},setContent:function(d,e){this.hide();this.content=d;if(e){this.title=e}this.show()},setTitle:function(e,d){this.hide();this.title=e;if(d){this.content=d}this.show()},setPlacement:function(d){this.placement=d},getPlacement:function(){return this.placement}})}(window.jQuery);/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.category("Oskari.mapframework.core.Core","search-methods",{handleSearchRequest:function(b){this.printDebug("Doing search '"+b.getSearchString()+"'...");this.actionInProgressSearch();var a=this.getService("Oskari.mapframework.service.SearchService");a.doSearch(b.getSearchString(),b.getOnSuccess(),b.getOnComplete())}});Oskari.clazz.category("Oskari.mapframework.core.Core","wizard-methods",{handleHideWizardRequest:function(b){var a=this.getEventBuilder("AfterHideWizardEvent")(b.getWizardName());this.dispatch(a)},handleShowWizardRequest:function(b){var a=this.getEventBuilder("AfterShowWizardEvent")(b.getWizardName());this.dispatch(a)}});Oskari.clazz.category("Oskari.mapframework.core.Core","mapasker-methods",{handleShowNetServiceCentreRequest:function(b){var a=this.getEventBuilder("AfterShowNetServiceCentreEvent")();this.dispatch(a)},handleHideNetServiceCentreRequest:function(b){var a=this.getEventBuilder("AfterHideNetServiceCentreEvent")();this.dispatch(a)},handleHighlightWFSFeatureRequest:function(a){var b=this.getService("Oskari.mapframework.service.OgcSearchService");b.scheduleWFSMapHighlightUpdate(a)},handleHighlightWFSFeatureRequestByGeoPoint:function(request){if(!this.getSandbox().getMap().isMoving()){var core=this;var mapWidth=core.getSandbox().getMap().getWidth();var mapHeight=core.getSandbox().getMap().getHeight();var parameters=request.getWFSFeatureParameters();var ogcSearchService=this.getService("Oskari.mapframework.service.OgcSearchService");var highlighted=this.getAllHighlightedMapLayers();if(highlighted.length!=1){throw"Trying to highlight WFS feature but there is either too many or none selected WFS layers. Size: "+highlighted.length}var layer=highlighted[0];if(!layer.isLayerOfType("WFS")){throw"Trying to highlight WFS feature from map layer that is not WFS layer!"}if(!layer.isInScale()){core.printDebug("Trying to hightlight WFS feature from wfs layer that is not in scale!");return}var keepCollection=this.isCtrlKeyDown();var onReady=function(response){if(response.error=="true"){core.printWarn("Error while highlight data from table.")}var selectedFeatures=eval("("+response.selectedFeatures+")");var featureIds=[];if(selectedFeatures!=null&&selectedFeatures.id!=null){featureIds=selectedFeatures.id}var event=core.getEventBuilder("AfterHighlightWFSFeatureRowEvent")(featureIds,true,layer,keepCollection);core.copyObjectCreatorToFrom(event,request);core.dispatch(event)};ogcSearchService.processGetFeatureTypeIdsJsonForTableFormat(parameters,onReady,mapWidth,mapHeight)}},getLatestWfsTableQueryId:function(){return this._wfsTableQueryId},generateWfsTableQueryId:function(){this._wfsTableQueryId++;return this._wfsTableQueryId}});Oskari.clazz.category("Oskari.mapframework.core.Core","net-service-center-methods",{handleNetServiceCenterRequest:function(b){this.printDebug("Handling NetServiceCenter request '"+b.getActionKey()+"'...");var a=this;var c=function(e){var f=a.getEventBuilder("AfterNetServiceCenterRequestEvent")(b.getActionKey(),e,b.getSelectedData());a.copyObjectCreatorToFrom(f,b);a.dispatch(f)};var d=this.getService("Oskari.mapframework.service.NetServiceCenterService");d.doRequest(b.getActionKey(),b.getParamMap(),c)},handleUpdateNetServiceCentreRequest:function(b){var a=core.getEventBuilder("AfterUpdateNetServiceCentreEvent")();this.copyObjectCreatorToFrom(a,b);this.dispatch(a)}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.category("Oskari.mapframework.core.Core","feature-info-methods",{handleGetFeatureInfoRequest:function(d){this.printDebug("Handling OF getFeatureInfo TB refactored...");if(this.getMap().isMoving()){return}var j=false;if(d.getMapLayers().length==1){if(d.getMapLayers()[0].isLayerOfType("WFS")){j=true}}if(d.getMapLayers().length>0&&!j){var b=this.getEventBuilder("AfterGetFeatureInfoEvent")(true,false);this.copyObjectCreatorToFrom(b,d);this.dispatch(b);for(var e=0;e<d.getMapLayers().length;e++){this.actionInProgressGetFeatureInfo();var f=d.getMapLayers()[e];var g=f.getName();var m=f.getQueryFormat();if(f.getQueryable()==true&&m!=""&&m!=null&&!(f.isLayerOfType("WFS"))){var c=f.getWmsUrls()[0];if(c.indexOf("?")<0){c=c+"?"}var l=d.getBoundingBox().left+","+d.getBoundingBox().bottom+","+d.getBoundingBox().right+","+d.getBoundingBox().top;c=c+"REQUEST=GetFeatureInfo&EXCEPTIONS=application/vnd.ogc.se_xml&SRS="+d.getSRS()+"&VERSION=1.1.1&BBOX="+l+"&X="+d.getX()+"&Y="+d.getY()+"&INFO_FORMAT="+m+"&QUERY_LAYERS="+f.getWmsName()+"&WIDTH="+d.getMapWidth()+"&HEIGHT="+d.getMapHeight()+"&FEATURE_COUNT=1&FORMAT=image/png&SERVICE=WMS&STYLES="+f.getCurrentStyle().getName()+"&LAYERS="+f.getWmsName();var k=Oskari.$().startup.useGetFeatureInfoProxy;if(k!=null&&k=="true"){c="/cgi-bin/proxy.cgi?url="+encodeURIComponent(c)}var a=function(i,o){this._name=i;this._format=o;this.parseOkMessage=function(p){var q=this.parseInfoResponse(p,this._format);var r=this.getEventBuilder("AfterAppendFeatureInfoEvent")(i,q);this.copyObjectCreatorToFrom(r,d);this.dispatch(r)};this.parseFailedMessage=function(p){var q=this.getEventBuilder("AfterAppendFeatureInfoEvent")(i,p.responseText);this.copyObjectCreatorToFrom(q,d);this.dispatch(q)}};var n=new a(g,m);Ext.Ajax.request({url:c,scope:this,success:n.parseOkMessage,failure:n.parseFailedMessage})}else{var h="";h=this.getText("rightpanel_wms_getfeatureinfo_not_supported_txt")+": "+g+".";var b=this.getEventBuilder("AfterAppendFeatureInfoEvent")(g,h);this.copyObjectCreatorToFrom(b,d);this.dispatch(b)}}this.parseInfoResponse=function(o,p){var i;if(p=="application/vnd.ogc.gml"||p=="application/vnd.ogc.se_xml"){i=this.renderInfoGML(o)}else{if(p=="application/vnd.ogc.wms_xml"||p=="text/xml"){i=this.renderInfoXML(o)}else{i='<div style="font: 11px Tahoma, Arial, Helvetica, sans-serif;">'+o.responseText+"</div>";if(o.responseText==""){i=this.getText("mapcontrolsservice_not_found_wms_feature_info")}}}if(i==""||i=="<table></table>"){i=this.getText("mapcontrolsservice_not_found_wms_feature_info")}return i};this.renderInfoGML=function(i){return i.responseText.replace(/</g,"&lt;").replace(/>/g,"&gt;")};this.renderInfoXML=function(i){return i.responseText.replace(/</g,"&lt;").replace(/>/g,"&gt;")}}else{var b=this.getEventBuilder("AfterGetFeatureInfoEvent")(false,j);this.copyObjectCreatorToFrom(b,d);this.dispatch(b)}}});Oskari.clazz.category("Oskari.mapframework.core.Core","map-layer-methods",{findMapLayer:function(f,e){if(!e){return null}for(var c=0;c<e.length;c++){var b=e[c];if(b.getId()==f){return b}var d=b.getSubLayers();var a=this.findMapLayer(f,d);if(a!=null){return a}}return null},isLayerAlreadySelected:function(b){var a=this.findMapLayer(b,this._selectedLayers);return(a!=null)},findMapLayerFromSelectedMapLayers:function(a){return this.findMapLayer(a,this._selectedLayers)},isMapLayerAlreadyHighlighted:function(b){var a=this.findMapLayer(b,this._mapLayersHighlighted);if(a==null){this.printDebug("[core-map-layer-methods] "+b+" is not yet highlighted.")}return(a!=null)},handleAddMapLayerRequest:function(g){var d=g.getMapLayerId();var e=g.getKeepLayersOrder();var b=g.isBasemap();this.printDebug("Trying to add map layer with id '"+d+"' AS "+(b?" BASE ":" NORMAL "));if(this.isLayerAlreadySelected(d)){this.printDebug("Attempt to select already selected layer '"+d+"'");return}var k=this.findMapLayerFromAllAvailable(d);if(!k){return}this.printDebug("MAPLAYER isBaseLayer WAS "+k.isBaseLayer());if(b==true){k.setType("BASE_LAYER")}this.printDebug("MAPLAYER isBaseLayer IS "+k.isBaseLayer());if(e!=null&&e){this._selectedLayers.push(k)
}else{if(k.isBaseLayer()||b==true){var j=this._selectedLayers;var c=new Array();c.push(k);for(var h=0;h<j.length;h++){c.push(j[h])}delete this._selectedLayers;this._selectedLayers=c}else{this._selectedLayers.push(k)}}var a=this.getEventBuilder("AfterMapLayerAddEvent")(k,e,b);this.copyObjectCreatorToFrom(a,g);this.dispatch(a);var f=new Array();f.push(k);this.doSniffing(f)},handleRemoveMapLayerRequest:function(d){var g=d.getMapLayerId();this.printDebug("Trying to remove map layer with id '"+g+"'");if(!this.isLayerAlreadySelected(g)){this.printDebug("Attempt to remove layer '"+g+"' that is not selected.");return}var a=this.findMapLayerFromAllAvailable(g);var b=-1;for(var f=0;f<this._selectedLayers.length;f++){if(this._selectedLayers[f]===a){b=f}}this._selectedLayers.splice(b,1);if(this.isMapLayerAlreadyHighlighted(g)){this.printDebug("Maplayer is also highlighted, removing it from highlight list.");if(this._allowMultipleHighlightLayers==true){this.destroyOneHighLightedMapLayers(g)}else{this.destroyAllHighLightedMapLayers()}}if(a.isLayerOfType("WFS")){var e=this.getService("Oskari.mapframework.service.OgcSearchService");e.removeWFsLayerRequests(a);e.removeWFSLayerGridRequests(a)}var c=this.getEventBuilder("AfterMapLayerRemoveEvent")(a);this.copyObjectCreatorToFrom(c,d);this.dispatch(c)},findMapLayerFromAllAvailable:function(c){var a=this.getService("Oskari.mapframework.service.MapLayerService");var b=a.findMapLayer(c);if(b==null){this.printDebug("Cannot find map layer with id '"+c+"' from all available. Check that current user has VIEW permissions to that layer.")}return b},findBaselayerBySublayerIdFromAllAvailable:function(g){var e=null;var a=this.getService("Oskari.mapframework.service.MapLayerService");var c=a.getAllLayers();for(var d=0;d<c.length;d++){if(c[d].isBaseLayer()){for(var b=0;b<c[d].getSubLayers().length;b++){var f=c[d].getSubLayers()[b];if(f.getId()==g){e=c[d];break}}}if(e!=null){break}}return e},findMapLayerFromSelected:function(b){var a=this.findMapLayer(b,this._selectedLayers);if(a==null){this.printDebug("Cannot find map layer with id '"+b+"' from selected layers")}return a},handleShowMapLayerInfoRequest:function(c){var a=this.findMapLayerFromAllAvailable(c.getMapLayerId());var b=this.getEventBuilder("AfterShowMapLayerInfoEvent")(a);this.copyObjectCreatorToFrom(b,c);this.dispatch(b)},handleRearrangeSelectedMapLayerRequest:function(f){var d=f.getToPosition();var e=f.getMapLayerId();var g=null;var l=0;if(e!=null&&d!=null){g=this.findMapLayerFromSelected(e);var b=new Array();var c=0;var k=0;for(var h=0;c<d;h++){k++;var j=this._selectedLayers[h];if(j.getId()==e){l=h;continue}b.push(j);c++}b.push(g);for(var h=k;h<this._selectedLayers.length;h++){var j=this._selectedLayers[h];if(j.getId()==e){l=h;continue}b.push(j)}delete this._selectedLayers;this._selectedLayers=b}var a=this.getEventBuilder("AfterRearrangeSelectedMapLayerEvent")(g,l,d);this.copyObjectCreatorToFrom(a,f);this.dispatch(a)},handleChangeMapLayerOpacityRequest:function(c){var a=this.findMapLayerFromSelected(c.getMapLayerId());if(!a){return}a.setOpacity(c.getOpacity());var b=this.getEventBuilder("AfterChangeMapLayerOpacityEvent")(a);this.copyObjectCreatorToFrom(b,c);this.dispatch(b)},handleChangeMapLayerStyleRequest:function(c){var a=this.findMapLayerFromSelected(c.getMapLayerId());if(!a){return}if(c.getStyle()!="!default!"){a.selectStyle(c.getStyle());var b=this.getEventBuilder("AfterChangeMapLayerStyleEvent")(a);this.copyObjectCreatorToFrom(b,c);this.dispatch(b)}},getAllSelectedLayers:function(){return this._selectedLayers},getAllSelectedWfsLayers:function(){var a=[];if(this._selectedLayers!=null){for(var b=0;b<this._selectedLayers.length;b++){if(this._selectedLayers[b].isLayerOfType("WFS")){a.push(this._selectedLayers[b])}}}return a},isWfsLayersSelected:function(){var a=this.getAllSelectedWfsLayers();return a.length>0},getAllHighlightedMapLayers:function(){return this._mapLayersHighlighted},destroyAllHighLightedMapLayers:function(){var b=this.getAllHighlightedMapLayers();for(var c=0;c<b.length;c++){var a=b[c];var d=this.getEventBuilder("AfterDimMapLayerEvent")(a);
this.dispatch(d)}this._mapLayersHighlighted=[]},destroyOneHighLightedMapLayers:function(d){var b=this.getAllHighlightedMapLayers();for(var c=0;c<b.length;c++){var a=b[c];if(a.getId()==d){b.splice(c);return}}},handleHighlightMapLayerRequest:function(g){var d=this.getObjectCreator(g);var a=this.getRequestBuilder("ToolSelectionRequest");var f=a("map_control_select_tool");this._sandbox.request(d,f);var h=g.getMapLayerId();this.printDebug("[core-map-layer-methods] Trying to highlight map layer with id '"+h+"'");if(this.isMapLayerAlreadyHighlighted(h)){this.printWarn("[core-map-layer-methods] Attempt to highlight already highlighted wms feature info map layer '"+h+"'");return}if(this._allowMultipleHighlightLayers==true){this.destroyOneHighLightedMapLayers(h)}else{this.destroyAllHighLightedMapLayers()}var c=this.findMapLayerFromSelected(h);if(!c){return}this._mapLayersHighlighted.push(c);this.printDebug("[core-map-layer-methods] Adding "+c+" ("+c.getId()+") to highlighted list.");var e=this.getEventBuilder("AfterHighlightMapLayerEvent")(c);this.copyObjectCreatorToFrom(e,g);this.dispatch(e)},handleDimMapLayerRequest:function(d){var a=d.getMapLayerId();if(this._allowMultipleHighlightLayers==true){this.destroyOneHighLightedMapLayers(a)}else{this.destroyAllHighLightedMapLayers()}var b=this.findMapLayerFromAllAvailable(a);if(!b){return}var c=this.getEventBuilder("AfterDimMapLayerEvent")(b);this.copyObjectCreatorToFrom(c,d);this.dispatch(c)},allowMultipleHighlightLayers:function(a){this._allowMultipleHighlightLayers=a}});Oskari.clazz.category("Oskari.mapframework.core.Core","map-methods",{updateMousePositionOnMap:function(a,c){var b=this._map;b.updateMousePosition(a,c)},handleEnableMapKeyboardMovementRequest:function(b){var c=this._map;c.setMapKeyboardMovementsEnabled(true);var a=this.getEventBuilder("AfterEnableMapKeyboardMovementEvent")();this.copyObjectCreatorToFrom(a,b);this.dispatch(a)},handleDisableMapKeyboardMovementRequest:function(b){var c=this._map;c.setMapKeyboardMovementsEnabled(false);var a=this.getEventBuilder("AfterDisableMapKeyboardMovementEvent")();this.copyObjectCreatorToFrom(a,b);this.dispatch(a)},doSniffing:function(f){if(this._doSniffing){var a=this.getService("Oskari.mapframework.service.UsageSnifferService");var h=new Array();var g=this._map.getScale();for(var e=0;e<f.length;e++){var d=f[e];for(var b=0;b<d.getSubLayers().length;b++){var c=d.getSubLayers()[b];if(c.isVisible()&&c.getMinScale()>=g&&c.getMaxScale()<=g){h.push(c)}}if(!d.isBaseLayer()&&d.isVisible()&&d.getMinScale()>=g&&d.getMaxScale()<=g){h.push(d)}}if(h.length>0){a.registerMapMovement(h,this._map.getX(),this._map.getY(),this._map.getZoom(),this._map.getBbox().toBBOX(),this._mapIdFromUrl)}}},handleStartMapPublisherRequest:function(b){if(this._mapPublisherWizardUrl==null){throw"User cannot move to wizard!"}var a=this.getEventBuilder("AfterStartMapPublisherEvent")(this._mapPublisherWizardUrl);this.copyObjectCreatorToFrom(a,b);this.dispatch(a)},handleGenerateHtmlLinkToMapRequest:function(b){var a=this.getEventBuilder("AfterGenerateHtmlLinkToMapEvent")(this.generateUrlToCurrentPage()+this.generateHtmlLinkParameters(this._map,this._selectedLayers,null));this.copyObjectCreatorToFrom(a,b);this.dispatch(a)},handleGenerateHtmlPrintToMapRequest:function(b){var a=this.getEventBuilder("AfterGenerateHtmlPrintToMapEvent")(this.generateUrlToPrintPage()+this.generateHtmlLinkParameters(this._map,this._selectedLayers,"print=true"));this.copyObjectCreatorToFrom(a,b);this.dispatch(a)},generateUrlToPrintPage:function(){var a=Oskari.$().startup.printUrl;if(a==null){throw"Print url is not set. Cannot print."}return a},generateUrlToCurrentPage:function(){var b=window.location.pathname;if(b.match(";")){b=b.substring(0,b.indexOf(";"))}var a=window.location.protocol+"//"+window.location.host+b;return a},generatePublishedMapLinkToFinnishGeoportalPage:function(){var b=new Array();for(var a=0;a<this._selectedLayers.length;a++){if(this._selectedLayers[a].isBaseLayer()){b.push(this._selectedLayers[a])}}for(var a=0;a<this._selectedLayers.length;a++){if(!this._selectedLayers[a].isBaseLayer()){b.push(this._selectedLayers[a])
}}return Oskari.$().startup.finnishGeoportalMapUrl+this.generateHtmlLinkParameters(this._map,b,"keepLayersOrder=false")},generateHtmlLinkParameters:function(c,f,d){var o=",";var e="+";var p=c.getZoom();var n=c.getX();var b=c.getY();var h="";for(var g=0;g<f.length;g++){var k=f[g];if(h.length>0){h+=o}var m=k.getOpacity();var a;if(k.isBaseLayer()||typeof k.getCurrentStyle!="function"||k.getCurrentStyle()==null||k.getCurrentStyle().getName()==null){a="!default!"}else{a=k.getCurrentStyle().getName()}h+=k.getId()+e+m+e+a}var l="false";if(c.isMarkerVisible()){l="true"}if(d!=null){d="&"+d}else{d=""}var j="?zoomLevel="+p+"&coord="+n+"_"+b+"&mapLayers="+h+"&showMarker="+l+"&forceCache=true"+d;return j},handleDrawPolygonRequest:function(c){var a=c.getPolygon();var b=this.getEventBuilder("AfterDrawPolygonEvent")(a);this.copyObjectCreatorToFrom(b,c);this.dispatch(b)},handleDrawSelectedPolygonRequest:function(c){var a=c.getPolygon();var b=this.getEventBuilder("AfterDrawSelectedPolygonEvent")(a);this.copyObjectCreatorToFrom(b,c);this.dispatch(b)},handleSelectPolygonRequest:function(c){var d=c.getId();var a=c.getGroupId();var b=this.getEventBuilder("AfterSelectPolygonEvent")(d,a);this.copyObjectCreatorToFrom(b,c);this.dispatch(b)},handleUpdateHiddenValueRequest:function(c){var a=c.getPolygon();var b=this.getEventBuilder("AfterUpdateHiddenValueEvent")(a);this.copyObjectCreatorToFrom(b,c);this.dispatch(b)},handleErasePolygonRequest:function(b){var c=b.getId();var a=this.getEventBuilder("AfterErasePolygonEvent")(c);this.copyObjectCreatorToFrom(a,b);this.dispatch(a)},handleRemovePolygonRequest:function(d){var e=d.getId();var a=d.getGroupId();var b=d.getShowPol();var c=this.getEventBuilder("AfterRemovePolygonEvent")(e,a,b);this.copyObjectCreatorToFrom(c,d);this.dispatch(c)},handleHideMapMarkerRequest:function(b){this._map.setMarkerVisible(false);var a=this.getEventBuilder("AfterHideMapMarkerEvent")();this.copyObjectCreatorToFrom(a,b);this.dispatch(a)}});Oskari.clazz.category("Oskari.mapframework.core.Core","status-methods",{handleActionReadyRequest:function(a){var b=a.getId();this._ongoingActions[b]=null;this.notifyModulesThatActionsHaveChanged(a);if(a.isWfsPngAction()){this._currentlyFetchingWfsTiles--}},handleActionStartRequest:function(a){var b=a.getId();this._ongoingActions[b]=a.getActionDescription();this.notifyModulesThatActionsHaveChanged(a);if(a.isWfsPngAction()){this._currentlyFetchingWfsTiles++}},notifyModulesThatActionsHaveChanged:function(e){var a={};for(var b in this._ongoingActions){var g=this._ongoingActions[b];if(g!=null){a[g]=g}}var f=new Array();for(var c in a){if(c!=null&&c!=undefined){f.push(c)}}var d=this.getEventBuilder("ActionStatusesChangedEvent")(f);this.copyObjectCreatorToFrom(d,e);this.dispatch(d)},actionInProgressWfsGrid:function(){var b=this.getText("status_wfs_update_grid");var a=this.getRequestBuilder("ActionStartRequest")("WFS_GRID",b,false);this.handleActionStartRequest(a)},actionInProgressSearch:function(){var b=this.getText("status_search");var a=this.getRequestBuilder("ActionStartRequest")("SEARCH",b,false);this.handleActionStartRequest(a)},actionInProgressGetFeatureInfo:function(){var b=this.getText("status_get_feature_info");var a=this.getRequestBuilder("ActionStartRequest")("GET_FEATURE_INFO",b,false);this.handleActionStartRequest(a)}});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.core.RequestHandler",function(){},{handleRequest:function(a,b){throw"Implement your own"}});Oskari.clazz.define("Oskari.mapframework.core.Core",function(){this._selectedLayers=new Array();this._mapLayersHighlighted=new Array();this._map;this._uiManager;this._sandbox=Oskari.clazz.create("Oskari.mapframework.sandbox.Sandbox",this);Oskari.$("sandbox",this._sandbox);this._services;this._servicesByQName={};this._debug=true;this._mapPublisherWizardUrl;this._doSniffing=false;this._wfsRequestTiler;this._ctrlKeyDown=false;this._ongoingActions={};this._allowMultipleHighlightLayers=false;this._wfsTableQueryId=0;this._currentlyFetchingWfsTiles=0;this._mapIdFromUrl;this._availableRequestsByName={};this._availableEventsByName={}},{init:function(c,f){this.printDebug("Initializing core...");var a=this._sandbox;Oskari.$().mapframework.runtime.components=new Array();this._services=c;if(c){for(var d=0;d<c.length;d++){this._servicesByQName[c[d].getQName()]=c[d]}}this.registerFrameworkComponentToRuntimeEnvironment(this,"core");this.registerFrameworkComponentToRuntimeEnvironment(this._sandbox,"sandbox");this.registerFrameworkComponentToRuntimeEnvironment(this._uiManager,"uiManager");for(var b=0;b<c.length;b++){this.registerFrameworkComponentToRuntimeEnvironment(c[b],c[b].getName())}this.printDebug("Sandbox ready, building up domain...");this.createMapDomain();this.printDebug("Domain ready, creating UI...");this.enhancements=f;var e=this;e.start();this.dispatch(this.getEventBuilder("CoreInitFinishedEvent")())},start:function(){var b=this.enhancements;this.printDebug("UI ready, running enhancements...");this.doEnhancements(b);this.printDebug("Enhancements ready, starting modules...");if(this._doSniffing){this._mapIdFromUrl=this.getRequestParameter("id");this.printDebug("Application configured for sniffing. Starting sniffer.");var a=this.getService("Oskari.mapframework.service.UsageSnifferService");if(a){a.startSniffing()}}if(this._wfsRequestTiler!=null){this._wfsRequestTiler.init()}this.printDebug("Modules started. Core ready.");this.dispatch(this.getEventBuilder("CoreReadyEvent")())},dispatch:function(a){this._sandbox.notifyAll(a)},defaultRequestHandlers:{AddMapLayerRequest:function(a){this.handleAddMapLayerRequest(a);return true},ManageFeaturesRequest:function(a){this.handleManageFeaturesRequest(a);return true},RemoveMapLayerRequest:function(a){this.handleRemoveMapLayerRequest(a);return true},SearchRequest:function(a){this.handleSearchRequest(a);return true},ShowMapLayerInfoRequest:function(a){this.handleShowMapLayerInfoRequest(a);return true},RearrangeSelectedMapLayerRequest:function(a){this.handleRearrangeSelectedMapLayerRequest(a);return true},DisableMapKeyboardMovementRequest:function(a){this.handleDisableMapKeyboardMovementRequest(a);return true},EnableMapKeyboardMovementRequest:function(a){this.handleEnableMapKeyboardMovementRequest(a);return true},ChangeMapLayerOpacityRequest:function(a){this.handleChangeMapLayerOpacityRequest(a);return true},StartMapPublisherRequest:function(a){this.handleStartMapPublisherRequest(a);return true},GenerateHtmlLinkToMapRequest:function(a){this.handleGenerateHtmlLinkToMapRequest(a);return true},GenerateHtmlPrintToMapRequest:function(a){this.handleGenerateHtmlPrintToMapRequest(a);return true},ChangeMapLayerStyleRequest:function(a){this.handleChangeMapLayerStyleRequest(a);return true},DrawPolygonRequest:function(a){this.handleDrawPolygonRequest(a);return true},DrawSelectedPolygonRequest:function(a){this.handleDrawSelectedPolygonRequest(a);return true},SelectPolygonRequest:function(a){this.handleSelectPolygonRequest(a);return true},ErasePolygonRequest:function(a){this.handleErasePolygonRequest(a);return true},UpdateHiddenValueRequest:function(a){this.handleUpdateHiddenValueRequest(a);return true},DeactivateAllOpenlayersMapControlsButNotMeasureToolsRequest:function(a){this.handleDeactivateAllOpenlayersMapControlsButNotMeasureToolsRequest(a);return true},DeactivateAllOpenlayersMapControlsRequest:function(a){this.handleDeactivateAllOpenlayersMapControlsRequest(a);return true
},HighlightMapLayerRequest:function(a){this.handleHighlightMapLayerRequest(a);return true},HighlightWFSFeatureRequest:function(a){this.handleHighlightWFSFeatureRequest(a);return true},HighlightWFSFeatureRequestByGeoPoint:function(a){this.handleHighlightWFSFeatureRequestByGeoPoint(a);return true},RemovePolygonRequest:function(a){this.handleRemovePolygonRequest(a);return true},HideWizardRequest:function(a){this.handleHideWizardRequest(a);return true},ShowWizardRequest:function(a){this.handleShowWizardRequest(a);return true},ShowNetServiceCentreRequest:function(a){this.handleShowNetServiceCentreRequest(a);return true},HideNetServiceCentreRequest:function(a){this.handleHideNetServiceCentreRequest(a);return true},NetServiceCenterRequest:function(a){this.handleNetServiceCenterRequest(a);return true},HideMapMarkerRequest:function(a){this.handleHideMapMarkerRequest(a);return true},UpdateNetServiceCentreRequest:function(a){this.handleUpdateNetServiceCentreRequest(a);return true},ActionStartRequest:function(a){this.handleActionStartRequest(a);return true},ActionReadyRequest:function(a){this.handleActionReadyRequest(a);return true},DimMapLayerRequest:function(a){this.handleDimMapLayerRequest(a);return true},CtrlKeyDownRequest:function(a){this.handleCtrlKeyDownRequest(a);return true},CtrlKeyUpRequest:function(a){this.handleCtrlKeyUpRequest(a);return true},__default:function(a){this.printWarn("!!!");this.printWarn("  There is no handler for");this.printWarn("  '"+a.getName()+"'");return false}},processRequest:function(c){var d=c.getName();var b=this.defaultRequestHandlers[d];if(b){rv=b.apply(this,[c])}else{var a=this.externalHandlerCls[d];if(a){rv=a.handleRequest(this,c)}else{b=this.defaultRequestHandlers.__default;rv=b.apply(this,[c])}}delete c;return rv},externalHandlerCls:{},addRequestHandler:function(b,a){this.externalHandlerCls[b]=a},removeRequestHandler:function(b,a){if(this.externalHandlerCls[b]===a){this.externalHandlerCls[b]=null}},getQNameForRequest:function(b){var e=this._availableRequestsByName[b];if(!e){this.printDebug("#!#!# ! Updating request metadata...");var d=Oskari.clazz.protocol("Oskari.mapframework.request.Request");for(p in d){var c=d[p];var a=c._class.prototype.getName();this._availableRequestsByName[a]=p}this.printDebug("#!#!# ! Finished Updating request metadata...");e=this._availableRequestsByName[b]}return e},createRequest:function(){arguments[0]=this.getQNameForRequest(arguments[0]);var a=Oskari.clazz.createArrArgs(arguments);return a},getRequestBuilder:function(){var a=this.getQNameForRequest(arguments[0]);return Oskari.clazz.builder(a)},getQNameForEvent:function(b){var e=this._availableEventsByName[b];if(!e){this.printDebug("#!#!# ! Updating event metadata...");var d=Oskari.clazz.protocol("Oskari.mapframework.event.Event");for(p in d){var c=d[p];var a=c._class.prototype.getName();this._availableEventsByName[a]=p}this.printDebug("#!#!# ! Finished Updating event metadata...");e=this._availableEventsByName[b]}return e},createEvent:function(){arguments[0]=this.getQNameForEvent(arguments[0]);var a=Oskari.clazz.createArrArgs(arguments);return a},getEventBuilder:function(){var a=this.getQNameForEvent(arguments[0]);return Oskari.clazz.builder(a)},disableDebug:function(){this._debug=false},enableMapMovementLogging:function(){this._doSniffing=true},printDebug:function(a){if(this._debug&&window.console!=null){if(window.console.debug!=null){console.debug(a)}else{if(window.console.log!=null){console.log(a)}}}},printWarn:function(a){if(window.console!=null){console.warn(a)}},getService:function(a){var b=this._servicesByQName[a];if(b){return b}throw"Cannot find service with type '"+a+"'"},findRegisteredModule:function(a){return this._sandbox.findRegisteredModule},getMap:function(){return this._map},registerFrameworkComponentToRuntimeEnvironment:function(b,a){this.printDebug("registering framework component '"+a+"' to runtime");Oskari.$().mapframework.runtime.components[a]=b},unregisterFrameworkComponentFromRuntimeEnvironment:function(b,a){this.printDebug("unregistering framework component '"+a+"' from runtime");Oskari.$().mapframework.runtime.components[a]=null
},getSandbox:function(){return this._sandbox},getCountOfWfsTilesBeingFetched:function(){return this._currentlyFetchingWfsTiles},checkArrayIfTheseAreSame:function(b){if(b.length>1){var c=b[0];for(var a=1;a<b.length;a++){if(b[a]!=c&&b[a]!=null){return false}}return true}else{return false}},scheduleMapLayerRearrangeAfterWfsMapTilesAreReady:function(){},getLanguage:function(){return Oskari.getLang()},getBrowserWindowSize:function(){if(jQuery.browser.opera&&window.innerHeight!=null){var a=window.innerHeight}var c=jQuery(window).width();var b={};b.height=jQuery(window).height();b.width=c;this.printDebug("Got browser window size is: width: "+b.width+" px, height:"+b.height+" px.");return b},getRequestParameter:function(b){b=b.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var a="[\\?&]"+b+"=([^&#]*)";var d=new RegExp(a);var c=d.exec(window.location.href);if(c==null){return null}else{return c[1]}},domSelector:function(a){return jQuery(a)},getObjectName:function(a){return a.__name},getObjectCreator:function(a){return a._creator},setObjectCreator:function(b,a){b._creator=a},copyObjectCreatorToFrom:function(b,a){b._creator=a._creator}});Oskari.clazz.category("Oskari.mapframework.core.Core","build-domain-methods",{createMapLayerDomain:function(d){if(!d||!d.layers){return}var a=this.getService("Oskari.mapframework.service.MapLayerService");var e=d.layers;for(var c=0;c<e.length;c++){var b=a.createMapLayer(e[c]);a.addLayer(b,true)}},createMapDomain:function(){this._map=Oskari.clazz.create("Oskari.mapframework.domain.Map");return this._map}});Oskari.clazz.category("Oskari.mapframework.core.Core","enhancement-methods",{doEnhancements:function(b){for(var a=0;a<b.length;a++){b[a].enhance(this)}}});Oskari.clazz.category("Oskari.mapframework.core.Core","language-methods",{getText:function(a,b){},showPopupText:function(b,d,c){var a=this.getService("Oskari.mapframework.service.LanguageService");return a.showPopup(b,d,c)}});Oskari.clazz.category("Oskari.mapframework.core.Core","feature-key-listener-methods",{handleCtrlKeyDownRequest:function(a){this._ctrlKeyDown=true},handleCtrlKeyUpRequest:function(a){this._ctrlKeyDown=false},isCtrlKeyDown:function(){return this._ctrlKeyDown}});Oskari.clazz.define("Oskari.mapframework.event.CoreInitFinishedEvent",function(c,b,a){},{__name:"CoreInitFinishedEvent",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.CoreReadyEvent",function(c,b,a){},{__name:"CoreReadyEvent",getName:function(){return this.__name}},{protocol:["Oskari.mapframework.event.Event"]});Oskari.clazz.define("Oskari.mapframework.event.ToolSelectedEvent",function(a){this._toolId=a;this._origin=null},{__name:"ToolSelectedEvent",getName:function(){return this.__name},getToolId:function(){return this._toolId},setToolId:function(a){this._toolId=a},getOrigin:function(){return this._origin},setOrigin:function(a){this._origin=a},getNamespace:function(){if(this._toolId.indexOf(".")==-1){return""}return this._toolId.substring(0,this._toolId.lastIndexOf("."))},getToolName:function(){if(this._toolId.indexOf(".")==-1){return this._toolId}return this._toolId.substring(this._toolId.lastIndexOf("."))}},{protocol:["Oskari.mapframework.event.Event"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.framework.bundle.coordinatedisplay.CoordinateDisplayBundleInstance",function(){this.sandbox=null;this.started=false;this.plugins={};this.yuilibrary=null;this.mediator=null},{__name:"coordinatedisplay",getName:function(){var a=this;return a.__name},__title:"Coordinate Display",getTitle:function(){var a=this;return a.__title},__description:"Coordinate Display",getDescription:function(){var a=this;return a.__description},setSandbox:function(a){var b=this;b.sandbox=a},getSandbox:function(){var a=this;return a.sandbox},update:function(){var a=this},startExtension:function(){var b=this;var a=Oskari.clazz.create("Oskari.framework.bundle.coordinatedisplay.CoordinateDisplayDiv",b);a.setParent(jQuery("#mapdiv"));b.plugins["Oskari.userinterface.SimpleDiv"]=a},stopExtension:function(){var a=this;for(var b in a.plugins){if(b){a.plugins[b]=null}}},getPlugins:function(){var a=this;return a.plugins},start:function(){var c=this;if(c.started){return}c.started=true;var a=Oskari.$("sandbox");a.register(c);c.setSandbox(a);for(var d in c.eventHandlers){if(d){a.registerForEventByName(c,d)}}var b=a.getRequestBuilder("userinterface.AddExtensionRequest")(this);a.request(this,b);c.mediator.bundle.require(function(){c.draw()})},init:function(){var a=this;return null},onEvent:function(c){var b=this;var a=b.eventHandlers[c.getName()];if(!a){return}return a.apply(this,[c])},eventHandlers:{MouseHoverEvent:function(b){var a=this;a.plugins["Oskari.userinterface.SimpleDiv"].refresh({latlon:{lat:Math.floor(b.getLat()),lon:Math.floor(b.getLon())}})}},stop:function(){var c=this;var a=c.sandbox();for(var d in c.eventHandlers){if(d){a.unregisterFromEventByName(c,d)}}var b=a.getRequestBuilder("userinterface.RemoveExtensionRequest")(c);a.request(c,b);c.sandbox.unregister(c);c.started=false},draw:function(){var a=this;for(var b in a.plugins){if(b){a.plugins[b].draw()}}}},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.module.Module","Oskari.userinterface.Extension"]});Oskari.clazz.define("Oskari.framework.bundle.coordinatedisplay.CoordinateDisplayDiv",function(){this.__parent=null;this.__elements={};this.__templates={};this.__templates.latlondiv=jQuery('<div class="cbDiv"> <div class="cbSpansWrapper"> <div class="cbRow">  <span class="cbLabel" axis="lat">N: </span>  <span class="cbValue" axis="lat"></span> </div> <div class="cbRow">  <span class="cbLabel" axis="lon">E: </span>  <span class="cbValue" axis="lon"></span> </div> </div> <div class="cbSelection">  <div style="float:left">ETRS89</div>  <div class="cbArrowDown"></div>  <br clear="both"> </div></div>')},{__name:"Oskari.framework.bundle.coordinatedisplay.CoordinateDisplayDiv",getName:function(){var a=this;return a.__name},setParent:function(b){var a=this;if(a.__parent){a.__parent.detach(a.__elements.etrs89)}if(b){a.__parent=b;if(a.__elements.etrs89){a.__parent.append(a.__elements.etrs89)}}},getParent:function(){var a=this;return a.__parent},getElement:function(){var a=this;return a.__elements.etrs89},startPlugin:function(){var a=this},stopPlugin:function(){var a=this;a.setParent(null);a.__elements.etrs89=null},draw:function(){var a=this;if(!a.__parent){a.__parent=document}if(!a.__elements.etrs89){a.__elements.etrs89=a.__templates.latlondiv.clone()}jQuery(a.__parent).append(a.__elements.etrs89);jQuery(a.__elements.etrs89).show()},refresh:function(d){if(!(d.type==b)){throw ("CoordinateDisplay.refresh() can not find 'latlon' in args!")}var c=this;var b=d.latlon;var e=c.__elements.etrs89.find('.cbValue[axis="lat"]');var a=c.__elements.etrs89.find('.cbValue[axis="lon"]');if(e&&a){e.text(b.lat);a.text(b.lon)}else{throw ("CoordinateDisplay.refresh() could not find spans!")}}},{protocol:["Oskari.userinterface.SimpleDiv"]});/* This is a packed Oskari bundle (bundle script version Thu May 31 2012 12:23:19 GMT+0300 (Suomen kes채aika)) */ 
Oskari.clazz.define("Oskari.mapframework.enhancement.common.DisableDevelopmentModeEnhancement",function(a){this._enableMapMovementLogging=a},{enhance:function(a){a.disableDebug();if(this._enableMapMovementLogging){a.enableMapMovementLogging()}}},{protocol:["Oskari.mapframework.enhancement.Enhancement"]});Oskari.clazz.define("Oskari.mapframework.enhancement.common.SetDefaultMapControlActiveEnhancement",function(a){this._controlId=a},{enhance:function(c){c.printDebug("[SetDefaultMapControlActiveEnhancement] Requesting '"+this._controlId+"' ");var a=c.getRequestBuilder("ToolSelectionRequest");var d=a(this._controlId);c.processRequest(d)},setControl:function(a){this._controlId=a},CONTROL_NAME_NAVIGATE:"map_control_select_tool"},{protocol:["Oskari.mapframework.enhancement.Enhancement"]});Oskari.clazz.define("Oskari.mapframework.enhancement.common.OpenLayersImagePathEnhancement",function(){},{getName:function(){return"OpenLayersImagePathEnhancement"},enhance:function(a){OpenLayers.ImgPath=Oskari.$().startup.imageLocation+"/lib/openlayers/img/"}},{protocol:["Oskari.mapframework.enhancement.Enhancement"]});